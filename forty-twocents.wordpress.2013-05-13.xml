<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.5.1" created="2013-05-13 06:07" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>forty-two cents</title>
	<link>http://www.glxn.net</link>
	<description></description>
	<pubDate>Mon, 13 May 2013 06:07:47 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.glxn.net</wp:base_site_url>
	<wp:base_blog_url>http://www.glxn.net</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>ken@glxn.net</wp:author_email><wp:author_display_name><![CDATA[Ken Gullaksen]]></wp:author_display_name><wp:author_first_name><![CDATA[Ken]]></wp:author_first_name><wp:author_last_name><![CDATA[Gullaksen]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>android</wp:tag_slug><wp:tag_name><![CDATA[android]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>arquillian</wp:tag_slug><wp:tag_name><![CDATA[arquillian]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>bash</wp:tag_slug><wp:tag_name><![CDATA[bash]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>cdi</wp:tag_slug><wp:tag_name><![CDATA[cdi]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>ejb3</wp:tag_slug><wp:tag_name><![CDATA[EJB3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>git</wp:tag_slug><wp:tag_name><![CDATA[git]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>github</wp:tag_slug><wp:tag_name><![CDATA[github]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>idea</wp:tag_slug><wp:tag_name><![CDATA[idea]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>intellij</wp:tag_slug><wp:tag_name><![CDATA[intellij]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[Java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>2</wp:term_id><wp:tag_slug>javaee</wp:tag_slug><wp:tag_name><![CDATA[JavaEE]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>jboss</wp:tag_slug><wp:tag_name><![CDATA[JBoss]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>linux</wp:tag_slug><wp:tag_name><![CDATA[Linux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>maven</wp:tag_slug><wp:tag_name><![CDATA[maven]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>pomodoro</wp:tag_slug><wp:tag_name><![CDATA[pomodoro]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>pomodorotechnique</wp:tag_slug><wp:tag_name><![CDATA[pomodorotechnique]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>qrcode</wp:tag_slug><wp:tag_name><![CDATA[qrcode]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug>seam</wp:tag_slug><wp:tag_name><![CDATA[Seam]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>shrinkwrap</wp:tag_slug><wp:tag_name><![CDATA[shrinkwrap]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>spotify</wp:tag_slug><wp:tag_name><![CDATA[spotify]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>sudoku</wp:tag_slug><wp:tag_name><![CDATA[sudoku]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>swing</wp:tag_slug><wp:tag_name><![CDATA[swing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>testing</wp:tag_slug><wp:tag_name><![CDATA[Testing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>weld</wp:tag_slug><wp:tag_name><![CDATA[weld]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>zxing</wp:tag_slug><wp:tag_name><![CDATA[zxing]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=3.5.1</generator>

	<item>
		<title>Ken Gullaksen</title>
		<link>http://www.glxn.net/?attachment_id=19</link>
		<pubDate>Sun, 01 Nov 2009 19:05:58 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/wp-content/uploads/2009/10/mesml.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Ken Gullaksen profile image]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2009-11-01 20:05:58</wp:post_date>
		<wp:post_date_gmt>2009-11-01 19:05:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mesml</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>7</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2009/10/mesml.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/mesml.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:2:"44";s:6:"height";s:2:"54";s:14:"hwstring_small";s:22:"height='54' width='44'";s:4:"file";s:17:"2009/10/mesml.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>spotify</title>
		<link>http://www.glxn.net/?attachment_id=38</link>
		<pubDate>Mon, 09 Nov 2009 20:54:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/wp-content/uploads/2009/11/spotify.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2009-11-09 21:54:23</wp:post_date>
		<wp:post_date_gmt>2009-11-09 20:54:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spotify</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>37</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2009/11/spotify.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/11/spotify.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"800";s:6:"height";s:3:"530";s:14:"hwstring_small";s:23:"height='84' width='128'";s:4:"file";s:19:"2009/11/spotify.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>architecture</title>
		<link>http://www.glxn.net/?attachment_id=81</link>
		<pubDate>Wed, 30 Dec 2009 22:34:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/wp-content/uploads/2009/12/architecture.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2009-12-30 23:34:03</wp:post_date>
		<wp:post_date_gmt>2009-12-30 22:34:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>architecture</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>80</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2009/12/architecture.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/12/architecture.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:4:"1024";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:24:"2009/12/architecture.gif";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>architecture</title>
		<link>http://www.glxn.net/?attachment_id=82</link>
		<pubDate>Wed, 30 Dec 2009 22:34:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/wp-content/uploads/2009/12/architecture1.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>82</wp:post_id>
		<wp:post_date>2009-12-30 23:34:16</wp:post_date>
		<wp:post_date_gmt>2009-12-30 22:34:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>architecture-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>80</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2009/12/architecture1.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/12/architecture1.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:4:"1024";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:25:"2009/12/architecture1.gif";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pdf-icon-sml</title>
		<link>http://www.glxn.net/?attachment_id=102</link>
		<pubDate>Thu, 07 Jan 2010 17:09:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/wp-content/uploads/2009/10/pdf-icon-sml.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date>2010-01-07 18:09:04</wp:post_date>
		<wp:post_date_gmt>2010-01-07 17:09:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pdf-icon-sml</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>7</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2009/10/pdf-icon-sml.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/pdf-icon-sml.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:2:"26";s:6:"height";s:2:"26";s:14:"hwstring_small";s:22:"height='26' width='26'";s:4:"file";s:24:"2009/10/pdf-icon-sml.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pdf-icon-sml</title>
		<link>http://www.glxn.net/?attachment_id=103</link>
		<pubDate>Thu, 07 Jan 2010 17:10:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/wp-content/uploads/2009/10/pdf-icon-sml1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date>2010-01-07 18:10:10</wp:post_date>
		<wp:post_date_gmt>2010-01-07 17:10:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pdf-icon-sml-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>7</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2009/10/pdf-icon-sml1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/pdf-icon-sml1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:2:"26";s:6:"height";s:2:"26";s:14:"hwstring_small";s:22:"height='26' width='26'";s:4:"file";s:25:"2009/10/pdf-icon-sml1.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Prosjektfiler_Prospekter_Prospekt Thonsåsen</title>
		<link>http://www.glxn.net/?attachment_id=115</link>
		<pubDate>Sun, 17 Jan 2010 16:25:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/wp-content/uploads/2010/01/Prosjektfiler_Prospekter_Prospekt-Thonsåsen.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date>2010-01-17 17:25:35</wp:post_date>
		<wp:post_date_gmt>2010-01-17 16:25:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>prosjektfiler_prospekter_prospekt-thonsasen</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>55</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/01/Prosjektfiler_Prospekter_Prospekt-Thonsåsen.pdf</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/01/Prosjektfiler_Prospekter_Prospekt-Thonsåsen.pdf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>arquillian-greentestrun</title>
		<link>http://www.glxn.net/?attachment_id=176</link>
		<pubDate>Wed, 24 Mar 2010 07:57:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/wp-content/uploads/2010/03/arquillian-greentestrun.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2010-03-24 08:57:09</wp:post_date>
		<wp:post_date_gmt>2010-03-24 07:57:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>arquillian-greentestrun</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>175</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/03/arquillian-greentestrun.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/03/arquillian-greentestrun.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"677";s:6:"height";s:3:"316";s:14:"hwstring_small";s:23:"height='59' width='128'";s:4:"file";s:35:"2010/03/arquillian-greentestrun.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"arquillian-greentestrun-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:35:"arquillian-greentestrun-300x140.png";s:5:"width";s:3:"300";s:6:"height";s:3:"140";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>arquillian-serverlog</title>
		<link>http://www.glxn.net/?attachment_id=177</link>
		<pubDate>Wed, 24 Mar 2010 07:57:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/wp-content/uploads/2010/03/arquillian-serverlog.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>177</wp:post_id>
		<wp:post_date>2010-03-24 08:57:31</wp:post_date>
		<wp:post_date_gmt>2010-03-24 07:57:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>arquillian-serverlog</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>175</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/03/arquillian-serverlog.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/03/arquillian-serverlog.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"625";s:6:"height";s:3:"314";s:14:"hwstring_small";s:23:"height='64' width='128'";s:4:"file";s:32:"2010/03/arquillian-serverlog.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:32:"arquillian-serverlog-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:32:"arquillian-serverlog-300x150.png";s:5:"width";s:3:"300";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>arquillian-redtestrun</title>
		<link>http://www.glxn.net/?attachment_id=178</link>
		<pubDate>Wed, 24 Mar 2010 07:57:53 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/wp-content/uploads/2010/03/arquillian-redtestrun.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2010-03-24 08:57:53</wp:post_date>
		<wp:post_date_gmt>2010-03-24 07:57:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>arquillian-redtestrun</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>175</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/03/arquillian-redtestrun.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/03/arquillian-redtestrun.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"313";s:14:"hwstring_small";s:23:"height='62' width='128'";s:4:"file";s:33:"2010/03/arquillian-redtestrun.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:33:"arquillian-redtestrun-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:33:"arquillian-redtestrun-300x146.png";s:5:"width";s:3:"300";s:6:"height";s:3:"146";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jSudokuSolver</title>
		<link>http://www.glxn.net/?attachment_id=234</link>
		<pubDate>Mon, 05 Apr 2010 16:19:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/04/jSudokuSolver.zip</guid>
		<description></description>
		<content:encoded><![CDATA[sudoku solver implemented using swing/java]]></content:encoded>
		<excerpt:encoded><![CDATA[java swing sudoku solver ]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2010-04-05 18:19:45</wp:post_date>
		<wp:post_date_gmt>2010-04-05 16:19:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jsudokusolver</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/04/jSudokuSolver.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/04/jSudokuSolver.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sample</title>
		<link>http://www.glxn.net/?attachment_id=239</link>
		<pubDate>Mon, 05 Apr 2010 16:31:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/04/sample.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date>2010-04-05 18:31:39</wp:post_date>
		<wp:post_date_gmt>2010-04-05 16:31:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>226</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/04/sample.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"381";s:6:"height";s:3:"453";s:14:"hwstring_small";s:22:"height='96' width='80'";s:4:"file";s:18:"2010/04/sample.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"sample-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"sample-252x300.png";s:5:"width";s:3:"252";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/04/sample.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sample-solved</title>
		<link>http://www.glxn.net/?attachment_id=240</link>
		<pubDate>Mon, 05 Apr 2010 16:33:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/04/sample-solved.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>240</wp:post_id>
		<wp:post_date>2010-04-05 18:33:05</wp:post_date>
		<wp:post_date_gmt>2010-04-05 16:33:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample-solved</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>226</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/04/sample-solved.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/04/sample-solved.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"381";s:6:"height";s:3:"453";s:14:"hwstring_small";s:22:"height='96' width='80'";s:4:"file";s:25:"2010/04/sample-solved.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"sample-solved-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"sample-solved-252x300.png";s:5:"width";s:3:"252";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sample-solved</title>
		<link>http://www.glxn.net/?attachment_id=241</link>
		<pubDate>Mon, 05 Apr 2010 16:33:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/04/sample-solved1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>241</wp:post_id>
		<wp:post_date>2010-04-05 18:33:22</wp:post_date>
		<wp:post_date_gmt>2010-04-05 16:33:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample-solved-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>226</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/04/sample-solved1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/04/sample-solved1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"381";s:6:"height";s:3:"453";s:14:"hwstring_small";s:22:"height='96' width='80'";s:4:"file";s:26:"2010/04/sample-solved1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"sample-solved1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"sample-solved1-252x300.png";s:5:"width";s:3:"252";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sample</title>
		<link>http://www.glxn.net/?attachment_id=242</link>
		<pubDate>Mon, 05 Apr 2010 16:33:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/04/sample1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>242</wp:post_id>
		<wp:post_date>2010-04-05 18:33:52</wp:post_date>
		<wp:post_date_gmt>2010-04-05 16:33:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>226</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/04/sample1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/04/sample1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"381";s:6:"height";s:3:"453";s:14:"hwstring_small";s:22:"height='96' width='80'";s:4:"file";s:19:"2010/04/sample1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"sample1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"sample1-252x300.png";s:5:"width";s:3:"252";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sample</title>
		<link>http://www.glxn.net/?attachment_id=244</link>
		<pubDate>Mon, 05 Apr 2010 16:34:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/04/sample2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>244</wp:post_id>
		<wp:post_date>2010-04-05 18:34:40</wp:post_date>
		<wp:post_date_gmt>2010-04-05 16:34:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>226</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/04/sample2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/04/sample2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"381";s:6:"height";s:3:"453";s:14:"hwstring_small";s:22:"height='96' width='80'";s:4:"file";s:19:"2010/04/sample2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"sample2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"sample2-252x300.png";s:5:"width";s:3:"252";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot of module settings in create new project</title>
		<link>http://www.glxn.net/?attachment_id=281</link>
		<pubDate>Tue, 17 Aug 2010 16:15:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/mvnmodule.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>281</wp:post_id>
		<wp:post_date>2010-08-17 18:15:10</wp:post_date>
		<wp:post_date_gmt>2010-08-17 16:15:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mvnmodule</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/mvnmodule.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/mvnmodule.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"800";s:6:"height";s:3:"663";s:14:"hwstring_small";s:23:"height='96' width='115'";s:4:"file";s:21:"2010/08/mvnmodule.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"mvnmodule-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"mvnmodule-300x248.png";s:5:"width";s:3:"300";s:6:"height";s:3:"248";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Create new project from scratch</title>
		<link>http://www.glxn.net/?attachment_id=283</link>
		<pubDate>Tue, 17 Aug 2010 16:21:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/createproj.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>283</wp:post_id>
		<wp:post_date>2010-08-17 18:21:09</wp:post_date>
		<wp:post_date_gmt>2010-08-17 16:21:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>createproj</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/createproj.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/createproj.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"800";s:6:"height";s:3:"663";s:14:"hwstring_small";s:23:"height='96' width='115'";s:4:"file";s:22:"2010/08/createproj.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"createproj-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"createproj-300x248.png";s:5:"width";s:3:"300";s:6:"height";s:3:"248";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>finish creating project dialog</title>
		<link>http://www.glxn.net/?attachment_id=284</link>
		<pubDate>Tue, 17 Aug 2010 16:22:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/fin.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>284</wp:post_id>
		<wp:post_date>2010-08-17 18:22:45</wp:post_date>
		<wp:post_date_gmt>2010-08-17 16:22:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fin</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/fin.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/fin.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"800";s:6:"height";s:3:"663";s:14:"hwstring_small";s:23:"height='96' width='115'";s:4:"file";s:15:"2010/08/fin.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:15:"fin-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:15:"fin-300x248.png";s:5:"width";s:3:"300";s:6:"height";s:3:"248";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot-New Project-Maven-Module</title>
		<link>http://www.glxn.net/?attachment_id=288</link>
		<pubDate>Tue, 17 Aug 2010 18:53:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-New-Project-Maven-Module.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>288</wp:post_id>
		<wp:post_date>2010-08-17 20:53:12</wp:post_date>
		<wp:post_date_gmt>2010-08-17 18:53:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshot-new-project-maven-module</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-New-Project-Maven-Module.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/Screenshot-New-Project-Maven-Module.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"842";s:6:"height";s:3:"661";s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:47:"2010/08/Screenshot-New-Project-Maven-Module.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:47:"Screenshot-New-Project-Maven-Module-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:47:"Screenshot-New-Project-Maven-Module-300x235.png";s:5:"width";s:3:"300";s:6:"height";s:3:"235";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot-New Project</title>
		<link>http://www.glxn.net/?attachment_id=289</link>
		<pubDate>Tue, 17 Aug 2010 18:54:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-New-Project.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>289</wp:post_id>
		<wp:post_date>2010-08-17 20:54:07</wp:post_date>
		<wp:post_date_gmt>2010-08-17 18:54:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshot-new-project</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-New-Project.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/Screenshot-New-Project.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"842";s:6:"height";s:3:"661";s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:34:"2010/08/Screenshot-New-Project.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:34:"Screenshot-New-Project-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:34:"Screenshot-New-Project-300x235.png";s:5:"width";s:3:"300";s:6:"height";s:3:"235";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot-New Project-Finish</title>
		<link>http://www.glxn.net/?attachment_id=290</link>
		<pubDate>Tue, 17 Aug 2010 18:54:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-New-Project-Finish.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2010-08-17 20:54:40</wp:post_date>
		<wp:post_date_gmt>2010-08-17 18:54:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshot-new-project-finish</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-New-Project-Finish.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/Screenshot-New-Project-Finish.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"842";s:6:"height";s:3:"661";s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:41:"2010/08/Screenshot-New-Project-Finish.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:41:"Screenshot-New-Project-Finish-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:41:"Screenshot-New-Project-Finish-300x235.png";s:5:"width";s:3:"300";s:6:"height";s:3:"235";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot-JMSUtility</title>
		<link>http://www.glxn.net/?attachment_id=291</link>
		<pubDate>Tue, 17 Aug 2010 18:58:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-JMSUtility.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date>2010-08-17 20:58:23</wp:post_date>
		<wp:post_date_gmt>2010-08-17 18:58:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshot-jmsutility</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-JMSUtility.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/Screenshot-JMSUtility.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1347";s:6:"height";s:3:"462";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:33:"2010/08/Screenshot-JMSUtility.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:33:"Screenshot-JMSUtility-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:33:"Screenshot-JMSUtility-300x102.png";s:5:"width";s:3:"300";s:6:"height";s:3:"102";}s:5:"large";a:3:{s:4:"file";s:34:"Screenshot-JMSUtility-1024x351.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"351";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ScreenshotNewProject</title>
		<link>http://www.glxn.net/?attachment_id=297</link>
		<pubDate>Tue, 17 Aug 2010 19:25:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/ScreenshotNewProject.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>297</wp:post_id>
		<wp:post_date>2010-08-17 21:25:39</wp:post_date>
		<wp:post_date_gmt>2010-08-17 19:25:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshotnewproject</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/ScreenshotNewProject.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/ScreenshotNewProject.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"842";s:6:"height";s:3:"661";s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:32:"2010/08/ScreenshotNewProject.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:32:"ScreenshotNewProject-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:32:"ScreenshotNewProject-300x235.png";s:5:"width";s:3:"300";s:6:"height";s:3:"235";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ScreenshotNewProject</title>
		<link>http://www.glxn.net/?attachment_id=299</link>
		<pubDate>Tue, 17 Aug 2010 19:28:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/ScreenshotNewProject1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>299</wp:post_id>
		<wp:post_date>2010-08-17 21:28:06</wp:post_date>
		<wp:post_date_gmt>2010-08-17 19:28:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshotnewproject-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/ScreenshotNewProject1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/ScreenshotNewProject1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"700";s:6:"height";s:3:"550";s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:33:"2010/08/ScreenshotNewProject1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:33:"ScreenshotNewProject1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:33:"ScreenshotNewProject1-300x235.png";s:5:"width";s:3:"300";s:6:"height";s:3:"235";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>newproject</title>
		<link>http://www.glxn.net/?attachment_id=303</link>
		<pubDate>Wed, 18 Aug 2010 04:08:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/newproject.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>303</wp:post_id>
		<wp:post_date>2010-08-18 06:08:04</wp:post_date>
		<wp:post_date_gmt>2010-08-18 04:08:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>newproject</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/newproject.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/newproject.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"842";s:6:"height";s:3:"661";s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:22:"2010/08/newproject.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"newproject-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"newproject-300x235.png";s:5:"width";s:3:"300";s:6:"height";s:3:"235";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>newpackage</title>
		<link>http://www.glxn.net/?attachment_id=320</link>
		<pubDate>Wed, 18 Aug 2010 06:36:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/newpackage.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>320</wp:post_id>
		<wp:post_date>2010-08-18 08:36:55</wp:post_date>
		<wp:post_date_gmt>2010-08-18 06:36:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>newpackage</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/newpackage.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/newpackage.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1057";s:6:"height";s:3:"815";s:14:"hwstring_small";s:23:"height='96' width='124'";s:4:"file";s:22:"2010/08/newpackage.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"newpackage-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"newpackage-300x231.png";s:5:"width";s:3:"300";s:6:"height";s:3:"231";}s:5:"large";a:3:{s:4:"file";s:23:"newpackage-1024x789.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"789";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>packagename</title>
		<link>http://www.glxn.net/?attachment_id=321</link>
		<pubDate>Wed, 18 Aug 2010 06:39:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/packagename.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>321</wp:post_id>
		<wp:post_date>2010-08-18 08:39:31</wp:post_date>
		<wp:post_date_gmt>2010-08-18 06:39:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>packagename</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/packagename.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/packagename.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1054";s:6:"height";s:3:"815";s:14:"hwstring_small";s:23:"height='96' width='124'";s:4:"file";s:23:"2010/08/packagename.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"packagename-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"packagename-300x231.png";s:5:"width";s:3:"300";s:6:"height";s:3:"231";}s:5:"large";a:3:{s:4:"file";s:24:"packagename-1024x791.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"791";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>newguiform</title>
		<link>http://www.glxn.net/?attachment_id=322</link>
		<pubDate>Wed, 18 Aug 2010 06:44:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/newguiform.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>322</wp:post_id>
		<wp:post_date>2010-08-18 08:44:00</wp:post_date>
		<wp:post_date_gmt>2010-08-18 06:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>newguiform</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/newguiform.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/newguiform.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1057";s:6:"height";s:3:"815";s:14:"hwstring_small";s:23:"height='96' width='124'";s:4:"file";s:22:"2010/08/newguiform.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"newguiform-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"newguiform-300x231.png";s:5:"width";s:3:"300";s:6:"height";s:3:"231";}s:5:"large";a:3:{s:4:"file";s:23:"newguiform-1024x789.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"789";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>newguiformname</title>
		<link>http://www.glxn.net/?attachment_id=323</link>
		<pubDate>Wed, 18 Aug 2010 06:45:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/newguiformname.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>323</wp:post_id>
		<wp:post_date>2010-08-18 08:45:08</wp:post_date>
		<wp:post_date_gmt>2010-08-18 06:45:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>newguiformname</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/newguiformname.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/newguiformname.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1058";s:6:"height";s:3:"812";s:14:"hwstring_small";s:23:"height='96' width='125'";s:4:"file";s:26:"2010/08/newguiformname.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"newguiformname-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"newguiformname-300x230.png";s:5:"width";s:3:"300";s:6:"height";s:3:"230";}s:5:"large";a:3:{s:4:"file";s:27:"newguiformname-1024x785.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"785";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>guibuilder</title>
		<link>http://www.glxn.net/?attachment_id=324</link>
		<pubDate>Wed, 18 Aug 2010 06:54:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/guibuilder.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>324</wp:post_id>
		<wp:post_date>2010-08-18 08:54:36</wp:post_date>
		<wp:post_date_gmt>2010-08-18 06:54:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>guibuilder</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/guibuilder.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/guibuilder.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1125";s:6:"height";s:3:"694";s:14:"hwstring_small";s:23:"height='78' width='128'";s:4:"file";s:22:"2010/08/guibuilder.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"guibuilder-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"guibuilder-300x185.png";s:5:"width";s:3:"300";s:6:"height";s:3:"185";}s:5:"large";a:3:{s:4:"file";s:23:"guibuilder-1024x631.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"631";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>guibuilderitemsadded</title>
		<link>http://www.glxn.net/?attachment_id=325</link>
		<pubDate>Wed, 18 Aug 2010 06:55:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/guibuilderitemsadded.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>325</wp:post_id>
		<wp:post_date>2010-08-18 08:55:11</wp:post_date>
		<wp:post_date_gmt>2010-08-18 06:55:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>guibuilderitemsadded</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/guibuilderitemsadded.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/guibuilderitemsadded.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1299";s:6:"height";s:3:"732";s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:32:"2010/08/guibuilderitemsadded.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:32:"guibuilderitemsadded-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:32:"guibuilderitemsadded-300x169.png";s:5:"width";s:3:"300";s:6:"height";s:3:"169";}s:5:"large";a:3:{s:4:"file";s:33:"guibuilderitemsadded-1024x577.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"577";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>runclient</title>
		<link>http://www.glxn.net/?attachment_id=336</link>
		<pubDate>Thu, 19 Aug 2010 16:27:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/runclient.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>336</wp:post_id>
		<wp:post_date>2010-08-19 18:27:52</wp:post_date>
		<wp:post_date_gmt>2010-08-19 16:27:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>runclient</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/runclient.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/runclient.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"789";s:6:"height";s:3:"600";s:14:"hwstring_small";s:23:"height='96' width='126'";s:4:"file";s:21:"2010/08/runclient.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"runclient-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"runclient-300x228.png";s:5:"width";s:3:"300";s:6:"height";s:3:"228";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>runclient2</title>
		<link>http://www.glxn.net/?attachment_id=337</link>
		<pubDate>Thu, 19 Aug 2010 16:28:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/runclient2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>337</wp:post_id>
		<wp:post_date>2010-08-19 18:28:45</wp:post_date>
		<wp:post_date_gmt>2010-08-19 16:28:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>runclient2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/runclient2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/runclient2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"299";s:6:"height";s:3:"384";s:14:"hwstring_small";s:22:"height='96' width='74'";s:4:"file";s:22:"2010/08/runclient2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"runclient2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"runclient2-233x300.png";s:5:"width";s:3:"233";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>testrun-idea</title>
		<link>http://www.glxn.net/?attachment_id=338</link>
		<pubDate>Thu, 19 Aug 2010 16:31:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/testrun-idea.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>338</wp:post_id>
		<wp:post_date>2010-08-19 18:31:55</wp:post_date>
		<wp:post_date_gmt>2010-08-19 16:31:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testrun-idea</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/testrun-idea.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/testrun-idea.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1159";s:6:"height";s:3:"797";s:14:"hwstring_small";s:23:"height='88' width='128'";s:4:"file";s:24:"2010/08/testrun-idea.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"testrun-idea-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"testrun-idea-300x206.png";s:5:"width";s:3:"300";s:6:"height";s:3:"206";}s:5:"large";a:3:{s:4:"file";s:25:"testrun-idea-1024x704.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"704";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>maven-build-fail1</title>
		<link>http://www.glxn.net/?attachment_id=339</link>
		<pubDate>Thu, 19 Aug 2010 16:37:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/maven-build-fail1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>339</wp:post_id>
		<wp:post_date>2010-08-19 18:37:14</wp:post_date>
		<wp:post_date_gmt>2010-08-19 16:37:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maven-build-fail1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/maven-build-fail1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/maven-build-fail1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1423";s:6:"height";s:3:"704";s:14:"hwstring_small";s:23:"height='63' width='128'";s:4:"file";s:29:"2010/08/maven-build-fail1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"maven-build-fail1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:29:"maven-build-fail1-300x148.png";s:5:"width";s:3:"300";s:6:"height";s:3:"148";}s:5:"large";a:3:{s:4:"file";s:30:"maven-build-fail1-1024x506.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"506";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>maven-build-fail2</title>
		<link>http://www.glxn.net/?attachment_id=340</link>
		<pubDate>Thu, 19 Aug 2010 16:44:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/maven-build-fail2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>340</wp:post_id>
		<wp:post_date>2010-08-19 18:44:54</wp:post_date>
		<wp:post_date_gmt>2010-08-19 16:44:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maven-build-fail2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/maven-build-fail2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/maven-build-fail2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1425";s:6:"height";s:3:"700";s:14:"hwstring_small";s:23:"height='62' width='128'";s:4:"file";s:29:"2010/08/maven-build-fail2.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"maven-build-fail2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:29:"maven-build-fail2-300x147.png";s:5:"width";s:3:"300";s:6:"height";s:3:"147";}s:5:"large";a:3:{s:4:"file";s:30:"maven-build-fail2-1024x503.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"503";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>stacktrace-surefire</title>
		<link>http://www.glxn.net/?attachment_id=341</link>
		<pubDate>Thu, 19 Aug 2010 16:50:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/stacktrace-surefire.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>341</wp:post_id>
		<wp:post_date>2010-08-19 18:50:21</wp:post_date>
		<wp:post_date_gmt>2010-08-19 16:50:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stacktrace-surefire</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/stacktrace-surefire.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/stacktrace-surefire.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1315";s:6:"height";s:3:"660";s:14:"hwstring_small";s:23:"height='64' width='128'";s:4:"file";s:31:"2010/08/stacktrace-surefire.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:31:"stacktrace-surefire-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:31:"stacktrace-surefire-300x150.png";s:5:"width";s:3:"300";s:6:"height";s:3:"150";}s:5:"large";a:3:{s:4:"file";s:32:"stacktrace-surefire-1024x513.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"513";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>maven-build-success</title>
		<link>http://www.glxn.net/?attachment_id=343</link>
		<pubDate>Thu, 19 Aug 2010 16:57:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/maven-build-success.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>343</wp:post_id>
		<wp:post_date>2010-08-19 18:57:47</wp:post_date>
		<wp:post_date_gmt>2010-08-19 16:57:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maven-build-success</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/maven-build-success.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/maven-build-success.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1426";s:6:"height";s:3:"700";s:14:"hwstring_small";s:23:"height='62' width='128'";s:4:"file";s:31:"2010/08/maven-build-success.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:31:"maven-build-success-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:31:"maven-build-success-300x147.png";s:5:"width";s:3:"300";s:6:"height";s:3:"147";}s:5:"large";a:3:{s:4:"file";s:32:"maven-build-success-1024x502.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"502";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>run-executable-jar</title>
		<link>http://www.glxn.net/?attachment_id=344</link>
		<pubDate>Thu, 19 Aug 2010 17:12:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/run-executable-jar.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>344</wp:post_id>
		<wp:post_date>2010-08-19 19:12:03</wp:post_date>
		<wp:post_date_gmt>2010-08-19 17:12:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>run-executable-jar</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>279</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/run-executable-jar.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/run-executable-jar.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1353";s:6:"height";s:3:"808";s:14:"hwstring_small";s:23:"height='76' width='128'";s:4:"file";s:30:"2010/08/run-executable-jar.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"run-executable-jar-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:30:"run-executable-jar-300x179.png";s:5:"width";s:3:"300";s:6:"height";s:3:"179";}s:5:"large";a:3:{s:4:"file";s:31:"run-executable-jar-1024x611.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"611";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bio</title>
		<link>http://www.glxn.net/?page_id=7</link>
		<pubDate>Thu, 22 Oct 2009 11:31:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/?page_id=7</guid>
		<description></description>
		<content:encoded><![CDATA[<table style="height: 222px;" border="0">
<tbody>
<tr>
<td><strong>name</strong></td>
<td>Ken Gullaksen</td>
</tr>
<tr>
<td><strong>email</strong></td>
<td>ken AT glxn.net</td>
</tr>
<tr>
<td><strong>coderwall</strong></td>
<td><a href="http://coderwall.com/kenglxn">http://coderwall.com/kenglxn</a></td>
</tr>
<tr>
<td><strong>last.fm</strong></td>
<td><a href="http://www.last.fm/user/kenglxn">http://www.last.fm/user/kenglxn</a></td>
</tr>
<tr>
<td><strong>gravatar</strong></td>
<td><a href="http://en.gravatar.com/kenglxn">http://en.gravatar.com/kenglxn</a></td>
</tr>
<tr>
<td><strong>linkedin</strong></td>
<td><a href="http://www.linkedin.com/in/kengullaksen">http://www.linkedin.com/in/kengullaksen</a></td>
</tr>
<tr>
<td><strong>facebook</strong></td>
<td><a href="http://www.facebook.com/kenglxn">http://www.facebook.com/kenglxn</a></td>
</tr>
<tr>
<td><strong>twitter</strong></td>
<td><a href="http://twitter.com/kenglxn">http://twitter.com/kenglxn</a></td>
</tr>
<tr>
<td><strong>picasa</strong></td>
<td><a href="http://picasaweb.google.no/kenglxn82">http://picasaweb.google.no/kenglxn82</a></td>
</tr>
<tr>
<td><strong>github</strong></td>
<td><a href="http://github.com/kenglxn">http://github.com/kenglxn</a></td>
</tr>
</tbody>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2009-10-22 13:31:59</wp:post_date>
		<wp:post_date_gmt>2009-10-22 11:31:59</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ken-gullaksen</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Get a Spotify scrobbler for your website</title>
		<link>http://www.glxn.net/?p=37</link>
		<pubDate>Mon, 09 Nov 2009 20:08:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/?p=37</guid>
		<description></description>
		<content:encoded><![CDATA[If you're like me and use <a href="http://spotify.com">Spotify</a> you might be interrested in this little hack i found.
Spotify Has the ability to publish what you listen to to <a href="http://last.fm">last.fm</a>.
Following is a quick and easy way to get your spotify listens scrobbled on your website:
<ol>
	<li> First go get yourself a <a href="https://www.last.fm/join">last.fm account</a>, it's free :)</li>
	<li>Set spotify to scrobble to last.fm by going to Edit &gt; Preferences. Here you will need to check the box for last.fm and add your credentials<a href="http://www.glxn.net/wp-content/uploads/2009/11/spotify.png"><img class="size-full wp-image-38 alignnone" title="spotify" src="http://www.glxn.net/wp-content/uploads/2009/11/spotify.png" alt="spotify" width="440" height="291" /></a></li>
	<li>Next go to <a rel="nofollow" href="http://www.last.fm/tools/charts">http://www.last.fm/tools/charts</a> and find a widget you like.</li>
	<li>Embed the kode and off you go</li>
</ol>
The last.fm widget seems to deny requests every so often, so i came up with a script that will make a local cached copy that you can serve instead of having the widget dissapear for some requests.
You need to set up a cron to fetch the widget to a place you configure on the server. Then you change the reference in the src og the img tag to point to your local copy of the file. The folowing script set up with a cron of every 5 mimuntes should be sufficient:
<div style="border: thin dashed black; background: #efefef;">
<pre>#!/bin/bash
cd /root/wordpress/lastfm
wget -r -nd --retry-connrefused http://imagegen.last.fm/listen/recenttracks/kenglxn.gif -O kenglxn.gif.tmp
GIF_SIZE=`stat -c %s "kenglxn.gif.tmp"`
if [ "$GIF_SIZE" -gt 6000 ]
then
    cp -f kenglxn.gif.tmp kenglxn.gif
    fi
exit 0</pre>
</div>
<strong>Happy scrobbling</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2009-11-09 22:08:29</wp:post_date>
		<wp:post_date_gmt>2009-11-09 20:08:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>get-a-spotify-scrobbler-for-your-website</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="spotify"><![CDATA[spotify]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Free Stuff</title>
		<link>http://www.glxn.net/?page_id=42</link>
		<pubDate>Sun, 15 Nov 2009 19:25:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/?page_id=42</guid>
		<description></description>
		<content:encoded><![CDATA[<h2><strong>Here are some links to some free stuff i found useful:</strong></h2>
<ul>
	<li><a title="disc usage analyser by jgoodies, includes right-click menu item in explorer" href="http://www.jgoodies.com/freeware/jdiskreport/">http://www.jgoodies.com/freeware/jdiskreport/</a> - <strong>disc usage analyser by jgoodies, includes right-click menu item in explorer</strong></li>
	<li><a title="very nice color scheme selector" href="http://colorschemedesigner.com/">http://colorschemedesigner.com/</a> - <strong>very nice color scheme selector</strong></li>
	<li><a title="worker gif generator" href="http://ajaxload.info/">http://ajaxload.info/</a> - <strong>worker gif generator</strong></li>
	<li><a title="favicon generator" href="http://www.favicon.cc/">http://www.favicon.cc/</a> - <strong>favicon generator</strong></li>
	<li><a title="disc partitioning program" href="http://gparted.sourceforge.net/">http://gparted.sourceforge.net/</a>- <strong>disc partitioning program</strong></li>
	<li><a title="iso image burning tool" href="http://www.burnatonce.net/">http://www.burnatonce.net/</a> - <strong>iso image burning tool</strong></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2009-11-15 20:25:25</wp:post_date>
		<wp:post_date_gmt>2009-11-15 19:25:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>free-stuff</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Guestbook</title>
		<link>http://www.glxn.net/?page_id=49</link>
		<pubDate>Sat, 05 Dec 2009 10:26:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/?page_id=49</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="pie-gallery alignGalleryLeft">
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">

Leave me a little shout, if you feel like it :)</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"></p>

</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2009-12-05 11:26:35</wp:post_date>
		<wp:post_date_gmt>2009-12-05 10:26:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>guestbook</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks</title>
		<link>http://www.glxn.net/?page_id=55</link>
		<pubDate>Sat, 05 Dec 2009 11:10:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/?page_id=55</guid>
		<description></description>
		<content:encoded><![CDATA[[delicious_tagroll username="ryu82"]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2009-12-05 12:10:52</wp:post_date>
		<wp:post_date_gmt>2009-12-05 11:10:52</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bookmarks</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gallery</title>
		<link>http://www.glxn.net/?page_id=68</link>
		<pubDate>Sat, 05 Dec 2009 11:47:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/?page_id=68</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="pie-gallery alignGalleryLeft">
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="Folkemuseet på Bygdøy" rel="lightbox[2010-0-5-18-33-44]" href="http://lh5.ggpht.com/_HY5SAQRZJlw/SwWdwhYFX-I/AAAAAAAAADs/TdDbaqGw-cc/DSC00034.JPG?imgmax=800"><img class="pie-img" src="http://lh5.ggpht.com/_HY5SAQRZJlw/SwWdwhYFX-I/AAAAAAAAADs/TdDbaqGw-cc/s144-c/DSC00034.JPG" alt="Folkemuseet på Bygdøy" width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">Folkemuseet på Bygdøy</p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="På fjellet i hallingdalen" rel="lightbox[2010-0-5-18-33-44]" href="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWdxmAouMI/AAAAAAAAADw/GFc_o8A1qZI/DSC00156.JPG?imgmax=800"><img class="pie-img" src="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWdxmAouMI/AAAAAAAAADw/GFc_o8A1qZI/s144-c/DSC00156.JPG" alt="På fjellet i hallingdalen" width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">På fjellet i hallingdalen</p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="Karianne og lille Andreas" rel="lightbox[2010-0-5-18-33-44]" href="http://lh5.ggpht.com/_HY5SAQRZJlw/Sx1-yXFypoI/AAAAAAAAAJ4/BVg_deknUgw/Bilde166.jpg?imgmax=800"><img class="pie-img" src="http://lh5.ggpht.com/_HY5SAQRZJlw/Sx1-yXFypoI/AAAAAAAAAJ4/BVg_deknUgw/s144-c/Bilde166.jpg" alt="Karianne og lille Andreas" width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">Karianne og lille Andreas</p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="På fjellet, 1200+ moh" rel="lightbox[2010-0-5-18-33-44]" href="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWdzGCmEPI/AAAAAAAAAEg/JjrUKvh8Wu0/DSC00183.JPG?imgmax=800"><img class="pie-img" src="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWdzGCmEPI/AAAAAAAAAEg/JjrUKvh8Wu0/s144-c/DSC00183.JPG" alt="På fjellet, 1200+ moh" width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">På fjellet, 1200+ moh</p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="Fjellet" rel="lightbox[2010-0-5-18-33-44]" href="http://lh3.ggpht.com/_HY5SAQRZJlw/SwWd0pG3XVI/AAAAAAAAAEk/0yA9l1ikzBY/DSC00185.JPG?imgmax=800"><img class="pie-img" src="http://lh3.ggpht.com/_HY5SAQRZJlw/SwWd0pG3XVI/AAAAAAAAAEk/0yA9l1ikzBY/s144-c/DSC00185.JPG" alt="Fjellet" width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">Fjellet</p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="Bekken på fjellet." rel="lightbox[2010-0-5-18-33-44]" href="http://lh5.ggpht.com/_HY5SAQRZJlw/SwWd2RfWBZI/AAAAAAAAAEo/yctdAmO5F78/DSC00186.JPG?imgmax=800"><img class="pie-img" src="http://lh5.ggpht.com/_HY5SAQRZJlw/SwWd2RfWBZI/AAAAAAAAAEo/yctdAmO5F78/s144-c/DSC00186.JPG" alt="Bekken på fjellet." width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">Bekken på fjellet.</p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="Et sted mellom Hallingdalen og Bergen" rel="lightbox[2010-0-5-18-33-44]" href="http://lh3.ggpht.com/_HY5SAQRZJlw/SwWd28Zy5PI/AAAAAAAAAEs/ugd8Atgc_wE/DSC00192.JPG?imgmax=800"><img class="pie-img" src="http://lh3.ggpht.com/_HY5SAQRZJlw/SwWd28Zy5PI/AAAAAAAAAEs/ugd8Atgc_wE/s144-c/DSC00192.JPG" alt="Et sted mellom Hallingdalen og Bergen" width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">Et sted mellom Hallingdalen og Bergen</p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="Gudvangen" rel="lightbox[2010-0-5-18-33-44]" href="http://lh6.ggpht.com/_HY5SAQRZJlw/SwWd3_K1z_I/AAAAAAAAAEw/e_SPhzKhoCw/DSC00245.JPG?imgmax=800"><img class="pie-img" src="http://lh6.ggpht.com/_HY5SAQRZJlw/SwWd3_K1z_I/AAAAAAAAAEw/e_SPhzKhoCw/s144-c/DSC00245.JPG" alt="Gudvangen" width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">Gudvangen</p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="Gudvangen" rel="lightbox[2010-0-5-18-33-44]" href="http://lh3.ggpht.com/_HY5SAQRZJlw/SwWd5EqxWHI/AAAAAAAAAE0/qXVKTRmjYHI/DSC00250.JPG?imgmax=800"><img class="pie-img" src="http://lh3.ggpht.com/_HY5SAQRZJlw/SwWd5EqxWHI/AAAAAAAAAE0/qXVKTRmjYHI/s144-c/DSC00250.JPG" alt="Gudvangen" width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">Gudvangen</p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="Tallinn, Estland" rel="lightbox[2010-0-5-18-33-44]" href="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWd6GNiJiI/AAAAAAAAAE4/pc9W0rdiRTM/DSC00295%20%282%29.JPG?imgmax=800"><img class="pie-img" src="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWd6GNiJiI/AAAAAAAAAE4/pc9W0rdiRTM/s144-c/DSC00295%20%282%29.JPG" alt="Tallinn, Estland" width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">Tallinn, Estland</p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="Tallinn, Estland" rel="lightbox[2010-0-5-18-33-44]" href="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWd7faVEZI/AAAAAAAAAE8/4NsOEus-_NA/DSC00297.JPG?imgmax=800"><img class="pie-img" src="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWd7faVEZI/AAAAAAAAAE8/4NsOEus-_NA/s144-c/DSC00297.JPG" alt="Tallinn, Estland" width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">Tallinn, Estland</p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWd8CVi0-I/AAAAAAAAAFA/qBTmGquEcXs/DSC00298%20%282%29.JPG?imgmax=800"><img class="pie-img" src="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWd8CVi0-I/AAAAAAAAAFA/qBTmGquEcXs/s144-c/DSC00298%20%282%29.JPG" alt="DSC00298 (2).JPG" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWd85onQpI/AAAAAAAAAFE/wIZ3uvnH--g/DSC00324%20%282%29.JPG?imgmax=800"><img class="pie-img" src="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWd85onQpI/AAAAAAAAAFE/wIZ3uvnH--g/s144-c/DSC00324%20%282%29.JPG" alt="DSC00324 (2).JPG" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh6.ggpht.com/_HY5SAQRZJlw/SwWd9_qJQYI/AAAAAAAAAFI/XDfWZmlJpFM/DSC00453.JPG?imgmax=800"><img class="pie-img" src="http://lh6.ggpht.com/_HY5SAQRZJlw/SwWd9_qJQYI/AAAAAAAAAFI/XDfWZmlJpFM/s144-c/DSC00453.JPG" alt="DSC00453.JPG" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWd-6QjDDI/AAAAAAAAAFM/r06NGxAd5lY/DSC00504.JPG?imgmax=800"><img class="pie-img" src="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWd-6QjDDI/AAAAAAAAAFM/r06NGxAd5lY/s144-c/DSC00504.JPG" alt="DSC00504.JPG" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh3.ggpht.com/_HY5SAQRZJlw/SwWd_pibWBI/AAAAAAAAAFQ/Tz9IzenupH0/DSC00505.JPG?imgmax=800"><img class="pie-img" src="http://lh3.ggpht.com/_HY5SAQRZJlw/SwWd_pibWBI/AAAAAAAAAFQ/Tz9IzenupH0/s144-c/DSC00505.JPG" alt="DSC00505.JPG" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWeAcSFB6I/AAAAAAAAAFU/RsV6HXJSLsY/DSC00509.JPG?imgmax=800"><img class="pie-img" src="http://lh4.ggpht.com/_HY5SAQRZJlw/SwWeAcSFB6I/AAAAAAAAAFU/RsV6HXJSLsY/s144-c/DSC00509.JPG" alt="DSC00509.JPG" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh4.ggpht.com/_HY5SAQRZJlw/Swf7AJEAgoI/AAAAAAAAAG4/jMdHSSmegqw/dsc_0063.jpg?imgmax=800"><img class="pie-img" src="http://lh4.ggpht.com/_HY5SAQRZJlw/Swf7AJEAgoI/AAAAAAAAAG4/jMdHSSmegqw/s144-c/dsc_0063.jpg" alt="dsc_0063.jpg" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh3.ggpht.com/_HY5SAQRZJlw/Swf7BrKZbEI/AAAAAAAAAG8/cP3aEDFzk3s/dsc_0080.jpg?imgmax=800"><img class="pie-img" src="http://lh3.ggpht.com/_HY5SAQRZJlw/Swf7BrKZbEI/AAAAAAAAAG8/cP3aEDFzk3s/s144-c/dsc_0080.jpg" alt="dsc_0080.jpg" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh6.ggpht.com/_HY5SAQRZJlw/Swf7CQGFyGI/AAAAAAAAAHA/xQP4jKqa_Go/_dsc0572%20%282%29.jpg?imgmax=800"><img class="pie-img" src="http://lh6.ggpht.com/_HY5SAQRZJlw/Swf7CQGFyGI/AAAAAAAAAHA/xQP4jKqa_Go/s144-c/_dsc0572%20%282%29.jpg" alt="_dsc0572 (2).jpg" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh4.ggpht.com/_HY5SAQRZJlw/Swf7DX4_ZLI/AAAAAAAAAHE/7mU51oLM7KA/_dsc0574.jpg?imgmax=800"><img class="pie-img" src="http://lh4.ggpht.com/_HY5SAQRZJlw/Swf7DX4_ZLI/AAAAAAAAAHE/7mU51oLM7KA/s144-c/_dsc0574.jpg" alt="_dsc0574.jpg" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh5.ggpht.com/_HY5SAQRZJlw/Swf7EWiEJfI/AAAAAAAAAHI/faqXsMQuRpc/_dsc0737.jpg?imgmax=800"><img class="pie-img" src="http://lh5.ggpht.com/_HY5SAQRZJlw/Swf7EWiEJfI/AAAAAAAAAHI/faqXsMQuRpc/s144-c/_dsc0737.jpg" alt="_dsc0737.jpg" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh4.ggpht.com/_HY5SAQRZJlw/Swf7FGYo5sI/AAAAAAAAAHM/iJoYMBLwkvQ/_dsc0814.jpg?imgmax=800"><img class="pie-img" src="http://lh4.ggpht.com/_HY5SAQRZJlw/Swf7FGYo5sI/AAAAAAAAAHM/iJoYMBLwkvQ/s144-c/_dsc0814.jpg" alt="_dsc0814.jpg" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh6.ggpht.com/_HY5SAQRZJlw/Swf7HUzVo4I/AAAAAAAAAHQ/kWuHl76Nmlo/_dsc0825.jpg?imgmax=800"><img class="pie-img" src="http://lh6.ggpht.com/_HY5SAQRZJlw/Swf7HUzVo4I/AAAAAAAAAHQ/kWuHl76Nmlo/s144-c/_dsc0825.jpg" alt="_dsc0825.jpg" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh6.ggpht.com/_HY5SAQRZJlw/Swf7IAg2vuI/AAAAAAAAAHU/gwvUHqupu9g/_dsc0824.jpg?imgmax=800"><img class="pie-img" src="http://lh6.ggpht.com/_HY5SAQRZJlw/Swf7IAg2vuI/AAAAAAAAAHU/gwvUHqupu9g/s144-c/_dsc0824.jpg" alt="_dsc0824.jpg" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh5.ggpht.com/_HY5SAQRZJlw/Swf7Jgs73PI/AAAAAAAAAHY/fV3V0MAhezQ/_dsc0828.jpg?imgmax=800"><img class="pie-img" src="http://lh5.ggpht.com/_HY5SAQRZJlw/Swf7Jgs73PI/AAAAAAAAAHY/fV3V0MAhezQ/s144-c/_dsc0828.jpg" alt="_dsc0828.jpg" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh3.ggpht.com/_HY5SAQRZJlw/Swf7LBLjDjI/AAAAAAAAAHc/HFEaRF_cyLU/_dsc0288.jpg?imgmax=800"><img class="pie-img" src="http://lh3.ggpht.com/_HY5SAQRZJlw/Swf7LBLjDjI/AAAAAAAAAHc/HFEaRF_cyLU/s144-c/_dsc0288.jpg" alt="_dsc0288.jpg" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a rel="lightbox[2010-0-5-18-33-44]" href="http://lh6.ggpht.com/_HY5SAQRZJlw/Swf7MFX2nbI/AAAAAAAAAHg/WAQH6vwas88/_DSC0486.jpg?imgmax=800"><img class="pie-img" src="http://lh6.ggpht.com/_HY5SAQRZJlw/Swf7MFX2nbI/AAAAAAAAAHg/WAQH6vwas88/s144-c/_DSC0486.jpg" alt="_DSC0486.jpg" width="144" height="144" /></a></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"></p>

</div>
<div class="pie-item" style="margin:10px 10px 10px 10px;">
<p class="pie-img-wrapper"><a title="Grandpa Morten, Karianne &amp; Andreas" rel="lightbox[2010-0-5-18-33-44]" href="http://lh3.ggpht.com/_HY5SAQRZJlw/SzUNUG0p8QI/AAAAAAAAANo/orvG1ZSNxlg/2009-12-25%2019.59.35-2.jpg?imgmax=800"><img class="pie-img" src="http://lh3.ggpht.com/_HY5SAQRZJlw/SzUNUG0p8QI/AAAAAAAAANo/orvG1ZSNxlg/s144-c/2009-12-25%2019.59.35-2.jpg" alt="Grandpa Morten, Karianne &amp; Andreas" width="144" height="144" /></a></p>
<p class="pie-caption" style="width: 144px;">Grandpa Morten, Karianne &amp; Andreas</p>

</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2009-12-05 12:47:17</wp:post_date>
		<wp:post_date_gmt>2009-12-05 11:47:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>gallery</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using Amazon EC2 to test application for high load</title>
		<link>http://www.glxn.net/?p=80</link>
		<pubDate>Wed, 30 Dec 2009 22:38:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/?p=80</guid>
		<description></description>
		<content:encoded><![CDATA[In this post i want to share my experience with using Amazon EC2 to load test an application. This is a cost efficient way to get an approximation of what size rig one needs to support a high number of users.

There are several advantages to using EC2 for testing:
<ul>
	<li>low cost: pay for what you use.</li>
	<li>immediate availablility: virtually unlimited resources available now.</li>
	<li>full control: you are root.</li>
	<li>reuseability: set up an instance, make an image and start another box with the same configuration.</li>
	<li>Don't pay for idle resources: set up your test rigs/server park, perform testing, take things down, get some sleep, reboot instances and continue testing. Once things are set up it is easy to take things down and boot it up again some other time.</li>
</ul>
So, that's the pitch.. here's the good stuff. Let me start by describing the architecture i want to test. The application I'm testing is a twitter clone. Just a simple microblog, where many users will post content and read content. It will consist of a JBoss Seam web application running on a JBoss AS with MySQL as Database backend. We'll be using Apache HTTP with mod_proxy as a LB (I want to test out JBoss Cloud with mod_cluster at a later time, but this will do for now). Behind the proxy LB, well have 4 JBoss AS to serve the web app dynamic content, and we'll be using a simple MySQL multiple-master replication between two MySQL instances to prevent a SPOF(single point of failure).

Here's a cheesy diagram to depict the madness:

<a href="http://www.glxn.net/wp-content/uploads/2009/12/architecture1.gif"><img class="size-full wp-image-82 alignleft" title="architecture" src="http://www.glxn.net/wp-content/uploads/2009/12/architecture1.gif" alt="architecture" width="595" height="445" /></a>

To run the tests I'll be using three EC2 instances running JMeter to get a significant load.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2009-12-30 23:38:35</wp:post_date>
		<wp:post_date_gmt>2009-12-30 22:38:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-amazon-ec2-to-test-application-for-high-load</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="testing"><![CDATA[Testing]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Attic</title>
		<link>http://www.glxn.net/?page_id=91</link>
		<pubDate>Sun, 03 Jan 2010 14:58:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?page_id=91</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2010-01-03 15:58:27</wp:post_date>
		<wp:post_date_gmt>2010-01-03 14:58:27</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>the-attic</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>redirect</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.glxn.net/catalog/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_links_to</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.glxn.net/catalog/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_links_to_target</wp:meta_key>
			<wp:meta_value><![CDATA[_blank]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IRC Chat Logs </title>
		<link>http://www.glxn.net/?page_id=201</link>
		<pubDate>Wed, 31 Mar 2010 09:32:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?page_id=201</guid>
		<description></description>
		<content:encoded><![CDATA[Here are some IRC chat logs that i found worthy of keeping as reference material.

<ul>
<?php wp_list_pages('title_li=&child_of=201'); ?>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date>2010-03-31 11:32:39</wp:post_date>
		<wp:post_date_gmt>2010-03-31 09:32:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>irc-logs</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>99</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>#jbosstesting 30.02.2010</title>
		<link>http://www.glxn.net/?page_id=203</link>
		<pubDate>Wed, 31 Mar 2010 09:36:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?page_id=203</guid>
		<description></description>
		<content:encoded><![CDATA[<font size="2">(7:28:55 PM)</font><b> The topic for #jbosstesting is: Discussion of all things testing related for JBoss.org | <a href="http://jboss.org/shrinkwrap">http://jboss.org/shrinkwrap</a> | <a href="http://community.jboss.org/en/arquillian">http://community.jboss.org/en/arquillian</a> | <a href="http://www.jboss.org/jsfunit">http://www.jboss.org/jsfunit</a></b><br/>
<font color="#A82F2F"><font size="2">(7:32:47 PM)</font> <b>ALR:</b></font> aslak: Idea.<br/>

<font color="#A82F2F"><font size="2">(7:33:13 PM)</font> <b>ALR:</b></font> aslak: Perhaps instead of Arquillian-specific annotations, we should be embracing @Inject and friends.<br/>
<font color="#16569E"><font size="2">(7:34:46 PM)</font> <b>kenglxn:</b></font> hey guys<br/>
<font color="#A82F2F"><font size="2">(7:35:10 PM)</font> <b>mojavelinux:</b></font> hey Ken<br/>

<font color="#16569E"><font size="2">(7:35:32 PM)</font> <b>kenglxn:</b></font> hey mojavelinux<br/>
<font color="#16569E"><font size="2">(7:35:48 PM)</font> <b>kenglxn:</b></font> I'm playing around with ejb and cdi with arquillian<br/>
<font color="#16569E"><font size="2">(7:36:24 PM)</font> <b>kenglxn:</b></font> I'm having a bit of trouble getting a hold of the ejb as an ejb with entitymanager etc.<br/>

<font color="#A82F2F"><font size="2">(7:36:49 PM)</font> <b>ALR:</b></font> Yo Ken<br/>
<font color="#16569E"><font size="2">(7:37:04 PM)</font> <b>kenglxn:</b></font> I followed a tip gavin posted in his blog, to use Producer method to @Inject the EJB into a requestscoped cdi managed bean<br/>
<font color="#A82F2F"><font size="2">(7:37:18 PM)</font> <b>mojavelinux:</b></font> yes, that is the preferred approach<br/>

<font color="#A82F2F"><font size="2">(7:37:28 PM)</font> <b>mojavelinux:</b></font> basically, @Inject is the new @EJB<br/>
<font color="#16569E"><font size="2">(7:37:35 PM)</font> <b>kenglxn:</b></font> ah<br/>
<font color="#16569E"><font size="2">(7:37:44 PM)</font> <b>kenglxn:</b></font> hey ALR<br/>

<font color="#A82F2F"><font size="2">(7:38:02 PM)</font> <b>ALR:</b></font> mojavelinux: I dunno if I&apos;d go that far.<br/>
<font color="#A82F2F"><font size="2">(7:38:22 PM)</font> <b>ALR:</b></font> Your post reminded me though when I saw some new Arquillian injection annotations a couple weeks back<br/>
<font color="#A82F2F"><font size="2">(7:38:34 PM)</font> <b>ALR:</b></font> Because @EJB has some beanInterface etc logic<br/>

<font color="#A82F2F"><font size="2">(7:39:00 PM)</font> <b>ALR:</b></font> Though I guess @Inject mus tprovide similar stuff when autowiring can&apos;t be done<br/>
<font color="#16569E"><font size="2">(7:39:42 PM)</font> <b>kenglxn:</b></font> I'm probably doing it a bit wrong<br/>
<font color="#16569E"><font size="2">(7:39:52 PM)</font> <b>kenglxn:</b></font> java.lang.StackOverflowError<br/>

<font color="#16569E"><font size="2">(7:39:58 PM)</font> <b>kenglxn:</b></font> at org.jboss.deployers.structure.spi.helpers.AbstractDeploymentContext.getChildren(AbstractDeploymentContext.java:659)<br/>
<font color="#16569E"><font size="2">(7:40:31 PM)</font> <b>kenglxn:</b></font> My CDI has @Inject HelloBean helloBean;<br/>
<font color="#A82F2F"><font size="2">(7:40:44 PM)</font> <b>ALR:</b></font> Yeek<br/>

<font color="#A82F2F"><font size="2">(7:40:47 PM)</font> <b>ALR:</b></font> Infinite loop<br/>
<font color="#16569E"><font size="2">(7:40:58 PM)</font> <b>kenglxn:</b></font> and I have a producer method like: @Produces public HelloBean getHelloBean()<br/>
<font color="#16569E"><font size="2">(7:41:25 PM)</font> <b>kenglxn:</b></font> and the producer class has a field annotated with @EJB HelloBean helloBean;<br/>

<font color="#A82F2F"><font size="2">(7:41:28 PM)</font> <b>ALR:</b></font> Is the producer also the consumer?<br/>
<font color="#16569E"><font size="2">(7:41:38 PM)</font> <b>kenglxn:</b></font> yep, thats it<br/>
<font color="#16569E"><font size="2">(7:41:43 PM)</font> <b>kenglxn:</b></font> makes sense now<br/>

<font color="#A82F2F"><font size="2">(7:41:47 PM)</font> <b>ALR:</b></font> Is that legal in CDI?<br/>
<font color="#16569E"><font size="2">(7:41:52 PM)</font> <b>kenglxn:</b></font> probably not<br/>
<font color="#A82F2F"><font size="2">(7:42:01 PM)</font> <b>ALR:</b></font> Else there needs to be either some validation logic to give you a friendly exception<br/>

<font color="#A82F2F"><font size="2">(7:42:11 PM)</font> <b>ALR:</b></font> Or something in place to break the cyclic chain<br/>
<font color="#A82F2F"><font size="2">(7:42:17 PM)</font> <b>ALR:</b></font> Like in JBoss EJB we have @IgnoreDependency<br/>
<font color="#16569E"><font size="2">(7:42:38 PM)</font> <b>kenglxn:</b></font> I'm, an IRC noob,<br/>

<font color="#16569E"><font size="2">(7:42:45 PM)</font> <b>kenglxn:</b></font> can i post code here?<br/>
<font color="#A82F2F"><font size="2">(7:42:51 PM)</font> <b>ALR:</b></font> kenglxn: Usually we pastebin.<br/>
<font color="#16569E"><font size="2">(7:42:54 PM)</font> <b>kenglxn:</b></font> ah<br/>

<font color="#A82F2F"><font size="2">(7:42:55 PM)</font> <b>ALR:</b></font> For instance:<br/>
<font color="#A82F2F"><font size="2">(7:43:07 PM)</font> <b>ALR:</b></font> kenglxn: http://pastebin.com/<br/>
<font color="#A82F2F"><font size="2">(7:43:11 PM)</font> <b>mojavelinux:</b></font> I find github&apos;s gist better<br/>

<font color="#A82F2F"><font size="2">(7:43:14 PM)</font> <b>mojavelinux:</b></font> much much better<br/>
<font color="#A82F2F"><font size="2">(7:43:21 PM)</font> <b>ALR:</b></font> Linkypoo?<br/>
<font color="#A82F2F"><font size="2">(7:43:28 PM)</font> <b>mojavelinux:</b></font> multiple files grouped together w/ nice highlighting<br/>

<font color="#A82F2F"><font size="2">(7:43:47 PM)</font> <b>ALR:</b></font> I put pastebin into my Firefox 3 years ago and never updated it for a better app<br/>
<font color="#16569E"><font size="2">(7:44:15 PM)</font> <b>kenglxn:</b></font> cool<br/>
<font color="#A82F2F"><font size="2">(7:44:31 PM)</font> <b>ALR:</b></font> kenglxn: Though mojavelinux is gonna have to inspect your CDI code :)<br/>

<font color="#16569E"><font size="2">(7:44:38 PM)</font> <b>kenglxn:</b></font> like getting introduced to new gems :)<br/>
<font color="#A82F2F"><font size="2">(7:44:38 PM)</font> <b>ALR:</b></font> I&apos;ll be useless there.<br/>
<font color="#A82F2F"><font size="2">(7:44:57 PM)</font> <b>mojavelinux:</b></font> I&apos;m interested in what you would want to use @EJB for that you can&apos;t do with @Inject<br/>

<font color="#A82F2F"><font size="2">(7:45:12 PM)</font> <b>mojavelinux:</b></font> @Inject let&apos;s you inject any pubic interface of a session bean<br/>
<font color="#16569E"><font size="2">(7:45:15 PM)</font> <b>kenglxn:</b></font> Well in this case I was just playing around<br/>
<font color="#A82F2F"><font size="2">(7:45:16 PM)</font> <b>ALR:</b></font> But in general, for instance in EJB, we read in the metadata on deployment and in instances like that give a friendly exception.  StackOverflow shouldn&apos;t be possible for the user to create.<br/>

<font color="#16569E"><font size="2">(7:45:23 PM)</font> <b>kenglxn:</b></font> but there are some facets i like to use in EJB<br/>
<font color="#16569E"><font size="2">(7:45:39 PM)</font> <b>kenglxn:</b></font> Transactions and Scheduler for instance<br/>
<font color="#A82F2F"><font size="2">(7:45:40 PM)</font> <b>mojavelinux:</b></font> I&apos;m just interested to know, I&apos;m not judging at this point<br/>

<font color="#A82F2F"><font size="2">(7:45:52 PM)</font> <b>mojavelinux:</b></font> I know EJB itself is find<br/>
<font color="#A82F2F"><font size="2">(7:45:55 PM)</font> <b>mojavelinux:</b></font> I&apos;m talking about @EJB<br/>
<font color="#A82F2F"><font size="2">(7:46:05 PM)</font> <b>mojavelinux:</b></font> EJB itself is good<br/>

<font color="#A82F2F"><font size="2">(7:46:10 PM)</font> <b>mojavelinux:</b></font> is what I meant to say<br/>
<font color="#16569E"><font size="2">(7:46:21 PM)</font> <b>kenglxn:</b></font> I guess its my misunderstanding<br/>
<font color="#16569E"><font size="2">(7:46:37 PM)</font> <b>kenglxn:</b></font> i thought i &quot;had&quot; to use @EJB to get the bean as an ejb<br/>

<font color="#A82F2F"><font size="2">(7:46:42 PM)</font> <b>mojavelinux:</b></font> I&apos;m just interested in why you would need to stick with @EJB...there may be a reason;<br/>
<font color="#A82F2F"><font size="2">(7:46:43 PM)</font> <b>mojavelinux:</b></font> ah, nope<br/>
<font color="#16569E"><font size="2">(7:46:50 PM)</font> <b>kenglxn:</b></font> that explains it<br/>

<font color="#A82F2F"><font size="2">(7:46:51 PM)</font> <b>mojavelinux:</b></font> CDI and EJB have seamless integration<br/>
<font color="#A82F2F"><font size="2">(7:46:55 PM)</font> <b>ALR:</b></font> mojavelinux: @EJB.beanInterface springs to mind.<br/>
<font color="#A82F2F"><font size="2">(7:46:57 PM)</font> <b>mojavelinux:</b></font> which was not true in early versions of the spec<br/>

<font color="#A82F2F"><font size="2">(7:47:02 PM)</font> <b>mojavelinux:</b></font> but that came in the last 6 months<br/>
<font color="#16569E"><font size="2">(7:47:06 PM)</font> <b>kenglxn:</b></font> I guess i misenterpreted gavins post<br/>
<font color="#A82F2F"><font size="2">(7:47:12 PM)</font> <b>mojavelinux:</b></font> so basically<br/>

<font color="#16569E"><font size="2">(7:47:16 PM)</font> <b>kenglxn:</b></font> or perhaps it is outdated<br/>
<font color="#A82F2F"><font size="2">(7:47:28 PM)</font> <b>mojavelinux:</b></font> @EJB(beanInterface = AAA.class) is equivalent to @Inject AAA<br/>
<font color="#A82F2F"><font size="2">(7:47:38 PM)</font> <b>ALR:</b></font> mojavelinux: Yes.<br/>

<font color="#A82F2F"><font size="2">(7:47:39 PM)</font> <b>mojavelinux:</b></font> every public interface is registered as a bean<br/>
<font color="#16569E"><font size="2">(7:47:41 PM)</font> <b>kenglxn:</b></font> That is very good to know :)<br/>
<font color="#A82F2F"><font size="2">(7:47:46 PM)</font> <b>ALR:</b></font> But assume a common base interface<br/>

<font color="#A82F2F"><font size="2">(7:48:05 PM)</font> <b>ALR:</b></font> @EJB(beanInterface=SpecificInterfaceA.class) CommonBusinessInterface ejb;<br/>
<font color="#16569E"><font size="2">(7:48:12 PM)</font> <b>kenglxn:</b></font> I think there may be some misunderstandings on that point<br/>
<font color="#A82F2F"><font size="2">(7:48:24 PM)</font> <b>mojavelinux:</b></font> oh<br/>

<font color="#16569E"><font size="2">(7:48:26 PM)</font> <b>kenglxn:</b></font> well, I at least have misunderstood it :P<br/>
<font color="#A82F2F"><font size="2">(7:48:26 PM)</font> <b>mojavelinux:</b></font> thinking...<br/>
<font color="#A82F2F"><font size="2">(7:48:46 PM)</font> <b>ALR:</b></font> mojavelinux: I can&apos;t imagine @Inject assumes everything can be autowired?<br/>

<font color="#A82F2F"><font size="2">(7:48:53 PM)</font> <b>ALR:</b></font> Like there&apos;s also @EJB.name<br/>
<font color="#A82F2F"><font size="2">(7:48:56 PM)</font> <b>ALR:</b></font> Very important.<br/>
<font color="#A82F2F"><font size="2">(7:48:57 PM)</font> <b>mojavelinux:</b></font> kenglxn trust me, you aren&apos;t the first or last...even we sometimes confuse ourselves ;)<br/>

<font color="#A82F2F"><font size="2">(7:49:01 PM)</font> <b>mojavelinux:</b></font> ah!!!<br/>
<font color="#A82F2F"><font size="2">(7:49:03 PM)</font> <b>mojavelinux:</b></font> no name<br/>
<font color="#A82F2F"><font size="2">(7:49:04 PM)</font> <b>mojavelinux:</b></font> :)<br/>

<font color="#A82F2F"><font size="2">(7:49:10 PM)</font> <b>ALR:</b></font> mojavelinux: Haha.<br/>
<font color="#A82F2F"><font size="2">(7:49:15 PM)</font> <b>ALR:</b></font> Not every type is unique in EJB.<br/>
<font color="#A82F2F"><font size="2">(7:49:23 PM)</font> <b>ALR:</b></font> 2 EJBs can expose the same business interface.<br/>

<font color="#A82F2F"><font size="2">(7:49:25 PM)</font> <b>mojavelinux:</b></font> right, but that is what @Named is for<br/>
<font color="#16569E"><font size="2">(7:49:29 PM)</font> <b>kenglxn:</b></font> ALR: hehe :)<br/>
<font color="#A82F2F"><font size="2">(7:49:38 PM)</font> <b>mojavelinux:</b></font> so basically, CDI provides on both sides the way to do all this<br/>

<font color="#16569E"><font size="2">(7:49:41 PM)</font> <b>kenglxn:</b></font> here's my litlle ditty: http://pastebin.com/1nc9stir<br/>
<font color="#A82F2F"><font size="2">(7:49:43 PM)</font> <b>mojavelinux:</b></font> yes, you don&apos;t get it for free in some cases<br/>
<font color="#A82F2F"><font size="2">(7:49:48 PM)</font> <b>mojavelinux:</b></font> you have to add a qualifier to an interface<br/>

<font color="#062585"><font size="2">(7:49:49 PM)</font> <b>***ALR</b></font> listening<br/>
<font color="#A82F2F"><font size="2">(7:49:50 PM)</font> <b>mojavelinux:</b></font> but you can do<br/>
<font color="#A82F2F"><font size="2">(7:50:01 PM)</font> <b>mojavelinux:</b></font> @Inject @SpecificInterfaceQualifier CommonBusinessInterface ejb;<br/>

<font color="#A82F2F"><font size="2">(7:50:06 PM)</font> <b>mojavelinux:</b></font> but you do have to add the qualifier on the other side<br/>
<font color="#A82F2F"><font size="2">(7:50:13 PM)</font> <b>ALR:</b></font> Other side?<br/>
<font color="#A82F2F"><font size="2">(7:50:17 PM)</font> <b>mojavelinux:</b></font> wait, that isn&apos;t straight<br/>

<font color="#A82F2F"><font size="2">(7:50:50 PM)</font> <b>mojavelinux:</b></font> (by other side, I meant other side of the injection, meaning on the interface class)<br/>
<font color="#A82F2F"><font size="2">(7:51:14 PM)</font> <b>ALR:</b></font> Boo hiss.<br/>
<font color="#A82F2F"><font size="2">(7:51:15 PM)</font> <b>ALR:</b></font> :)<br/>

<font color="#A82F2F"><font size="2">(7:51:23 PM)</font> <b>ALR:</b></font> Maybe I don&apos;t have control over that component.<br/>
<font color="#A82F2F"><font size="2">(7:51:27 PM)</font> <b>mojavelinux:</b></font> so I&apos;m not quite citing the solution right, but basically, through the use of qualifiers you should be able to accommodate the scenarios of @EJB<br/>
<font color="#A82F2F"><font size="2">(7:51:34 PM)</font> <b>ALR:</b></font> But want to use CDI to wire it.<br/>

<font color="#A82F2F"><font size="2">(7:51:37 PM)</font> <b>mojavelinux:</b></font> no control -&gt; XML<br/>
<font color="#A82F2F"><font size="2">(7:51:55 PM)</font> <b>mojavelinux:</b></font> Seam XML Bean Config XML module (which should have been in JSR-299, but it got kicked out for dumb reasons)<br/>
<font color="#A82F2F"><font size="2">(7:52:01 PM)</font> <b>mojavelinux:</b></font> also<br/>

<font color="#A82F2F"><font size="2">(7:52:06 PM)</font> <b>mojavelinux:</b></font> XML isn&apos;t the only solution<br/>
<font color="#A82F2F"><font size="2">(7:52:10 PM)</font> <b>ALR:</b></font> I kinda like my answer.<br/>
<font color="#A82F2F"><font size="2">(7:52:13 PM)</font> <b>ALR:</b></font> @EJB.name :)<br/>

<font color="#A82F2F"><font size="2">(7:52:14 PM)</font> <b>mojavelinux:</b></font> you can have an extension that adds annotations at startup<br/>
<font color="#16569E"><font size="2">(7:52:18 PM)</font> <b>kenglxn:</b></font> so does this mean that CDI automatically resolves the Statelessor Stateful EJB when using @Inject<br/>
<font color="#A82F2F"><font size="2">(7:52:25 PM)</font> <b>mojavelinux:</b></font> you can also add a name to any EJB at startup<br/>

<font color="#16569E"><font size="2">(7:52:34 PM)</font> <b>kenglxn:</b></font> and @Produces should just be used when employing the @EJB<br/>
<font color="#A82F2F"><font size="2">(7:52:43 PM)</font> <b>mojavelinux:</b></font> is it more work, yes, @EJB may be more convenient in some cases...by all means, you can use it<br/>
<font color="#A82F2F"><font size="2">(7:52:51 PM)</font> <b>mojavelinux:</b></font> but the point is, it can be replaced ;)<br/>

<font color="#A82F2F"><font size="2">(7:52:58 PM)</font> <b>mojavelinux:</b></font> yes, @Produces too<br/>
<font color="#A82F2F"><font size="2">(7:52:59 PM)</font> <b>mojavelinux:</b></font> good point<br/>
<font color="#A82F2F"><font size="2">(7:53:04 PM)</font> <b>mojavelinux:</b></font> there are lots of ways to skin this cat<br/>

<font color="#16569E"><font size="2">(7:53:08 PM)</font> <b>kenglxn:</b></font> hehe<br/>
<font color="#A82F2F"><font size="2">(7:53:11 PM)</font> <b>ALR:</b></font> Sure.<br/>
<font color="#A82F2F"><font size="2">(7:53:19 PM)</font> <b>mojavelinux:</b></font> so you have XML, extension or producer<br/>

<font color="#A82F2F"><font size="2">(7:53:22 PM)</font> <b>ALR:</b></font> I mean ideally I&apos;d like to have N component models to any POJO<br/>
<font color="#A82F2F"><font size="2">(7:53:26 PM)</font> <b>mojavelinux:</b></font> to decorate an EJB in anyway you want<br/>
<font color="#A82F2F"><font size="2">(7:53:37 PM)</font> <b>ALR:</b></font> As I say, EJBs become such only in the context of a container.<br/>

<font color="#A82F2F"><font size="2">(7:53:41 PM)</font> <b>ALR:</b></font> Same with CDI managed beans.<br/>
<font color="#A82F2F"><font size="2">(7:53:51 PM)</font> <b>ALR:</b></font> Or MC Beans<br/>
<font color="#A82F2F"><font size="2">(7:54:29 PM)</font> <b>mojavelinux:</b></font> &quot;so does this mean that CDI automatically resolves the Statelessor Stateful EJB when using @Inject&quot; what is Statelessor?<br/>

<font color="#A82F2F"><font size="2">(7:54:40 PM)</font> <b>mojavelinux:</b></font> or do you mean Stateless or<br/>
<font color="#A82F2F"><font size="2">(7:54:41 PM)</font> <b>mojavelinux:</b></font> ah<br/>
<font color="#A82F2F"><font size="2">(7:54:46 PM)</font> <b>mojavelinux:</b></font> yes, @Inject resolves EJBs<br/>

<font color="#A82F2F"><font size="2">(7:54:51 PM)</font> <b>mojavelinux:</b></font> based on type<br/>
<font color="#A82F2F"><font size="2">(7:54:54 PM)</font> <b>ALR:</b></font> It&apos;s a component which makes things Stateless.<br/>
<font color="#16569E"><font size="2">(7:55:03 PM)</font> <b>kenglxn:</b></font> hmm<br/>

<font color="#A82F2F"><font size="2">(7:55:07 PM)</font> <b>mojavelinux:</b></font> if two EJBs have same interface<br/>
<font color="#A82F2F"><font size="2">(7:55:10 PM)</font> <b>ALR:</b></font> &quot;Run it through the Statelessor&quot;. :D<br/>
<font color="#16569E"><font size="2">(7:55:12 PM)</font> <b>kenglxn:</b></font> without @Produces?<br/>

<font color="#A82F2F"><font size="2">(7:55:12 PM)</font> <b>mojavelinux:</b></font> and you do @Inject SharedInterface<br/>
<font color="#A82F2F"><font size="2">(7:55:15 PM)</font> <b>mojavelinux:</b></font> then you have to qualify<br/>
<font color="#A82F2F"><font size="2">(7:55:53 PM)</font> <b>mojavelinux:</b></font> because there are two possible beans for that interface<br/>

<font color="#A82F2F"><font size="2">(7:56:10 PM)</font> <b>mojavelinux:</b></font> you qualify with XML, extension or producer<br/>
<font color="#16569E"><font size="2">(7:56:59 PM)</font> <b>kenglxn:</b></font> hmm, so who instantiates the eJB<br/>
<font color="#A82F2F"><font size="2">(7:57:00 PM)</font> <b>mojavelinux:</b></font> so you add the qualifier to the implementation and @Inject @QualifierA SharedInterface<br/>

<font color="#A82F2F"><font size="2">(7:57:06 PM)</font> <b>mojavelinux:</b></font> EJB container<br/>
<font color="#A82F2F"><font size="2">(7:57:24 PM)</font> <b>mojavelinux:</b></font> CDI is part of the platform, so all it is doing is:<br/>
<font color="#A82F2F"><font size="2">(7:57:31 PM)</font> <b>mojavelinux:</b></font> a) calculating wiring<br/>

<font color="#A82F2F"><font size="2">(7:57:36 PM)</font> <b>mojavelinux:</b></font> b) storing instances somewhere<br/>
<font color="#A82F2F"><font size="2">(7:57:41 PM)</font> <b>ALR:</b></font> mojavelinux: Actually, you guys are gonna be instantiating EJB instances<br/>
<font color="#A82F2F"><font size="2">(7:57:56 PM)</font> <b>mojavelinux:</b></font> we request the EJB instance<br/>

<font color="#A82F2F"><font size="2">(7:58:02 PM)</font> <b>mojavelinux:</b></font> instantiation is done by the EJB container<br/>
<font color="#16569E"><font size="2">(7:58:21 PM)</font> <b>kenglxn:</b></font> mojavelinux: could you peek at this http://pastebin.com/1nc9stir<br/>
<font color="#16569E"><font size="2">(7:58:29 PM)</font> <b>kenglxn:</b></font> that was where i was doing it wrong<br/>

<font color="#A82F2F"><font size="2">(7:58:35 PM)</font> <b>mojavelinux:</b></font> and actually, we don&apos;t even it request it per say, the bean that uses it requests it<br/>
<font color="#A82F2F"><font size="2">(7:58:41 PM)</font> <b>mojavelinux:</b></font> CDI just passes on the request ;)<br/>
<font color="#A82F2F"><font size="2">(7:58:49 PM)</font> <b>ALR:</b></font> mojavelinux: https://jira.jboss.org/jira/browse/EJBTHREE-2046<br/>

<font color="#A82F2F"><font size="2">(7:58:55 PM)</font> <b>ALR:</b></font> mojavelinux: http://community.jboss.org/message/530857<br/>
<font color="#A82F2F"><font size="2">(8:00:27 PM)</font> <b>ALR:</b></font> CDI needs to be able to support ctor injection.<br/>
<font color="#A82F2F"><font size="2">(8:00:32 PM)</font> <b>ALR:</b></font> While EJB spec says it&apos;s no-arg only<br/>

<font color="#A82F2F"><font size="2">(8:00:36 PM)</font> <b>mojavelinux:</b></font> ALR well, yes, you are technically correct...CDI and EJB are becoming more intimately involved; basically, I think the way this thing was explained from the beginning was all wrong<br/>
<font color="#A82F2F"><font size="2">(8:00:55 PM)</font> <b>ALR:</b></font> CDI doesn&apos;t have to be portable yet between EJB vendors.<br/>
<font color="#A82F2F"><font size="2">(8:01:05 PM)</font> <b>ALR:</b></font> So this is one of the gaps that we can fill through SPIs.<br/>

<font color="#A82F2F"><font size="2">(8:01:10 PM)</font> <b>mojavelinux:</b></font> CDI is really part of the EJB spec, in addition to being able to work with just POJOs<br/>
<font color="#A82F2F"><font size="2">(8:01:17 PM)</font> <b>mojavelinux:</b></font> it is part via SPIs<br/>
<font color="#A82F2F"><font size="2">(8:01:17 PM)</font> <b>mojavelinux:</b></font> yes<br/>

<font color="#A82F2F"><font size="2">(8:01:31 PM)</font> <b>mojavelinux:</b></font> so in Seam<br/>
<font color="#A82F2F"><font size="2">(8:01:41 PM)</font> <b>mojavelinux:</b></font> Seam 2 was really a client of the EJB container<br/>
<font color="#A82F2F"><font size="2">(8:01:48 PM)</font> <b>ALR:</b></font> Right<br/>

<font color="#A82F2F"><font size="2">(8:01:49 PM)</font> <b>mojavelinux:</b></font> it looked up instances via JNDI, wrapped them, etc<br/>
<font color="#A82F2F"><font size="2">(8:02:01 PM)</font> <b>mojavelinux:</b></font> but in Java EE 6...this is all negotiated in the server itself<br/>
<font color="#A82F2F"><font size="2">(8:02:03 PM)</font> <b>ALR:</b></font> Now there&apos;s some more tightly bound interaction when it comes to lifecycle and the like<br/>

<font color="#A82F2F"><font size="2">(8:02:12 PM)</font> <b>mojavelinux:</b></font> the application code sees them as one<br/>
<font color="#A82F2F"><font size="2">(8:02:27 PM)</font> <b>mojavelinux:</b></font> EJB and CDI negotiating together to give a single representation of this bean<br/>
<font color="#A82F2F"><font size="2">(8:03:58 PM)</font> <b>mojavelinux:</b></font> looking at pastebin<br/>

<font color="#A82F2F"><font size="2">(8:04:35 PM)</font> <b>mojavelinux:</b></font> kenglxn you can cut out the producer<br/>
<font color="#A82F2F"><font size="2">(8:04:39 PM)</font> <b>mojavelinux:</b></font> kenglxn except<br/>
<font color="#A82F2F"><font size="2">(8:04:57 PM)</font> <b>mojavelinux:</b></font> kenglxn Arquillian doesn&apos;t yet support no-interface EJB lookups (unless aslak fixed that since I last checked)<br/>

<font color="#A82F2F"><font size="2">(8:05:02 PM)</font> <b>mojavelinux:</b></font> in which case you would need the producer<br/>
<font color="#A82F2F"><font size="2">(8:05:15 PM)</font> <b>mojavelinux:</b></font> but your producer has a problem in that it is producing a bean type that already exists<br/>
<font color="#A82F2F"><font size="2">(8:05:36 PM)</font> <b>mojavelinux:</b></font> here is a trick Mark Struberg showed me<br/>

<font color="#A82F2F"><font size="2">(8:05:45 PM)</font> <b>mojavelinux:</b></font> you can hide on of the beans from CDI using @Typed()<br/>
<font color="#A82F2F"><font size="2">(8:05:52 PM)</font> <b>mojavelinux:</b></font> so add @Typed() to the @Stateless bean<br/>
<font color="#A82F2F"><font size="2">(8:05:56 PM)</font> <b>mojavelinux:</b></font> then it will work<br/>

<font color="#16569E"><font size="2">(8:06:14 PM)</font> <b>kenglxn:</b></font> cool<br/>
<font color="#16569E"><font size="2">(8:06:20 PM)</font> <b>kenglxn:</b></font> I'll try that out :9<br/>
<font color="#16569E"><font size="2">(8:06:22 PM)</font> <b>kenglxn:</b></font> thanks<br/>

<font color="#A82F2F"><font size="2">(8:07:03 PM)</font> <b>mojavelinux:</b></font> this producer conflict comes up pretty early, already have an FAQ on it...<br/>
<font color="#A82F2F"><font size="2">(8:07:06 PM)</font> <b>mojavelinux:</b></font> link coming<br/>
<font color="#A82F2F"><font size="2">(8:07:40 PM)</font> <b>mojavelinux:</b></font> http://seamframework.org/Documentation/HowDoAResolveAnAmbiguousResolutionExceptionBetweenAProducerMethodAndARawType<br/>

<font color="#16569E"><font size="2">(8:08:00 PM)</font> <b>kenglxn:</b></font> great :)<br/>
<font color="#A82F2F"><font size="2">(8:08:25 PM)</font> <b>mojavelinux:</b></font> ah<br/>
<font color="#A82F2F"><font size="2">(8:08:30 PM)</font> <b>mojavelinux:</b></font> except the answer needs updating<br/>

<font color="#A82F2F"><font size="2">(8:08:35 PM)</font> <b>mojavelinux:</b></font> because it doesn&apos;t suggest the @Typed() trick<br/>
<font color="#A82F2F"><font size="2">(8:08:43 PM)</font> <b>mojavelinux:</b></font> I didn&apos;t learn about that until JSFDays when I met Mark<br/>
<font color="#A82F2F"><font size="2">(8:08:46 PM)</font> <b>mojavelinux:</b></font> it is a nice quick solution<br/>

<font color="#A82F2F"><font size="2">(8:08:59 PM)</font> <b>mojavelinux:</b></font> though the @Qualifier annotation is really the preferred solution<br/>
<font color="#A82F2F"><font size="2">(8:09:01 PM)</font> <b>mojavelinux:</b></font> in a way<br/>
<font color="#A82F2F"><font size="2">(8:09:09 PM)</font> <b>mojavelinux:</b></font> preferred -&gt; more like &quot;official&quot;<br/>

<font color="#A82F2F"><font size="2">(8:09:24 PM)</font> <b>mojavelinux:</b></font> @Typed() is like adding a @Veto qualifier<br/>
<font color="#A82F2F"><font size="2">(8:09:34 PM)</font> <b>mojavelinux:</b></font> except, if you made a @Veto qualifier you could do<br/>
<font color="#A82F2F"><font size="2">(8:09:39 PM)</font> <b>mojavelinux:</b></font> @Inject @Veto HelloBean<br/>

<font color="#A82F2F"><font size="2">(8:09:41 PM)</font> <b>mojavelinux:</b></font> and that is just strange<br/>
<font color="#A82F2F"><font size="2">(8:09:51 PM)</font> <b>mojavelinux:</b></font> so @Typed() is like a qualifier which cannot be referenced<br/>
<font color="#A82F2F"><font size="2">(8:09:52 PM)</font> <b>mojavelinux:</b></font> :)<br/>

<font color="#A82F2F"><font size="2">(8:10:04 PM)</font> <b>mojavelinux:</b></font> btw, you could also do something like<br/>
<font color="#A82F2F"><font size="2">(8:10:10 PM)</font> <b>mojavelinux:</b></font> @Typed(AltInterface.class)<br/>
<font color="#A82F2F"><font size="2">(8:10:16 PM)</font> <b>mojavelinux:</b></font> let&apos;s do it right<br/>

<font color="#A82F2F"><font size="2">(8:10:31 PM)</font> <b>mojavelinux:</b></font> public class HelloBean implements InterfaceA, InterfaceB {}<br/>
<font color="#A82F2F"><font size="2">(8:10:36 PM)</font> <b>mojavelinux:</b></font> then you could do<br/>
<font color="#A82F2F"><font size="2">(8:10:51 PM)</font> <b>mojavelinux:</b></font> public @Typed(InterfaceA.class) HelloBean implements InterfaceA, InterfaceB {}<br/>

<font color="#A82F2F"><font size="2">(8:11:02 PM)</font> <b>mojavelinux:</b></font> you could do @Inject InterfaceA but not @Inject InterfaceB<br/>
<font color="#A82F2F"><font size="2">(8:11:08 PM)</font> <b>mojavelinux:</b></font> just so you know what that annotation is all about<br/>
<font color="#A82F2F"><font size="2">(8:11:24 PM)</font> <b>mojavelinux:</b></font> so by logic, if you did public @Typed() class HelloBean implements InterfaceA, InterfaceB {}<br/>

<font color="#A82F2F"><font size="2">(8:11:27 PM)</font> <b>mojavelinux:</b></font> you can&apos;t do @Inject<br/>
<font color="#A82F2F"><font size="2">(8:11:28 PM)</font> <b>mojavelinux:</b></font> :)<br/>
<font color="#A82F2F"><font size="2">(8:11:40 PM)</font> <b>mojavelinux:</b></font> but if it is an EJB, you can still do @EJB<br/>

<font color="#A82F2F"><font size="2">(8:11:46 PM)</font> <b>mojavelinux:</b></font> little tricks of the trade<br/>
<font color="#A82F2F"><font size="2">(8:13:17 PM)</font> <b>mojavelinux:</b></font> kenglxn just keep in mind that (as far as I know) Arquillian is still not supporting @Inject on non-interface EJBs yet (since this requires some CDI integration logic)<br/>
<font color="#A82F2F"><font size="2">(8:14:11 PM)</font> <b>mojavelinux:</b></font> btw http://gist.github.com/<br/>

<font color="#A82F2F"><font size="2">(8:14:25 PM)</font> <b>mojavelinux:</b></font> not that I&apos;m against pastebin, just see which one you like<br/>
<font color="#A82F2F"><font size="2">(8:14:30 PM)</font> <b>mojavelinux:</b></font> I happen to like gist so far<br/>
<font color="#A82F2F"><font size="2">(8:14:40 PM)</font> <b>mojavelinux:</b></font> just suggesting it<br/>

<font color="#16569E"><font size="2">(8:14:45 PM)</font> <b>kenglxn:</b></font> cool<br/>
<font color="#16569E"><font size="2">(8:15:04 PM)</font> <b>kenglxn:</b></font> thanks for the tips :)<br/>
<font color="#A82F2F"><font size="2">(8:15:32 PM)</font> <b>mojavelinux:</b></font> another little tip<br/>

<font color="#A82F2F"><font size="2">(8:15:41 PM)</font> <b>mojavelinux:</b></font> you can create a producer which produces something only available to the EL like this<br/>
<font color="#A82F2F"><font size="2">(8:15:56 PM)</font> <b>mojavelinux:</b></font> public @Named @Typed() Foo getFoo() {}<br/>
<font color="#A82F2F"><font size="2">(8:15:58 PM)</font> <b>mojavelinux:</b></font> then {#foo}<br/>

<font color="#A82F2F"><font size="2">(8:16:03 PM)</font> <b>mojavelinux:</b></font> sorry, #{foo}<br/>
<font color="#A82F2F"><font size="2">(8:16:07 PM)</font> <b>mojavelinux:</b></font> but not @Inject Foo<br/>
<font color="#A82F2F"><font size="2">(8:16:08 PM)</font> <b>mojavelinux:</b></font> :)<br/>

<font color="#A82F2F"><font size="2">(8:16:23 PM)</font> <b>mojavelinux:</b></font> nice for not creating conflicts, again<br/>
<font color="#A82F2F"><font size="2">(8:16:31 PM)</font> <b>mojavelinux:</b></font> this stuff is like a swiss army knife<br/>
<font color="#A82F2F"><font size="2">(8:16:44 PM)</font> <b>mojavelinux:</b></font> amazing what you can do...which is a good thing as ALR will tell you because it is not a closed system :)<br/>

<font color="#A82F2F"><font size="2">(8:16:58 PM)</font> <b>aslak:</b></font> mojavelinux, kenglxn: no no-beaninterface support yet in arquillian. the whole ejb injection part if up for rewrite..<br/>
<font color="#A82F2F"><font size="2">(8:17:04 PM)</font> <b>mojavelinux:</b></font> Seam 2 is a very closed system<br/>
<font color="#A82F2F"><font size="2">(8:17:26 PM)</font> <b>mojavelinux:</b></font> aslak cool, just wanted to make sure I had the story straight<br/>

<font color="#A82F2F"><font size="2">(8:17:47 PM)</font> <b>ALR:</b></font> I might have to rewrite it soon<br/>
<font color="#A82F2F"><font size="2">(8:17:52 PM)</font> <b>ALR:</b></font> I have had some ideas for it<br/>
<font color="#A82F2F"><font size="2">(8:18:00 PM)</font> <b>ALR:</b></font> It&apos;s not terribly complex either<br/>

<font size="2">(8:18:01 PM)</font><b> lincolnthree [<em>~lb3@cpe-075-176-023-015.carolina.res.rr.com</em>] entered the room.</b><br/>
<font color="#A82F2F"><font size="2">(8:18:20 PM)</font> <b>ALR:</b></font> Just an abstraction so each container provider can give its own resolution logic to supply the target<br/>
<font color="#A82F2F"><font size="2">(8:18:33 PM)</font> <b>aslak:</b></font> ALR, in @ArquillianResource vs @Inject.. me and pete was discussing it a bit. we will probably get in trouble with the frameworks that actually support the injection...<br/>

<font color="#16569E"><font size="2">(8:18:46 PM)</font> <b>kenglxn:</b></font> well said, truly is like a swiss army knife<br/>
<font color="#16569E"><font size="2">(8:19:05 PM)</font> <b>kenglxn:</b></font> now i got a whole bunch of stuff to try out :)<br/>
<font color="#16569E"><font size="2">(8:19:51 PM)</font> <b>kenglxn:</b></font> thanks again guys for your help and input<br/>

<font size="2">(8:19:55 PM)</font><b> aamonten left the room (quit: Read error: Connection reset by peer).</b><br/>
<font size="2">(8:20:25 PM)</font><b> aamonten [<em>~aamonten@200.111.187.74</em>] entered the room.</b><br/>
<font color="#A82F2F"><font size="2">(8:20:26 PM)</font> <b>aslak:</b></font> ALR, that part is there already, you have the option to overload createContext or lookupEJB http://anonsvn.jboss.org/repos/common/arquillian/trunk/testenrichers/ejb/src/main/java/org/jboss/arquillian/testenricher/ejb/EJBInjectionEnricher.java<br/>
<font color="#A82F2F"><font size="2">(8:20:39 PM)</font> <b>aslak:</b></font> override i mean<br/>

<font color="#A82F2F"><font size="2">(8:20:43 PM)</font> <b>ALR:</b></font> Hehe, not the enricher<br/>
<font color="#A82F2F"><font size="2">(8:20:45 PM)</font> <b>ALR:</b></font> A resolver<br/>
<font color="#A82F2F"><font size="2">(8:21:02 PM)</font> <b>aslak:</b></font> ALR, what&apos;s the diff?<br/>

<font color="#A82F2F"><font size="2">(8:21:07 PM)</font> <b>ALR:</b></font> Using exceptions for flow control, for one :)<br/>
<font color="#A82F2F"><font size="2">(8:21:14 PM)</font> <b>ALR:</b></font> Or expecting someone to override the default impl.<br/>
<font color="#A82F2F"><font size="2">(8:21:27 PM)</font> <b>ALR:</b></font> The enricher is a good hook to Arquillian<br/>

<font color="#A82F2F"><font size="2">(8:21:32 PM)</font> <b>ALR:</b></font> The resolver just handles resolution<br/>
<font color="#A82F2F"><font size="2">(8:22:22 PM)</font> <b>aslak:</b></font> the Resolver == lookupEJB(), but sure, extract it out in a if<br/>
<font color="#A82F2F"><font size="2">(8:23:41 PM)</font> <b>ALR:</b></font> if?<br/>

<font color="#A82F2F"><font size="2">(8:23:44 PM)</font> <b>aslak:</b></font> interface<br/>
<font color="#A82F2F"><font size="2">(8:23:59 PM)</font> <b>mojavelinux:</b></font> kenglxn<br/>
<font color="#A82F2F"><font size="2">(8:24:03 PM)</font> <b>ALR:</b></font> Ah.  I guess I&apos;m looking for a chain of enrichers.<br/>

<font color="#A82F2F"><font size="2">(8:24:12 PM)</font> <b>ALR:</b></font> Because those can actually be aspects.<br/>
<font color="#A82F2F"><font size="2">(8:24:29 PM)</font> <b>mojavelinux:</b></font> kenglxn if you have questions, feel free to write down the questions that came up in your head and pass them on to me (or put them on a wiki somewhere)<br/>
<font color="#A82F2F"><font size="2">(8:24:38 PM)</font> <b>mojavelinux:</b></font> kenglxn and we can convert these into FAQ or address them in the docs<br/>

<font color="#A82F2F"><font size="2">(8:24:41 PM)</font> <b>ALR:</b></font> Where each Enricher handles a specific thing.  ie. @EJB.  Another one may do @Inject.  Or whatever needs to be taken.<br/>
<font color="#A82F2F"><font size="2">(8:24:46 PM)</font> <b>ALR:</b></font> All in test scope.<br/>
<font color="#A82F2F"><font size="2">(8:24:57 PM)</font> <b>ALR:</b></font> Which has access to class and suite scopes :)<br/>

<font color="#A82F2F"><font size="2">(8:25:30 PM)</font> <b>mojavelinux:</b></font> kenglxn we need to get the perspective of the student so to speak :)<br/>
<font size="2">(8:25:37 PM)</font><b> theute [<em>~theute@redhat/jboss/theute</em>] entered the room.</b><br/>
<font color="#A82F2F"><font size="2">(8:26:19 PM)</font> <b>aslak:</b></font> ALR, there are multiple enrichers today, one for EJB, Resource, CDI<br/>

<font color="#A82F2F"><font size="2">(8:26:26 PM)</font> <b>ALR:</b></font> Yep.<br/>
<font color="#A82F2F"><font size="2">(8:26:35 PM)</font> <b>aslak:</b></font> one for each i mean<br/>
<font color="#A82F2F"><font size="2">(8:27:06 PM)</font> <b>ALR:</b></font> Cool I see.<br/>

<font color="#A82F2F"><font size="2">(8:27:28 PM)</font> <b>ALR:</b></font> If we pass along scopes like you&apos;d discovered earlier, that might help with the coupling of the thing.<br/>
<font color="#A82F2F"><font size="2">(8:27:38 PM)</font> <b>ALR:</b></font> But I need to find time to really dig in before I can make any such claims :)<br/>
<font color="#A82F2F"><font size="2">(8:28:21 PM)</font> <b>aslak:</b></font> yea, i think we need to share the context with the enrichers as well..<br/>

<font color="#A82F2F"><font size="2">(8:29:04 PM)</font> <b>ALR:</b></font> aslak: Basically they look like interceptors to me :)<br/>
<font color="#A82F2F"><font size="2">(8:29:16 PM)</font> <b>ALR:</b></font> So I&apos;m stealing the Servlet Filter / EJB Interceptor model.<br/>
<font color="#A82F2F"><font size="2">(8:30:42 PM)</font> <b>aslak:</b></font> yea, they are executed in order before the execution of the test, but they can&apos;t really intercept the actuallt execution<br/>

<font color="#A82F2F"><font size="2">(8:31:58 PM)</font> <b>ALR:</b></font> Hehe, I wonder if they should.<br/>
<font color="#A82F2F"><font size="2">(8:32:26 PM)</font> <b>ALR:</b></font> Then they&apos;d be able to muck with all test invocations to add context or whatever.<br/>
<font color="#A82F2F"><font size="2">(8:32:37 PM)</font> <b>ALR:</b></font> But I&apos;d need to think of some use case for that.<br/>

<font color="#A82F2F"><font size="2">(8:40:23 PM)</font> <b>aslak:</b></font> mm<br/>
<font color="#A82F2F"><font size="2">(8:40:58 PM)</font> <b>aslak:</b></font> talking to rogerk atm, he considering using arquillian for some glassfish cdi testing.. :)<br/>
<font color="#A82F2F"><font size="2">(8:49:33 PM)</font> <b>aslak:</b></font> mojavelinux, ^<br/>

<font color="#A82F2F"><font size="2">(8:50:54 PM)</font> <b>mojavelinux:</b></font> aslak woot!<br/>
<font color="#A82F2F"><font size="2">(8:51:42 PM)</font> <b>aslak:</b></font> he just fixed the glassfish bug that was the cdi -&gt; glassfish -&gt; arquillian stopper .. :)<br/>
<font color="#A82F2F"><font size="2">(8:51:52 PM)</font> <b>aslak:</b></font> blocker<br/>

<font color="#16569E"><font size="2">(9:09:56 PM)</font> <b>kenglxn:</b></font> mojavelinux: thats a good idea about the FAQ, i'll write up the questions I have, even the ones weve answered here, and then we canget them on a wiki or something. Probably others with similar questions that this will be a help for<br/>
<font color="#16569E"><font size="2">(9:10:37 PM)</font> <b>kenglxn:</b></font> i'll be happy to give the students perspective ;)<br/>
<font color="#A82F2F"><font size="2">(9:28:28 PM)</font> <b>mojavelinux:</b></font> kenglxn awesome<br/>

<font color="#A82F2F"><font size="2">(9:31:04 PM)</font> <b>aslak:</b></font> mojavelinux, rogerk want to use arquillian for a glassfish-weld integration suite that we&apos;re suppose to run for them..<br/>
<font color="#A82F2F"><font size="2">(9:31:25 PM)</font> <b>aslak:</b></font> mojavelinux, testng or junit? what do weld prefere? testng today isn&apos;t it?<br/>
<font color="#A82F2F"><font size="2">(9:33:45 PM)</font> <b>mojavelinux:</b></font> aslak what did Kent say about fixing catagories?<br/>

<font color="#A82F2F"><font size="2">(9:33:50 PM)</font> <b>mojavelinux:</b></font> did you challenge him?<br/>
<font color="#A82F2F"><font size="2">(9:34:10 PM)</font> <b>aslak:</b></font> mojavelinux, hehe no he didn&apos;t talk much about junit at all<br/>
<font color="#A82F2F"><font size="2">(9:34:19 PM)</font> <b>mojavelinux:</b></font> aslak if JUnit fixes catagories, I would take it, but TestNG is the only one with the flexibility of groups (and data providers) today<br/>

<font color="#A82F2F"><font size="2">(9:34:30 PM)</font> <b>mojavelinux:</b></font> data providers don&apos;t matter all that much to me, but I can&apos;t work without groups<br/>
<font color="#A82F2F"><font size="2">(9:34:36 PM)</font> <b>aslak:</b></font> mojavelinux, it was 1 1/2 hour with hime remenising about all his old design flaws in the previous versions of junit.. odd thinggy<br/>
<font color="#A82F2F"><font size="2">(9:35:15 PM)</font> <b>mojavelinux:</b></font> aslak interesting...did you get a good feeling about the governance of it? the direction?<br/>

<font color="#A82F2F"><font size="2">(9:36:34 PM)</font> <b>aslak:</b></font> not really.. the impression i was getting was that he felt a bit pitty that they didn&apos;t charge for junit. sick of ppl with bad patches. only two cimmiters or so stop wasting their time. they only wotk like 2 hours a week or what ever and they do what they want without any big plan<br/>
<font color="#A82F2F"><font size="2">(9:36:48 PM)</font> <b>aslak:</b></font> my bit of negative summary.. :)<br/>
<font color="#A82F2F"><font size="2">(9:37:41 PM)</font> <b>aslak:</b></font> -or<br/>

<font color="#A82F2F"><font size="2">(9:38:16 PM)</font> <b>mojavelinux:</b></font> so eventually, JBoss is going to maintain a test framework ;)<br/>
<font color="#A82F2F"><font size="2">(9:38:24 PM)</font> <b>mojavelinux:</b></font> I mean, how big can TestNG really be in code size?<br/>
<font color="#A82F2F"><font size="2">(9:38:28 PM)</font> <b>mojavelinux:</b></font> :)<br/>

<font color="#A82F2F"><font size="2">(9:38:33 PM)</font> <b>mojavelinux:</b></font> plus, we have JBoss Tools team<br/>
<font color="#A82F2F"><font size="2">(9:38:40 PM)</font> <b>mojavelinux:</b></font> who could write a decent plugin<br/>
<font color="#A82F2F"><font size="2">(9:38:42 PM)</font> <b>mojavelinux:</b></font> hahahah<br/>

<font size="2">(9:38:56 PM)</font><b> germanescobar [<em>~German_Es@190.158.227.122</em>] entered the room.</b><br/>
<font color="#A82F2F"><font size="2">(9:39:38 PM)</font> <b>mojavelinux:</b></font> I mean, it&apos;s worth considering what to do...just keep in mind that we should consider the path that will not get in our way...we don&apos;t want to do it just for the heck of it, but if in the end it causes less work and pain, we could fork or lead JUnit or TestNG<br/>
<font color="#A82F2F"><font size="2">(9:39:39 PM)</font> <b>aslak:</b></font> is testng not maintained ?<br/>

<font color="#A82F2F"><font size="2">(9:39:55 PM)</font> <b>mojavelinux:</b></font> Cedric....well, he has in interesting attitude<br/>
<font color="#A82F2F"><font size="2">(9:40:36 PM)</font> <b>mojavelinux:</b></font> &quot;It&apos;s open source because no one would pay for it...and I just add what features makes sense to me&quot;<br/>
<font color="#A82F2F"><font size="2">(9:40:55 PM)</font> <b>mojavelinux:</b></font> nice guy, but a bit of a puzzle as to where that project stands<br/>

<font color="#A82F2F"><font size="2">(9:42:01 PM)</font> <b>aslak:</b></font> so we have two test frameworks broken on different places developed by ppl that wish they had gotten payed for it and with out a real plan/future.. great<br/>
<font color="#A82F2F"><font size="2">(9:42:10 PM)</font> <b>aslak:</b></font> a fork sounds sweet.. :)<br/>
<font color="#A82F2F"><font size="2">(9:42:54 PM)</font> <b>mojavelinux:</b></font> basically, which is why I suggest, if we have to, let&apos;s fork it and make it right....this could be a cornerstone to this tesitng strategy that we are formulating...and I guarantee you that if we get buy in, we will get a person to help with the plugin...review it, fixed it up, whatever...bundle it<br/>

<font color="#A82F2F"><font size="2">(9:43:14 PM)</font> <b>mojavelinux:</b></font> and if we are having some arquillian support in a plugin anyway, might as well look all the way down to the test framework plugin<br/>
<font color="#A82F2F"><font size="2">(9:43:31 PM)</font> <b>mojavelinux:</b></font> I mean, if we want to have good tools, this is crucial<br/>
<font color="#A82F2F"><font size="2">(9:43:41 PM)</font> <b>aslak:</b></font> yah<br/>

<font color="#A82F2F"><font size="2">(9:43:45 PM)</font> <b>mojavelinux:</b></font> and once again, we will be leaders in fixing the wasteland of broken dreams ;)<br/>
<font color="#A82F2F"><font size="2">(9:43:58 PM)</font> <b>aslak:</b></font> hehe<br/>
<font color="#A82F2F"><font size="2">(9:44:34 PM)</font> <b>lincolnthree:</b></font> I love you for Arquillian<br/>

<font color="#A82F2F"><font size="2">(9:46:00 PM)</font> <b>aslak:</b></font> :)<br/>
<font color="#A82F2F"><font size="2">(9:46:10 PM)</font> <b>aslak:</b></font> lincolnthree, found some use for it?<br/>
<font color="#A82F2F"><font size="2">(9:46:17 PM)</font> <b>mojavelinux:</b></font> Seam Faces module ;)<br/>

<font color="#A82F2F"><font size="2">(9:46:25 PM)</font> <b>mojavelinux:</b></font> so far, just CDI embedded<br/>
<font color="#A82F2F"><font size="2">(9:46:29 PM)</font> <b>lincolnthree:</b></font> Already got 23 test cases using it.<br/>
<font color="#A82F2F"><font size="2">(9:46:35 PM)</font> <b>aslak:</b></font> niice<br/>

<font color="#A82F2F"><font size="2">(9:46:58 PM)</font> <b>aslak:</b></font> mojarra is very slow btw.. 20 sec or so to boot<br/>
<font color="#A82F2F"><font size="2">(9:47:11 PM)</font> <b>aslak:</b></font> hopeless in a arquillian setting<br/>
<font color="#A82F2F"><font size="2">(9:47:11 PM)</font> <b>lincolnthree:</b></font> really?<br/>

<font color="#A82F2F"><font size="2">(9:47:19 PM)</font> <b>lincolnthree:</b></font> takes a few seconds for me on GlassFish<br/>
<font color="#A82F2F"><font size="2">(9:47:23 PM)</font> <b>aslak:</b></font> atleast under jboss<br/>
<font color="#A82F2F"><font size="2">(9:48:01 PM)</font> <b>lincolnthree:</b></font> Huh.<br/>

<font color="#A82F2F"><font size="2">(9:48:07 PM)</font> <b>lincolnthree:</b></font> I wonder why.<br/>
<font color="#A82F2F"><font size="2">(9:48:49 PM)</font> <b>mojavelinux:</b></font> hehee, cause it takes JBoss 15 seconds to decide which JSF impl to use ;)<br/>
<font color="#A82F2F"><font size="2">(9:48:50 PM)</font> <b>mojavelinux:</b></font> j/k<br/>

<font color="#A82F2F"><font size="2">(9:57:11 PM)</font> <b>lincolnthree:</b></font> ouch!<br/>
<font size="2">(10:48:52 PM)</font><b> aslak left the room (quit: Ping timeout: 246 seconds).</b><br/>
<font size="2">(11:04:38 PM)</font><b> mojavelinux left the room (quit: Quit: Leaving.).</b><br/>
<font size="2">(11:10:53 PM)</font><b> aslak [<em>~aslak@189.81-167-190.customer.lyse.net</em>] entered the room.</b><br/>

<font size="2">(11:30:16 PM)</font><b> aamonten left the room.</b><br/>
<font size="2">(11:55:39 PM)</font><b> germanescobar left the room (quit: Quit: Leaving.).</b><br/>
<font size="2">(12:27:59 AM)</font><b> mojavelinux [<em>~dallen@pool-96-255-2-220.washdc.fios.verizon.net</em>] entered the room.</b><br/>
<font color="#A82F2F"><font size="2">(12:29:50 AM)</font> <b>mojavelinux:</b></font> ALR<br/>

<font color="#A82F2F"><font size="2">(12:30:19 AM)</font> <b>mojavelinux:</b></font> ALR do you know if it is possible to hide classes that are used in a deployer?<br/>
<font color="#A82F2F"><font size="2">(12:30:37 AM)</font> <b>mojavelinux:</b></font> ALR for instance, a deployer (like the Weld deployer) uses SLF4J<br/>
<font color="#A82F2F"><font size="2">(12:30:49 AM)</font> <b>mojavelinux:</b></font> ALR is it possible to hide those classes so that applications can&apos;t access them<br/>

<font color="#A82F2F"><font size="2">(12:31:01 AM)</font> <b>mojavelinux:</b></font> this is part of OSGi by default...so I wonder whether JBoss AS can emulate that<br/>
<font color="#A82F2F"><font size="2">(12:31:05 AM)</font> <b>mojavelinux:</b></font> I guess I should ask Ales<br/>
<font color="#A82F2F"><font size="2">(12:31:21 AM)</font> <b>mojavelinux:</b></font> just curious since you have analyzed the classspath situation in JBoss AS<br/>

<font color="#A82F2F"><font size="2">(12:31:24 AM)</font> <b>mojavelinux:</b></font> recently<br/>
<font color="#A82F2F"><font size="2">(12:31:40 AM)</font> <b>lincolnthree:</b></font> I seem to remember having a related conversation about this recently.<br/>
<font color="#A82F2F"><font size="2">(12:31:44 AM)</font> <b>lincolnthree:</b></font> But I don&apos;t remember the outcome.<br/>

<font color="#A82F2F"><font size="2">(12:31:50 AM)</font> <b>lincolnthree:</b></font> Maybe it was just the one I had with you.<br/>
<font color="#A82F2F"><font size="2">(12:33:23 AM)</font> <b>mojavelinux:</b></font> frankly, it&apos;s a disaster if a deployer is exposing 100% of its classes<br/>
<font color="#A82F2F"><font size="2">(12:33:32 AM)</font> <b>mojavelinux:</b></font> naturally, some will be exposed, like if it is providing Hibernate<br/>

<font color="#A82F2F"><font size="2">(12:33:41 AM)</font> <b>mojavelinux:</b></font> but if it is exposing all of Hibernate&apos;s dependencies, that&apos;s just crazy<br/>
<font color="#A82F2F"><font size="2">(12:35:52 AM)</font> <b>lincolnthree:</b></font> Im looking through the JIRA<br/>
<font color="#A82F2F"><font size="2">(12:35:58 AM)</font> <b>lincolnthree:</b></font> I don&apos;t see an issue report that looks similar to this.<br/>

<font color="#A82F2F"><font size="2">(12:36:01 AM)</font> <b>lincolnthree:</b></font> We should enter it.<br/>
<font color="#A82F2F"><font size="2">(12:36:45 AM)</font> <b>lincolnthree:</b></font> I mean - I see a lot of SLF4J issues that look related -- but none that are specifically this issue.<br/>
<font color="#A82F2F"><font size="2">(12:37:31 AM)</font> <b>mojavelinux:</b></font> man, it sort of gets more bizarre<br/>

<font color="#A82F2F"><font size="2">(12:37:39 AM)</font> <b>mojavelinux:</b></font> JBoss AS seems to use SLF4J throughout<br/>
<font color="#A82F2F"><font size="2">(12:37:44 AM)</font> <b>mojavelinux:</b></font> and the deployers get access to that<br/>
<font color="#A82F2F"><font size="2">(12:38:06 AM)</font> <b>mojavelinux:</b></font> so not only is SLF4J leaking up from the deployer...well, it isn&apos;t really (unless you check for one of the extension classes that Weld bundles)<br/>

<font color="#A82F2F"><font size="2">(12:38:11 AM)</font> <b>mojavelinux:</b></font> it is leaking up from the app server<br/>
<font color="#A82F2F"><font size="2">(12:38:17 AM)</font> <b>mojavelinux:</b></font> which I think is just crazy wrong<br/>
<font color="#A82F2F"><font size="2">(12:38:18 AM)</font> <b>lincolnthree:</b></font> That&apos;s just bad.<br/>

<font color="#A82F2F"><font size="2">(12:38:43 AM)</font> <b>mojavelinux:</b></font> I would understand if you added a deployer that exposed a logging framework to applications<br/>
<font color="#A82F2F"><font size="2">(12:38:48 AM)</font> <b>mojavelinux:</b></font> the idea of having a plugin is not bad<br/>
<font color="#A82F2F"><font size="2">(12:38:51 AM)</font> <b>mojavelinux:</b></font> but this is not a plugin<br/>

<font color="#A82F2F"><font size="2">(12:38:55 AM)</font> <b>mojavelinux:</b></font> this is just leakage<br/>
<font color="#A82F2F"><font size="2">(12:39:14 AM)</font> <b>lincolnthree:</b></font> https://jira.jboss.org/jira/browse/JBAS<br/>
<font color="#A82F2F"><font size="2">(12:39:34 AM)</font> <b>mojavelinux:</b></font> I want to try something first, get my head around the whole issue<br/>

<font color="#A82F2F"><font size="2">(12:39:48 AM)</font> <b>lincolnthree:</b></font> Why don&apos;t you get an issue started and I&apos;ll add details as I can. Though, I&apos;m sure your explanation and research will already be more thorough than what I provide ;)<br/>
<font color="#A82F2F"><font size="2">(12:39:56 AM)</font> <b>lincolnthree:</b></font> Ok.<br/>
<font color="#A82F2F"><font size="2">(12:40:11 AM)</font> <b>lincolnthree:</b></font> I&apos;m going to make some Spaghetti and drink some more of this nasty syrup.<br/>

<font size="2">(12:49:20 AM)</font><b> aslak left the room (quit: Quit: Ex-Chat).</b><br/>
<font size="2">(12:58:16 AM)</font><b> lightguard_jp left the room (quit: Ping timeout: 248 seconds).</b><br/>
<font size="2">(1:54:04 AM)</font><b> lincolnthree left the room.</b><br/>
<font size="2">(2:22:47 AM)</font><b> aamonten [<em>~aamonten@pc-210-193-120-200.cm.vtr.net</em>] entered the room.</b><br/>

<font size="2">(2:39:38 AM)</font><b> aamonten left the room (quit: Quit: aamonten).</b><br/>
<font size="2">(3:11:22 AM)</font><b> lightguard_jp [<em>~lightguar@66-182-69-154.static.sdyl010.digis.net</em>] entered the room.</b><br/>
<font size="2">(6:46:43 AM)</font><b> ALR left the room.</b><br/>
<font size="2">(7:20:48 AM)</font><b> mojavelinux left the room (quit: Quit: Leaving.).</b><br/>

<font size="2">(7:31:00 AM)</font><b> lightguard_jp left the room (quit: Quit: Computer has gone to sleep).</b><br/>
<font size="2">(7:47:25 AM)</font><b> lightguard_jp [<em>~lightguar@66-182-69-154.static.sdyl010.digis.net</em>] entered the room.</b><br/>
<font size="2">(8:44:22 AM)</font><b> aslak [<em>~aslak@ns.conduct.no</em>] entered the room.</b><br/>
<font size="2">(9:18:14 AM)</font><b> jharting [<em>~jharting@nat/redhat/x-yvqveenhjzuyhnhl</em>] entered the room.</b><br/>

<font size="2">(9:34:46 AM)</font><b> lightguard_jp left the room (quit: Quit: Computer has gone to sleep).</b><br/>
<font size="2">(9:58:26 AM)</font><b> forgeyan [<em>~yan@218.247.129.201</em>] entered the room.</b><br/>
<font color="#A82F2F"><font size="2">(9:58:55 AM)</font> <b>forgeyan:</b></font> hi ,all<br/>
<font color="#A82F2F"><font size="2">(9:59:05 AM)</font> <b>forgeyan:</b></font> can you see me online?<br/>

<font size="2">(10:04:27 AM)</font><b> forgeyan left the room.</b><br/>
<font color="#A82F2F"><font size="2">(10:10:18 AM)</font> <b>aslak:</b></font> yes.. :)<br/>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>203</wp:post_id>
		<wp:post_date>2010-03-31 11:36:18</wp:post_date>
		<wp:post_date_gmt>2010-03-31 09:36:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jbosstesting30-02-2010</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Blog</title>
		<link>http://www.glxn.net/?page_id=259</link>
		<pubDate>Tue, 06 Apr 2010 19:22:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?page_id=259</guid>
		<description></description>
		<content:encoded><![CDATA[[show-aposts numberposts="999"]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date>2010-04-06 21:22:01</wp:post_date>
		<wp:post_date_gmt>2010-04-06 19:22:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>blog</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>redirect</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.glxn.net]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>purplenurple</title>
		<link>http://www.glxn.net/?attachment_id=357</link>
		<pubDate>Thu, 26 Aug 2010 10:22:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2010/08/purplenurple.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>357</wp:post_id>
		<wp:post_date>2010-08-26 12:22:54</wp:post_date>
		<wp:post_date_gmt>2010-08-26 10:22:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>purplenurple</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2010/08/purplenurple.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1920";s:6:"height";s:4:"1080";s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:24:"2010/08/purplenurple.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"purplenurple-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"purplenurple-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:25:"purplenurple-1024x576.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"576";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/purplenurple.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Music</title>
		<link>http://www.glxn.net/?page_id=397</link>
		<pubDate>Fri, 02 Dec 2011 23:51:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?page_id=397</guid>
		<description></description>
		<content:encoded><![CDATA[<object height="136" width="100%"> <param name="movie" value="https://player.soundcloud.com/player.swf?url=http%3A%2F%2Fapi.soundcloud.com%2Fplaylists%2F1360218&amp;show_comments=true&amp;auto_play=false&amp;show_playcount=true&amp;show_artwork=true&amp;color=ff7700"></param> <param name="allowscriptaccess" value="always"></param> <embed allowscriptaccess="always" height="136" src="https://player.soundcloud.com/player.swf?url=http%3A%2F%2Fapi.soundcloud.com%2Fplaylists%2F1360218&amp;show_comments=true&amp;auto_play=false&amp;show_playcount=true&amp;show_artwork=true&amp;color=ff7700" type="application/x-shockwave-flash" width="100%"></embed> </object>   <span><a href="http://soundcloud.com/kenglxn/sets/noctunreal">noctunreal</a> by <a href="http://soundcloud.com/kenglxn">kenglxn</a></span> 

<object width="400" height="300" ><param name="allowfullscreen" value="true" /><param name="movie" value="http://www.facebook.com/v/10151036845385198" /><embed src="http://www.facebook.com/v/10151036845385198" type="application/x-shockwave-flash" allowfullscreen="true" width="400" height="300"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>397</wp:post_id>
		<wp:post_date>2011-12-03 00:51:32</wp:post_date>
		<wp:post_date_gmt>2011-12-02 23:51:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>music</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ps1 image</title>
		<link>http://www.glxn.net/?attachment_id=426</link>
		<pubDate>Wed, 04 Jan 2012 20:04:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2012/01/ps1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>426</wp:post_id>
		<wp:post_date>2012-01-04 21:04:35</wp:post_date>
		<wp:post_date_gmt>2012-01-04 20:04:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ps1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>425</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2012/01/ps1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/ps1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"399";s:6:"height";s:3:"125";s:14:"hwstring_small";s:23:"height='40' width='128'";s:4:"file";s:15:"2012/01/ps1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:15:"ps1-150x125.png";s:5:"width";s:3:"150";s:6:"height";s:3:"125";}s:6:"medium";a:3:{s:4:"file";s:14:"ps1-300x93.png";s:5:"width";s:3:"300";s:6:"height";s:2:"93";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ps1</title>
		<link>http://www.glxn.net/?attachment_id=430</link>
		<pubDate>Wed, 04 Jan 2012 20:14:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2012/01/ps11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>430</wp:post_id>
		<wp:post_date>2012-01-04 21:14:59</wp:post_date>
		<wp:post_date_gmt>2012-01-04 20:14:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ps1-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>425</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2012/01/ps11.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/01/ps11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"460";s:6:"height";s:3:"153";s:14:"hwstring_small";s:23:"height='42' width='128'";s:4:"file";s:16:"2012/01/ps11.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"ps11-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:15:"ps11-300x99.png";s:5:"width";s:3:"300";s:6:"height";s:2:"99";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Books</title>
		<link>http://www.glxn.net/?page_id=454</link>
		<pubDate>Sat, 10 Mar 2012 18:44:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?page_id=454</guid>
		<description></description>
		<content:encoded><![CDATA[<iframe src="http://astore.amazon.com/twocents01-20" width="95%" height="1000" frameborder="0" scrolling="no"></iframe>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>454</wp:post_id>
		<wp:post_date>2012-03-10 19:44:00</wp:post_date>
		<wp:post_date_gmt>2012-03-10 18:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>books</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>99</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>KenGullaksen</title>
		<link>http://www.glxn.net/?attachment_id=473</link>
		<pubDate>Mon, 19 Mar 2012 17:38:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2009/10/KenGullaksen.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>473</wp:post_id>
		<wp:post_date>2012-03-19 18:38:38</wp:post_date>
		<wp:post_date_gmt>2012-03-19 17:38:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>kengullaksen</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>7</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2009/10/KenGullaksen.pdf</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/KenGullaksen.pdf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pdf_icon</title>
		<link>http://www.glxn.net/?attachment_id=476</link>
		<pubDate>Mon, 19 Mar 2012 17:44:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2009/10/pdf_icon.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>476</wp:post_id>
		<wp:post_date>2012-03-19 18:44:28</wp:post_date>
		<wp:post_date_gmt>2012-03-19 17:44:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pdf_icon</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>7</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2009/10/pdf_icon.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/pdf_icon.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:2:"50";s:6:"height";s:2:"50";s:14:"hwstring_small";s:22:"height='50' width='50'";s:4:"file";s:20:"2009/10/pdf_icon.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Achievements</title>
		<link>http://www.glxn.net/?page_id=487</link>
		<pubDate>Mon, 19 Mar 2012 18:42:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?page_id=487</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>487</wp:post_id>
		<wp:post_date>2012-03-19 19:42:55</wp:post_date>
		<wp:post_date_gmt>2012-03-19 18:42:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>achievements</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>999</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>redirect</wp:meta_key>
			<wp:meta_value><![CDATA[http://coderwall.com/kenglxn]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ken Gullaksen</title>
		<link>http://www.glxn.net/?attachment_id=491</link>
		<pubDate>Fri, 30 Mar 2012 17:38:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/wp-content/uploads/2009/10/me_photo.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>491</wp:post_id>
		<wp:post_date>2012-03-30 19:38:45</wp:post_date>
		<wp:post_date_gmt>2012-03-30 17:38:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>me_photo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>7</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.glxn.net/wp-content/uploads/2009/10/me_photo.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/me_photo.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"541";s:6:"height";s:3:"720";s:14:"hwstring_small";s:22:"height='96' width='72'";s:4:"file";s:20:"2009/10/me_photo.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"me_photo-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"me_photo-225x300.jpg";s:5:"width";s:3:"225";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:20:"me_photo-541x288.jpg";s:5:"width";s:3:"541";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:20:"me_photo-541x288.jpg";s:5:"width";s:3:"541";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:20:"me_photo-225x300.jpg";s:5:"width";s:3:"225";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[ken gullaksen]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Seam Maven Refimpl</title>
		<link>http://www.glxn.net/?p=17</link>
		<pubDate>Sun, 01 Nov 2009 18:59:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.glxn.net/?p=17</guid>
		<description></description>
		<content:encoded><![CDATA[<a rel="nofollow" href="http://www.knowit.no/index.php/knowiten/">Know IT Objectnet</a> developers have created a Mavenized Seam project template. Due to the lack of Maven support in the Seam project, we felt the need to get a project started for the topic. After some research and development, the base was ready to be put in use. We felt that it was only right to make the project available to the public, and put together a google code project. As of now the project is aimed at running on the JBoss-4.2.3 and JBoss-5.x application servers deployed as an EAR project.

You can check out the code from google code: <a title="Seam Maven Refimpl Project Template" href="http://code.google.com/p/seam-maven-refimpl/">http://code.google.com/p/seam-maven-refimpl/</a>

Also check out the tutorial pages: <a title="Seam Maven Refimpl Tutorials" href="http://www.glxn.net/seam-maven-refimpl/doc/tutorial/">http://www.glxn.net/seam-maven-refimpl/doc/tutorial/</a>

Issues and feature requests can be posted here: <a href="http://code.google.com/p/seam-maven-refimpl/issues/list">http://code.google.com/p/seam-maven-refimpl/issues/list</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2009-11-01 19:59:09</wp:post_date>
		<wp:post_date_gmt>2009-11-01 18:59:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>seam-maven-refimpl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ejb3"><![CDATA[EJB3]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="javaee"><![CDATA[JavaEE]]></category>
		<category domain="post_tag" nicename="seam"><![CDATA[Seam]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_liked</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[kwame nkrumah]]></wp:comment_author>
			<wp:comment_author_email>softcons99@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>151.59.135.78</wp:comment_author_IP>
			<wp:comment_date>2010-02-13 19:54:46</wp:comment_date>
			<wp:comment_date_gmt>2010-02-13 18:54:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello,
You did a very good work. Lets me say to you Thank you.
But after copying the ear to jboss, It gives me 
that error:

2010-02-13 19:35:55,828 DEBUG [org.jboss.deployment.scanner.URLDeploymentScanner] Watch URL for: file:/C:/servers/jboss-4.2.3.GA/server/default/deploy/seam-refimpl-ear.ear -&gt; file:/C:/servers/jboss-4.2.3.GA/server/default/deploy/seam-refimpl-ear.ear
2010-02-13 19:35:55,843 ERROR [org.jboss.deployment.scanner.URLDeploymentScanner] Incomplete Deployment listing:

--- Incompletely deployed packages ---
org.jboss.deployment.DeploymentInfo@66e4484 { url=file:/C:/servers/jboss-4.2.3.GA/server/default/deploy/seam-refimpl-ear.ear }
  deployer: org.jboss.deployment.EARDeployer@1dcc4cd
  status: null
  state: FAILED
  watch: file:/C:/servers/jboss-4.2.3.GA/server/default/deploy/seam-refimpl-ear.ear
  altDD: null
  lastDeployed: 1266086155828
  lastModified: 1266086154328
  mbeans:
Thak you to answer soon
Kwame]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[kwame nkrumah]]></wp:comment_author>
			<wp:comment_author_email>softcons99@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>151.59.135.78</wp:comment_author_IP>
			<wp:comment_date>2010-02-13 20:06:05</wp:comment_date>
			<wp:comment_date_gmt>2010-02-13 19:06:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello,
Kwame Again.
Another question:
Can we use jboss 5.0 now or we must stick for the moment with jboss 4.2.3
Thank you,
Kwame]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>193.156.111.1</wp:comment_author_IP>
			<wp:comment_date>2010-02-16 14:09:22</wp:comment_date>
			<wp:comment_date_gmt>2010-02-16 13:09:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, you can use jboss 5 as well.

There has recently been large changes to the project template. Please check the updated tutorial at http://www.glxn.net/seam-maven-refimpl/doc/tutorial/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>242</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew Bowley]]></wp:comment_author>
			<wp:comment_author_email>andrew@cybersearch2.com.au</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.101.7.240</wp:comment_author_IP>
			<wp:comment_date>2010-05-25 14:25:01</wp:comment_date>
			<wp:comment_date_gmt>2010-05-25 12:25:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for Mavernized Seam project template and the tutorials. This is excellent material and helping me to climb a steep learning curve. I am currently progressing my way through the Eclipse tutorial. The numerous screen shots are very welcome and I managed to successfuly launch the Seam Tutorial. 

Note one problem I encountered was with the "install -Pexplode" run configuration. This is shown in the screen shot with Goals set to "env-dev,explode". These Goals were not considered by Eclipse to be valid. I must admit they did not look to me like goals at all. I tried "install" instead and this was accepted. It also made more sense.  

Please note I also found an issue the Maven EAR plugin. The default version does not work with JBoss 5. I had to specify in the ear pom.xml that Version 2.4.1 of the plugin was required.

Is there a better way to give you feedback on other issues as I come across them? 

Thanks again for all your efforts.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>243</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>195.159.241.226</wp:comment_author_IP>
			<wp:comment_date>2010-05-25 14:53:39</wp:comment_date>
			<wp:comment_date_gmt>2010-05-25 12:53:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Andrew, and thanks for your feedback.
We are currently in the process of finalizing a 1.0 version of the seam-refimpl, and because of this the tutorial is out of sync. 
The tutorial will be updated very soon. Sorry for the inconvenience.

Also thanks for your feedback on the default maven-ear plugin. <del datetime="2010-05-25T12:58:18+00:00">I'll get this checked in as part of the template. (deleted:2010-05-25T12:58:18+00:00)</del>

<del datetime="2010-05-26T08:44:49+00:00"><strong>UPDATE:</strong>
<blockquote>The reason for this is a combination of maven 3 and properties plugin. We are moving the build to groovy for this, and issue should be resolved as soon as 1.0 is out. I'll ping on twitter with an update when this is done, as well as add a comment to this post :)</blockquote></del>

<blockquote>See my next comment for more info on the maven ear properties bug.</blockquote>

For more feedback you could hit me up on mail, or twitter. check my <a href="http://www.glxn.net/?page_id=7" rel="nofollow">Bio</a> page for the details.

Regards, 
Ken]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>242</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>244</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>195.159.241.226</wp:comment_author_IP>
			<wp:comment_date>2010-05-26 10:51:09</wp:comment_date>
			<wp:comment_date_gmt>2010-05-26 08:51:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[One of the project owners, Leif Olsen, has found a fix to the property parsing in maven ear plugin.

The fiks is to add a properties section that references the property files like this:
<pre class="xml" name="code">
<properties>
  <jboss.version>${as.version}</jboss.version>
  <jboss.data-source>${ds.xml}</jboss.data-source>
  <jboss.loader-repository>${app.context}-ear</jboss.loader-repository>
</properties>
</pre>
 
and in the EAR plugin:
<pre class="xml" name="code">
<jboss>
  <version>${jboss.version}</version>

  <loader-repository>
    seam.jboss.org:loader=${jboss.loader-repository}
  </loader-repository>

  <data-sources>
    <data-source>${jboss.data-source}</data-source>
  </data-sources>
</jboss>
</pre>

The project will be updated to include this fix.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>245</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>195.159.241.226</wp:comment_author_IP>
			<wp:comment_date>2010-05-26 10:55:19</wp:comment_date>
			<wp:comment_date_gmt>2010-05-26 08:55:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you come across any issues or want to submit a feature requests please post them here: 
<a href="http://code.google.com/p/seam-maven-refimpl/issues/list" rel="nofollow">http://code.google.com/p/seam-maven-refimpl/issues/list</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>249</wp:comment_id>
			<wp:comment_author><![CDATA[Deepak D Patil]]></wp:comment_author>
			<wp:comment_author_email>didipat@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.240.45.209</wp:comment_author_IP>
			<wp:comment_date>2010-11-28 20:33:24</wp:comment_date>
			<wp:comment_date_gmt>2010-11-28 19:33:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Ken,
Thanks for your efforts on mavenizing seam.
Trying to use it for my project.(learning maven concepts yet..:()

There is a pending question for you at..
http://seamframework.org/Community/QuickQuestionAboutSeammavenrefimplProjectStructure

Regards.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Setting a timeout in a JAX WS Client</title>
		<link>http://www.glxn.net/?p=124</link>
		<pubDate>Thu, 25 Feb 2010 18:31:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=124</guid>
		<description></description>
		<content:encoded><![CDATA[Having a JAX WS Client without timeout can be quite dangerous. There are two important timeout settings that should be implemented by the client. JAXWSProperties.REQUEST_TIMEOUT and JAXWSProperties.CONNECT_TIMEOUT. Without these, you will quickly run into a potential deadlock on the server using the client. There may be a network failure that causes the client to either fail to connect or wait for response that may never arrive. Say the timeout defaults to 10 minutes. This means every WS request or connection will hold the thread for 10 minutes. You will unquestionably run out of threads very quickly, unless your server has almost no load.

<strong>Enough chit-chat, show me the loot!</strong>

What you want to do is get a hold of the service and cast it to BindingProvider. This will enable you to get the request context and add some properties to it. Like so:
<pre name="code" class="java">import com.sun.xml.ws.developer.JAXWSProperties;
import javax.xml.ws.BindingProvider;
...
public class MyWSClientAPI {

 private final MyServiceImpl service;
 private final int defaultRequestTimeout = 5000;
 private final int defaultConnectTimeout = 5000;

 public MyWSClientAPI(MyServiceImpl service) {
   this.service = service;
   try {
     BindingProvider bindingProvider = (BindingProvider) this.service;
     Map&lt;String, Object&gt; context = bindingProvider.getRequestContext();
     String requestTimeout = System.getProperty("wsclient.request.timeout", String.valueOf(defaultRequestTimeout));
     String connectTimeout = System.getProperty("wsclient.connect.timeout", String.valueOf(defaultConnectTimeout));
     context.put(JAXWSProperties.REQUEST_TIMEOUT, Integer.valueOf(requestTimeout));
     context.put(JAXWSProperties.CONNECT_TIMEOUT, Integer.valueOf(connectTimeout));
   } catch (RuntimeException e) {
     Logger.getLogger(this.getClass()).fatal("Could not configure MyWSClientAPI with timeout values.", e);
     throw e;
   }
  }
}</pre>
We now have a Webservice client with a default timeout of 5 seconds for request, and connect. These timeout values can be overridden by setting the SystemProperties wsclient.request.timeout and wsclient.connect.timeout on the jvm running the client. We can create two tests that confirm the expected behavior:
<pre name="code" class="java">@Test(expected = TimeoutException.class)
public void callShouldFailOnLowRequestTimeout() {
 System.setProperty("wsclient.request.timeout", "1");
 MyWSClientAPI myWSClientAPI = new MyWSClientAPI(port);
 myWSClientAPI.performSomeAction();
}

@Test(expected = ConnectionException.class)
public void callShouldFailOnLowConnectTimeout() throws MalformedURLException {
 System.setProperty("wsclient.connect.timeout", "1");
 MyWSClientAPI myWSClientAPI = new MyWSClientAPI(new MyServiceImplService(new URL("http://bogusurl"), qnam).getServiceImplPort());
 myWSClientAPI.performSomeAction();
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date>2010-02-25 19:31:30</wp:post_date>
		<wp:post_date_gmt>2010-02-25 18:31:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-a-timeout-in-a-jax-ws-client</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="javaee"><![CDATA[JavaEE]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Simple CDI/WELD login example</title>
		<link>http://www.glxn.net/?p=136</link>
		<pubDate>Mon, 01 Mar 2010 09:52:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=136</guid>
		<description></description>
		<content:encoded><![CDATA[#gliffydiagram(2016929)#

<strong>View</strong>
[code lang="html"]
&lt;h:form id=&quot;spotifylogin&quot; class=&quot;loginform spotifyform&quot;&gt;
    &lt;h2&gt;Spotify login&lt;/h2&gt;
    &lt;p&gt;Please log in to your spotify account&lt;/p&gt;
    
    &lt;h:outputLabel for=&quot;spotifyusername&quot; value=&quot;Username:&quot;&gt;&lt;/h:outputLabel&gt;
    &lt;h:inputText id=&quot;spotifyusername&quot; value=&quot;#{spotiWelder.username}&quot;&gt;&lt;/h:inputText&gt;
    &lt;h:message for=&quot;spotifyusername&quot; errorClass=&quot;invalid&quot;&gt;&lt;/h:message&gt;
    
    &lt;h:outputLabel for=&quot;spotifypassword&quot; value=&quot;Password:&quot;&gt;&lt;/h:outputLabel&gt;
    &lt;h:inputSecret id=&quot;spotifypassword&quot; value=&quot;#{spotiWelder.password}&quot;&gt;&lt;/h:inputSecret&gt;
    &lt;h:message for=&quot;spotifypassword&quot; errorClass=&quot;invalid&quot;&gt;&lt;/h:message&gt;
    
    &lt;h:commandButton id=&quot;login&quot; action=&quot;#{spotifyWeb.login}&quot; value=&quot;Log in!&quot;&gt;&lt;/h:commandButton&gt;
&lt;/h:form&gt;
[/code]
<strong>Entity</strong>
[code lang="java"]
@Entity
public class SpotiWelder implements Serializable {

    private static final long serialVersionUID = -6625241632523446019L;

    private Long id;

    private String username;

    private String password;

    public SpotiWelder() {
    }

    @Id
    @GeneratedValue
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @NotNull
    @NotEmpty
    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @NotNull
    @NotEmpty
    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }
}
[/code]
<strong>Action Bean</strong>
[code lang="java"]
@SessionScoped
@Named
public class SpotifyWeb implements Serializable {

    private static final long serialVersionUID = -352191768337315102L;

    private Logger log;

    SpotiWelder spotiWelder = new SpotiWelder();

    @Inject
    FacesContext facesContext;

    public SpotifyWeb() {
        this.log = Logger.getLogger(this.getClass().getSimpleName());
        connection = new SpotiWeldConnection();
    }

    @PostConstruct
    public void initialize() {
        log.info(this.getClass().getSimpleName() + &quot; was constructed&quot;);
    }

    public void login() {
        connection.login(spotiWelder.getUsername(), spotiWelder.getPassword());

        log.info(&quot;succesful login for &quot; + loggedInUser);
        facesContext.addMessage(null, new FacesMessage(&quot;Welcome &quot; + loggedInUser.getName()));
    }

    @Produces @Named
    public SpotiWelder getSpotiWelder() {
        return spotiWelder;
    }
}
[/code]
<ul> <li>Remember to add an empty constructor to your entity when using via @Producer methods. If not you might get the dreaded "java.lang.IllegalArgumentException: Object: foo is not a known entity type."</li> <li>Remeber to add @GeneratedValue to @Id field on Entity.</li> </ul> 
<strong>related:</strong>
<a href="http://seamframework.org/Community/JPAEntityIsUnknownWhenUsingTheModelAnnotation">http://seamframework.org/Community/JPAEntityIsUnknownWhenUsingTheModelAnnotation</a>
<a href="http://www.seamframework.org/Community/ErrorWhenUsingSessionScopedAndEntityAnnotation">http://www.seamframework.org/Community/ErrorWhenUsingSessionScopedAndEntityAnnotation</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2010-03-01 10:52:07</wp:post_date>
		<wp:post_date_gmt>2010-03-01 09:52:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jpa-and-cdiweld</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cdi"><![CDATA[cdi]]></category>
		<category domain="post_tag" nicename="javaee"><![CDATA[JavaEE]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="weld"><![CDATA[weld]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Implementing @RequestParam in CDI/WELD using Qualifier and InjectionPoint as @HttpParam</title>
		<link>http://www.glxn.net/?p=141</link>
		<pubDate>Mon, 01 Mar 2010 09:57:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=141</guid>
		<description></description>
		<content:encoded><![CDATA[Implementing @RequestParam as @HttpParam is quite easy. This is the example discussed in the <a href="http://docs.jboss.org/weld/reference/1.0.1-Final/en-US/html_single/#d0e1622">Weld Reference Documentation</a>. What we do is set up a <a href="http://docs.jboss.org/weld/reference/1.0.1-Final/en-US/html_single/#d0e1212">Qualifier</a> like this:
[code lang="java"]
@Qualifier
@Retention(RUNTIME)
@Target({TYPE, METHOD, FIELD, PARAMETER})
public @interface HttpParam {
    public String value() default &quot;&quot;;
}
[/code]
Then all we need to do is create a <a href="http://docs.jboss.org/weld/reference/1.0.1-Final/en-US/html_single/#d0e942">Producer Method</a>: and utilize the <a href="http://docs.jboss.org/weld/reference/1.0.1-Final/en-US/html_single/#d0e1622">InjectionPoint</a> metadata to set the proper value based on either the name of the attribute or the value of the annotation. This example will ensure that both:
[code lang="java"]
 @Inject @HttpParam(&quot;trackId&quot;)
 String currentTrackId;
[/code]
and
[code lang="java"]
 @Inject @HttpParam
 String trackId;
[/code]
Makes the request parameter "trackId" available to the field. Example url: http://www.glxn.net/listen?trackId=16180339 will set currentTrackId in the first example above to 16180339, and in the second set trackId to the same value.
[code lang="java"]
public class HttpParamProducer {

    @Inject
    FacesContext facesContext;

    @Produces
    @HttpParam
    String getHttpParameter(InjectionPoint ip) {
        String name = ip.getAnnotated().getAnnotation(HttpParam.class).value();
        if (&quot;&quot;.equals(name)) name = ip.getMember().getName();
        return facesContext.getExternalContext()
                .getRequestParameterMap()
                .get(name);
    }
}
[/code]
Now we can access the request parameter in our <a href="http://docs.jboss.org/weld/reference/1.0.1-Final/en-US/html_single/#bean-definition">Bean</a> simply by annotating the field with @Inject and @HttpParam. In the example below I am injecting the @SessionScoped bean SpotifyWeb, and calling its wrap method to enrich my request parameter "trackId" using a Producer method to create a @Named parameter "trackReqParam" available to another bean, or in my case the view. So in my view page i print out <strong>#{trackReqParam}</strong> and it shows the initial request parameter trackId with some modification done in the wrap method. Just a simple example of it's application. 
The key here is that you can't inject a request parameter to a session scoped bean and expect it to not live in the dependent scope of its parent. That means if you do inject it to a session scoped bean, it is injected and set once, then lives in that scope until the scope is terminated.
This enforces good design in my opinion. If you are using a session scoped bean and want values from it, it's variables and methods are readily available to a request scoped bean, so just inject it and do your work there. This ensures a slim application. 
[code lang="java"]
@RequestScoped
public class TrackProducer {

    @Inject @HttpParam
    String trackId;

    @Inject
    SpotifyWeb spotifyWeb;

    @Produces
    @Named(&quot;trackReqParam&quot;)
    String getTrack() {
        return spotifyWeb.wrap(trackId);
    }
}
[/code]

You may also want to look at <a href="http://relation.to/Bloggers/InjectionPointMetadataAPIForWebBeans">Injection point metadata API for Web Beans by Gavin King</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date>2010-03-01 10:57:24</wp:post_date>
		<wp:post_date_gmt>2010-03-01 09:57:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>implementing-requestparam-in-cdiweld-using-qualifier-and-injectionpoint-httpparam</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cdi"><![CDATA[cdi]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="javaee"><![CDATA[JavaEE]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="weld"><![CDATA[weld]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>252</wp:comment_id>
			<wp:comment_author><![CDATA[Thorbjørn Ravn Andersen]]></wp:comment_author>
			<wp:comment_author_email>thorbjoern@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.165.145.194</wp:comment_author_IP>
			<wp:comment_date>2011-01-13 13:54:29</wp:comment_date>
			<wp:comment_date_gmt>2011-01-13 12:54:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is very interesting as I need the "@Inject @HttpParam("trackId")" for our configuration purposes (we have dots in our keys), but I cannot make this work with Weld 1.0.1 as Weld do not consider my producer a candidate for the injection (see below)

Am I right in assuming that you _always_ use the "@Inject @HttpParm" form (without a value) so that the code falls through and uses the method name instead?

If so, it explains why it works for you, as you then match the @Qualifier requirement for the empty string.  Could you please let me know if the "@Inject @HttpParam("trackId")" works for you?

Thanks

/Thorbjørn]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>253</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>62.70.2.252</wp:comment_author_IP>
			<wp:comment_date>2011-01-13 15:27:09</wp:comment_date>
			<wp:comment_date_gmt>2011-01-13 14:27:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Thorbjørn.

This worked for me at the time i wrote it with and without value.

Can you show me a <a href="https://gist.github.com/" rel="nofollow">gist</a> of the code you have?

/ken]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>254</wp:comment_id>
			<wp:comment_author><![CDATA[Santiago Pericas-Geertsen]]></wp:comment_author>
			<wp:comment_author_email>santiago.pericasgeertsen@oracle.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.249.213.220</wp:comment_author_IP>
			<wp:comment_date>2011-02-10 15:56:23</wp:comment_date>
			<wp:comment_date_gmt>2011-02-10 14:56:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think in the definition of HttpParam you need to annotate the value() method with @Nonbinding for this to work.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>258</wp:comment_id>
			<wp:comment_author><![CDATA[@Inject to pass params to a CDI @Named bean via URL gives Jboss error on Netbeans | PHP Developer Resource]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dkphp.com/questions-2/inject-to-pass-params-to-a-cdi-named-bean-via-url-gives-jboss-error-on-netbeans.html</wp:comment_author_url>
			<wp:comment_author_IP>69.194.225.92</wp:comment_author_IP>
			<wp:comment_date>2012-05-23 10:08:47</wp:comment_date>
			<wp:comment_date_gmt>2012-05-23 08:08:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] you&#8217;d need to create a custom CDI annotation. A concrete example is posted in this blog. Here&#8217;s an extract of [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337760527.7624";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337761664.0709";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>259</wp:comment_id>
			<wp:comment_author><![CDATA[Implementing @RequestParam in CDI/WELD using Qualifier and InjectionPoint as @HttpParam | PHP Developer Resource]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dkphp.com/questions-2/implementing-requestparam-in-cdiweld-using-qualifier-and-injectionpoint-as-httpparam.html</wp:comment_author_url>
			<wp:comment_author_IP>69.194.225.92</wp:comment_author_IP>
			<wp:comment_date>2012-05-23 11:18:20</wp:comment_date>
			<wp:comment_date_gmt>2012-05-23 09:18:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] another question and balusC, and glxn which has a concrete example I tried to follow. The glxn post seems exactly what I want, but I [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337764700.8467";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337835080.2304";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>260</wp:comment_id>
			<wp:comment_author><![CDATA[How to set or inject request parameters in a managed bean? | PHP Developer Resource]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dkphp.com/questions-2/how-to-set-or-inject-request-parameters-in-a-managed-bean.html</wp:comment_author_url>
			<wp:comment_author_IP>69.194.225.92</wp:comment_author_IP>
			<wp:comment_date>2012-05-24 23:41:39</wp:comment_date>
			<wp:comment_date_gmt>2012-05-24 21:41:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] use @ManagedProperty for this. However, if you&#8217;re using CDI or can use it, then you can homegrow an annotation for [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337895699.8181";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337932333.0476";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>261</wp:comment_id>
			<wp:comment_author><![CDATA[Can not use hidden commandButton with @RequestScoped backing-bean | PHP Developer Resource]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dkphp.com/questions-2/can-not-use-hidden-commandbutton-with-requestscoped-backing-bean.html</wp:comment_author_url>
			<wp:comment_author_IP>69.194.225.92</wp:comment_author_IP>
			<wp:comment_date>2012-05-25 02:02:47</wp:comment_date>
			<wp:comment_date_gmt>2012-05-25 00:02:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] annotation which substituties JSF&#8217;s @ManagedProperty(&quot;#{param.show1}&quot;). You could however homegrow such an annotation.        Tagged: jsf-2.0questions       /* * * CONFIGURATION VARIABLES: EDIT [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337904167.7168";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337932308.5607";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>262</wp:comment_id>
			<wp:comment_author><![CDATA[Tarka]]></wp:comment_author>
			<wp:comment_author_email>information@primaljourney.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>90.10.39.22</wp:comment_author_IP>
			<wp:comment_date>2012-05-28 12:46:04</wp:comment_date>
			<wp:comment_date_gmt>2012-05-28 10:46:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this great article. I can't quite get it to work as I'm getting an error in the HttpParamProducer when I compile it saying: "Unsatisfied dependency: no bean matches the injection point". This error is present for both the facesContext and the InjectionPoint. Any ideas how to fix this?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1338201964.2017";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1338234680.0415";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>263</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>12.217.166.2</wp:comment_author_IP>
			<wp:comment_date>2012-05-28 21:54:22</wp:comment_date>
			<wp:comment_date_gmt>2012-05-28 19:54:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmm, not sure. Haven't seen this error before. Perhaps you are missing dependency declared on CDI and JSF. If you are using maven you can try adding them with provided scope.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>262</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1338234862.4528";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>264</wp:comment_id>
			<wp:comment_author><![CDATA[Tarka]]></wp:comment_author>
			<wp:comment_author_email>information@primaljourney.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>90.10.146.47</wp:comment_author_IP>
			<wp:comment_date>2012-05-28 22:57:40</wp:comment_date>
			<wp:comment_date_gmt>2012-05-28 20:57:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the quick reply, I am using Maven so I expect that is it. Ill take a look in the morning and let you know.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1338238660.317";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Using Arquillian to test against a remote jboss container from within IDEA</title>
		<link>http://www.glxn.net/?p=175</link>
		<pubDate>Sat, 01 May 2010 07:09:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=175</guid>
		<description></description>
		<content:encoded><![CDATA[I recently got introduced to <a href="http://community.jboss.org/docs/DOC-14376?uniqueTitle=false">Arquillian</a>. Arquillian is a JBoss project for providing better testing to the java ee stack. 
Arquillian utilizes <a href="http://community.jboss.org/docs/DOC-14138">ShrinkWrap</a>, another great project, for creating virtual archives as deployments to the container. 
It's all pretty damn slick :)
I encourage you to take a dive into the community. It's well organized and alive.

In this post I'm going to look at running Arquillian against jboss as 6 remotely from within Intellij IDEA.

First off I have generated a project using the <a href="http://seamframework.org/Documentation/WeldQuickstartForMavenUsers">minimal Java EE Weld archetype</a>. The Weld Archvetype will in the near future have support for generating the Arquillian part of the project as well.

To get the project into IDEA is really simple, just choose 'open project' and select the pom of the generated maven project. 
IDEA will then take a couple of minutes setting things up.

For Arquillian magic to work, we need to add junit (or you could use testng if you prefer), and the arquillian dependency to the pom.

[code lang="xml"]
&lt;dependency&gt;
	&lt;groupId&gt;junit&lt;/groupId&gt;
	&lt;artifactId&gt;junit&lt;/artifactId&gt;
	&lt;version&gt;4.8.1&lt;/version&gt;
	&lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
	&lt;groupId&gt;org.jboss.arquillian&lt;/groupId&gt;
	&lt;artifactId&gt;arquillian-junit&lt;/artifactId&gt;
	&lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;
	&lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;
[/code]

Then we add a profile to the pom for running the tests against the remote jboss container.

[code lang="xml"]
&lt;profiles&gt;
	&lt;profile&gt;
		&lt;id&gt;jbossas-remote-60&lt;/id&gt;
		&lt;dependencies&gt;
			&lt;dependency&gt;
				&lt;groupId&gt;org.jboss.arquillian.container&lt;/groupId&gt;
				&lt;artifactId&gt;arquillian-jbossas-remote-60&lt;/artifactId&gt;
				&lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;
				&lt;scope&gt;test&lt;/scope&gt;
			&lt;/dependency&gt;
		&lt;/dependencies&gt;
	&lt;/profile&gt;
&lt;/profiles&gt;
[/code]

Notice that I have set the scope on the profile to test. 
The reason for this is that i use IDEA to deploy the project to the server (not maven), and I don't want to toggle the profile in maven plugin all the time. 
If the profile is activated when you do a redeploy, then IDEA will(rightfully so) think you want these dependencies deployed as part of the project and deployment will fail.

So, let's have some fun.

For my test case I have created a very simple Bean:

[code lang="java"]
import javax.enterprise.context.RequestScoped;
import javax.inject.Named;

@RequestScoped
@Named
public class HelloAction {

    private String input;
    private String output;

    public void say() {
        output = &quot;You said: &quot; + input;
		System.out.println(output);
    }

    public String getOutput() {
        return output;
    }

    public void setOutput(String output) {
        this.output = output;
    }

    public String getInput() {
        return input;
    }

    public void setInput(String input) {
        this.input = input;
    }
}
[/code]

I want to deploy this bean to the container, and test it. The Following test case does the trick:

[code lang="java"]
import org.jboss.arquillian.api.Deployment;
import org.jboss.shrinkwrap.api.Archive;
import org.jboss.shrinkwrap.api.ArchivePaths;
import org.jboss.shrinkwrap.api.Archives;
import org.jboss.shrinkwrap.api.spec.JavaArchive;
import org.jboss.shrinkwrap.impl.base.asset.ByteArrayAsset;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;

import javax.inject.Inject;

@RunWith(org.jboss.arquillian.junit.Arquillian.class)
public class HelloTestCase {
   @Deployment
   public static Archive&amp;lt;?&amp;gt; createDeployment() {
            JavaArchive archive = Archives.create(&quot;test.jar&quot;, JavaArchive.class)
                 .addClasses(HelloAction.class)
                 .addManifestResource(new ByteArrayAsset(&quot;&lt;beans&gt;&lt;/beans&gt;&quot;.getBytes()),
                                 ArchivePaths.create(&quot;beans.xml&quot;));

            return archive;
   }

   @Inject
   HelloAction helloAction;


   @Test
   public void helloBeanShouldSayHello() {
       helloAction.setInput(&quot;hello&quot;);
       helloAction.say();
       Assert.assertEquals(&quot;You said: hello&quot;, helloAction.getOutput());
   }
}
[/code]

The @Deployment method describes the virtual archive I want deployed to the container. 
Here I create a simple archive and add the class I want to test. 
For CDI beans to work you will have to add the beans.xml to the archive.

We also need to add jndi.properties file to the project. This is needed for Arquillian to be able to connect to the remote container. Make sure that <strong>java.naming.provider.url</strong> reflects the IP of your remote server instance.
Place jndi.properties file under src/test/resources:

[code lang="java"]
java.naming.factory.initial=org.jnp.interfaces.NamingContextFactory
java.naming.factory.url.pkgs=org.jboss.naming:org.jnp.interfaces
java.naming.provider.url=jnp://localhost:1099
[/code]

Now we simply run the test from within IDEA using <strong>right click > run test</strong>, or <strong>ctrl+shift+f10</strong>.
Just remember that this is a test running against a remote jboss container, so jboss needs to be running ;)

We see the test runs green:

<a href="http://www.glxn.net/wp-content/uploads/2010/03/arquillian-greentestrun.png"><img src="http://www.glxn.net/wp-content/uploads/2010/03/arquillian-greentestrun-300x140.png" alt="" title="arquillian-greentestrun" width="300" height="140" class="alignnone size-medium wp-image-176" /></a>

And that the server has the expected output in the log:

<a href="http://www.glxn.net/wp-content/uploads/2010/03/arquillian-serverlog.png"><img src="http://www.glxn.net/wp-content/uploads/2010/03/arquillian-serverlog-300x150.png" alt="" title="arquillian-serverlog" width="300" height="150" class="alignnone size-medium wp-image-177" /></a>

Just for kicks, let's break the test by changing the input to "yo":

<a href="http://www.glxn.net/wp-content/uploads/2010/03/arquillian-redtestrun.png"><img src="http://www.glxn.net/wp-content/uploads/2010/03/arquillian-redtestrun-300x146.png" alt="" title="arquillian-redtestrun" width="300" height="146" class="alignnone size-medium wp-image-178" /></a>

<strong>TIP:</strong> If you want to debug your test, you have to remember that your code is running in the remote container. Running the test in debug mode will not work. You will have to start the container in debug mode to do this.

See the <a href="http://community.jboss.org/en/arquillian/faq">Arquillian FAQ</a> page for more tips.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date>2010-05-01 09:09:09</wp:post_date>
		<wp:post_date_gmt>2010-05-01 07:09:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-arquillian-to-test-against-a-remote-jboss-container-from-within-idea</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="arquillian"><![CDATA[arquillian]]></category>
		<category domain="post_tag" nicename="cdi"><![CDATA[cdi]]></category>
		<category domain="post_tag" nicename="javaee"><![CDATA[JavaEE]]></category>
		<category domain="post_tag" nicename="jboss"><![CDATA[JBoss]]></category>
		<category domain="post_tag" nicename="shrinkwrap"><![CDATA[shrinkwrap]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[Testing]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="weld"><![CDATA[weld]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>235</wp:comment_id>
			<wp:comment_author><![CDATA[Sachin Patil]]></wp:comment_author>
			<wp:comment_author_email>sachin6870@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sachystechnoworld.co.cc/</wp:comment_author_url>
			<wp:comment_author_IP>121.245.181.68</wp:comment_author_IP>
			<wp:comment_date>2010-04-08 06:05:02</wp:comment_date>
			<wp:comment_date_gmt>2010-04-08 04:05:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great write-up thanks.  

Can I use jboss 4.2 with remote deployment enabled?

Thanks,

-- Sachin.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>236</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>193.156.111.1</wp:comment_author_IP>
			<wp:comment_date>2010-04-08 08:23:47</wp:comment_date>
			<wp:comment_date_gmt>2010-04-08 06:23:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for your feedback :)

I haven't tried running against 4.2.
You may want to take a look at the Arquillian community: http://community.jboss.org/en/arquillian
Perhaps post a topic on it.

Regards, 
Ken]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>235</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>246</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>195.159.241.226</wp:comment_author_IP>
			<wp:comment_date>2010-08-04 12:54:37</wp:comment_date>
			<wp:comment_date_gmt>2010-08-04 10:54:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Update on running Arquillian agains 4.2:

There is a forum topic and feature request currently being discussed on the community.
JIRA: https://jira.jboss.org/browse/ARQ-238
Topic: http://community.jboss.org/thread/152039]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Solving Sudoku using java swing and junit</title>
		<link>http://www.glxn.net/?p=226</link>
		<pubDate>Sat, 03 Apr 2010 18:18:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=226</guid>
		<description></description>
		<content:encoded><![CDATA[Was working on sudoku puzzles during easter holiday. Became bored, and being the nerd I am decided to practice my swing and created a tool to help solve it.
 Keep in mind that this is a "quickie" job, created in couple days work.
Just extract and run:
[code lang="java"]
java -jar jSudoku.jar
[/code]
Comes with one predefined sample. 
<a href="http://www.glxn.net/wp-content/uploads/2010/04/jSudokuSolver.zip">jSudokuSolver.zip</a>

Or you can run the app with <strong>Java Web Start</strong> by clicking this link: <strong><a href="http://www.glxn.net/apps/jsudoku.php" target="_blank">jsudoku</a></strong> (should open with java, won't work on chrome ref: <a href="http://code.google.com/p/chromium/issues/detail?id=10877">http://code.google.com/p/chromium/issues/detail?id=10877</a>)

Feel free to use the source for whatever you wish.
If you want you can clone my git repo <a href="http://github.com/kenglxn/JSudoku">http://github.com/kenglxn/JSudoku</a>:
[code lang="java"]
git clone git://github.com/kenglxn/JSudoku.git
[/code]

I based my implementation on a sudoku puzzle found in a magazine. I picked a puzzle from the magazine and made this the sample. Then i wrote a test to confirm the solver worked for the two axis, and the sub-grid. Then the last test to confirm the solver get's the expected solution. Code for the test is pasted below. 

Heres the sample (click for larger image):
<a href="http://www.glxn.net/wp-content/uploads/2010/04/sample2.png"><img src="http://www.glxn.net/wp-content/uploads/2010/04/sample2-150x150.png" alt="" title="sample" width="150" height="150" class="alignleft size-thumbnail wp-image-244" /></a>

And here's the sample solved (click for larger image):
<a href="http://www.glxn.net/wp-content/uploads/2010/04/sample-solved.png"><img src="http://www.glxn.net/wp-content/uploads/2010/04/sample-solved-150x150.png" alt="" title="sample-solved" width="150" height="150" class="alignleft size-thumbnail wp-image-240" /></a>

This is the recursive method that does all the work:
[code lang="java"]
void solvePuzzle(Integer numberOfEmptyCellsBefore) {
	createWorkingSetOfShallowCopyCells();
	calculatePossibleValuesAndSetCellValues();
	commitChangesToAllCells();

	Integer numberOfEmptyCells = getNumberOfEmptyCellsInGrid();
	if (!numberOfEmptyCells.equals(numberOfEmptyCellsBefore)) {
		solvePuzzle(numberOfEmptyCells);
	}
}
[/code]

Heres a paste of the junit test that i used to build the logic: 
<em>(ignore the closing xml tags at the bottom, google code formatter plugin generates these due to unclosed tags in the java code...)</em>
[code lang="java"]
package net.glxn.sudoku;

import org.junit.Assert;
import org.junit.Test;

import java.util.ArrayList;
import java.util.Arrays;

public class JSudokuTestCase {
    @Test
    public void shouldSolveforXSibling() {
        String expected = &quot;9&quot;;

        JSudoku jSudoku = new JSudoku();
        ArrayList&lt;Cell&gt; xSiblings = jSudoku.textField9.xSiblings;
        ArrayList&lt;String&gt; stringList = new ArrayList&lt;String&gt;();
        stringList.addAll(Arrays.asList(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;));

        for (Cell xSib : xSiblings) {
            xSib.setText(stringList.get(0));
            stringList.remove(0);
        }

        jSudoku.solvePuzzle(jSudoku.getNumberOfEmptyCellsInGrid());

        Assert.assertEquals(expected, jSudoku.textField9.getText());
    }

    @Test
    public void shouldSolveforYSibling() {
        String expected = &quot;9&quot;;

        JSudoku jSudoku = new JSudoku();
        ArrayList&lt;Cell&gt; ysiblings = jSudoku.textField9.ySiblings;
        ArrayList&lt;String&gt; stringList = new ArrayList&lt;String&gt;();
        stringList.addAll(Arrays.asList(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;));

        for (Cell ySib : ysiblings) {
            ySib.setText(stringList.get(0));
            stringList.remove(0);
        }

        jSudoku.solvePuzzle(jSudoku.getNumberOfEmptyCellsInGrid());

        Assert.assertEquals(expected, jSudoku.textField9.getText());
    }

    @Test
    public void shouldSolveforSubGridSibling() {
        String expected = &quot;9&quot;;

        JSudoku jSudoku = new JSudoku();
        ArrayList&lt;Cell&gt; ysiblings = jSudoku.textField9.subGridSiblings;
        ArrayList&lt;String&gt; stringList = new ArrayList&lt;String&gt;();
        stringList.addAll(Arrays.asList(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;));

        for (Cell ySib : ysiblings) {
            ySib.setText(stringList.get(0));
            stringList.remove(0);
        }

        jSudoku.solvePuzzle(jSudoku.getNumberOfEmptyCellsInGrid());

        Assert.assertEquals(expected, jSudoku.textField9.getText());
    }

    @Test
    public void shouldBeAbleToSolveSample() {
        JSudoku jSudoku = new JSudoku();
        jSudoku.loadSample();

        confirmSample(jSudoku);

        jSudoku.solvePuzzle(jSudoku.getNumberOfEmptyCellsInGrid());

        confirmWholeGrid(jSudoku);
    }

    private void confirmSample(JSudoku jSudoku) {
        confirmExpectedValueAtCoord(jSudoku, 2, 1, 1);
        confirmExpectedValueAtCoord(jSudoku, 4, 1, 9);
        confirmExpectedValueAtCoord(jSudoku, 5, 1, 5);
        confirmExpectedValueAtCoord(jSudoku, 7, 1, 7);

        confirmExpectedValueAtCoord(jSudoku, 2, 2, 5);
        confirmExpectedValueAtCoord(jSudoku, 5, 2, 3);

        confirmExpectedValueAtCoord(jSudoku, 2, 3, 9);
        confirmExpectedValueAtCoord(jSudoku, 4, 3, 6);
        confirmExpectedValueAtCoord(jSudoku, 9, 3, 5);

        confirmExpectedValueAtCoord(jSudoku, 1, 4, 2);
        confirmExpectedValueAtCoord(jSudoku, 3, 4, 6);
        confirmExpectedValueAtCoord(jSudoku, 6, 4, 8);

        confirmExpectedValueAtCoord(jSudoku, 3, 5, 8);
        confirmExpectedValueAtCoord(jSudoku, 7, 5, 4);

        confirmExpectedValueAtCoord(jSudoku, 4, 6, 3);
        confirmExpectedValueAtCoord(jSudoku, 7, 6, 6);
        confirmExpectedValueAtCoord(jSudoku, 9, 6, 9);

        confirmExpectedValueAtCoord(jSudoku, 1, 7, 4);
        confirmExpectedValueAtCoord(jSudoku, 6, 7, 3);
        confirmExpectedValueAtCoord(jSudoku, 8, 7, 5);

        confirmExpectedValueAtCoord(jSudoku, 5, 8, 8);
        confirmExpectedValueAtCoord(jSudoku, 8, 8, 6);

        confirmExpectedValueAtCoord(jSudoku, 3, 9, 1);
        confirmExpectedValueAtCoord(jSudoku, 5, 9, 4);
        confirmExpectedValueAtCoord(jSudoku, 6, 9, 5);
        confirmExpectedValueAtCoord(jSudoku, 8, 9, 2);
    }

    private void confirmWholeGrid(JSudoku jSudoku) {
        confirmExpectedValueAtCoord(jSudoku, 1, 1, 8);
        confirmExpectedValueAtCoord(jSudoku, 2, 1, 1);
        confirmExpectedValueAtCoord(jSudoku, 3, 1, 2);
        confirmExpectedValueAtCoord(jSudoku, 4, 1, 9);
        confirmExpectedValueAtCoord(jSudoku, 5, 1, 5);
        confirmExpectedValueAtCoord(jSudoku, 6, 1, 4);
        confirmExpectedValueAtCoord(jSudoku, 7, 1, 7);
        confirmExpectedValueAtCoord(jSudoku, 8, 1, 3);
        confirmExpectedValueAtCoord(jSudoku, 9, 1, 6);

        confirmExpectedValueAtCoord(jSudoku, 1, 2, 6);
        confirmExpectedValueAtCoord(jSudoku, 2, 2, 5);
        confirmExpectedValueAtCoord(jSudoku, 3, 2, 4);
        confirmExpectedValueAtCoord(jSudoku, 4, 2, 8);
        confirmExpectedValueAtCoord(jSudoku, 5, 2, 3);
        confirmExpectedValueAtCoord(jSudoku, 6, 2, 7);
        confirmExpectedValueAtCoord(jSudoku, 7, 2, 2);
        confirmExpectedValueAtCoord(jSudoku, 8, 2, 9);
        confirmExpectedValueAtCoord(jSudoku, 9, 2, 1);

        confirmExpectedValueAtCoord(jSudoku, 1, 3, 7);
        confirmExpectedValueAtCoord(jSudoku, 2, 3, 9);
        confirmExpectedValueAtCoord(jSudoku, 3, 3, 3);
        confirmExpectedValueAtCoord(jSudoku, 4, 3, 6);
        confirmExpectedValueAtCoord(jSudoku, 5, 3, 2);
        confirmExpectedValueAtCoord(jSudoku, 6, 3, 1);
        confirmExpectedValueAtCoord(jSudoku, 7, 3, 8);
        confirmExpectedValueAtCoord(jSudoku, 8, 3, 4);
        confirmExpectedValueAtCoord(jSudoku, 9, 3, 5);

        confirmExpectedValueAtCoord(jSudoku, 1, 4, 2);
        confirmExpectedValueAtCoord(jSudoku, 2, 4, 7);
        confirmExpectedValueAtCoord(jSudoku, 3, 4, 6);
        confirmExpectedValueAtCoord(jSudoku, 4, 4, 4);
        confirmExpectedValueAtCoord(jSudoku, 5, 4, 9);
        confirmExpectedValueAtCoord(jSudoku, 6, 4, 8);
        confirmExpectedValueAtCoord(jSudoku, 7, 4, 5);
        confirmExpectedValueAtCoord(jSudoku, 8, 4, 1);
        confirmExpectedValueAtCoord(jSudoku, 9, 4, 3);

        confirmExpectedValueAtCoord(jSudoku, 1, 5, 9);
        confirmExpectedValueAtCoord(jSudoku, 2, 5, 3);
        confirmExpectedValueAtCoord(jSudoku, 3, 5, 8);
        confirmExpectedValueAtCoord(jSudoku, 4, 5, 5);
        confirmExpectedValueAtCoord(jSudoku, 5, 5, 1);
        confirmExpectedValueAtCoord(jSudoku, 6, 5, 6);
        confirmExpectedValueAtCoord(jSudoku, 7, 5, 4);
        confirmExpectedValueAtCoord(jSudoku, 8, 5, 7);
        confirmExpectedValueAtCoord(jSudoku, 9, 5, 2);

        confirmExpectedValueAtCoord(jSudoku, 1, 6, 1);
        confirmExpectedValueAtCoord(jSudoku, 2, 6, 4);
        confirmExpectedValueAtCoord(jSudoku, 3, 6, 5);
        confirmExpectedValueAtCoord(jSudoku, 4, 6, 3);
        confirmExpectedValueAtCoord(jSudoku, 5, 6, 7);
        confirmExpectedValueAtCoord(jSudoku, 6, 6, 2);
        confirmExpectedValueAtCoord(jSudoku, 7, 6, 6);
        confirmExpectedValueAtCoord(jSudoku, 8, 6, 8);
        confirmExpectedValueAtCoord(jSudoku, 9, 6, 9);

        confirmExpectedValueAtCoord(jSudoku, 1, 7, 4);
        confirmExpectedValueAtCoord(jSudoku, 2, 7, 8);
        confirmExpectedValueAtCoord(jSudoku, 3, 7, 9);
        confirmExpectedValueAtCoord(jSudoku, 4, 7, 2);
        confirmExpectedValueAtCoord(jSudoku, 5, 7, 6);
        confirmExpectedValueAtCoord(jSudoku, 6, 7, 3);
        confirmExpectedValueAtCoord(jSudoku, 7, 7, 1);
        confirmExpectedValueAtCoord(jSudoku, 8, 7, 5);
        confirmExpectedValueAtCoord(jSudoku, 9, 7, 7);

        confirmExpectedValueAtCoord(jSudoku, 1, 8, 5);
        confirmExpectedValueAtCoord(jSudoku, 2, 8, 2);
        confirmExpectedValueAtCoord(jSudoku, 3, 8, 7);
        confirmExpectedValueAtCoord(jSudoku, 4, 8, 1);
        confirmExpectedValueAtCoord(jSudoku, 5, 8, 8);
        confirmExpectedValueAtCoord(jSudoku, 6, 8, 9);
        confirmExpectedValueAtCoord(jSudoku, 7, 8, 3);
        confirmExpectedValueAtCoord(jSudoku, 8, 8, 6);
        confirmExpectedValueAtCoord(jSudoku, 9, 8, 4);

        confirmExpectedValueAtCoord(jSudoku, 1, 9, 3);
        confirmExpectedValueAtCoord(jSudoku, 2, 9, 6);
        confirmExpectedValueAtCoord(jSudoku, 3, 9, 1);
        confirmExpectedValueAtCoord(jSudoku, 4, 9, 7);
        confirmExpectedValueAtCoord(jSudoku, 5, 9, 4);
        confirmExpectedValueAtCoord(jSudoku, 6, 9, 5);
        confirmExpectedValueAtCoord(jSudoku, 7, 9, 9);
        confirmExpectedValueAtCoord(jSudoku, 8, 9, 2);
        confirmExpectedValueAtCoord(jSudoku, 9, 9, 8);
    }

    private void confirmExpectedValueAtCoord(JSudoku jSudoku, int x, int y, Integer expected) {
        Assert.assertEquals(&quot;Confirm [&quot;+x+&quot;,&quot;+y+&quot;] = &quot;+ expected, expected, jSudoku.getCellAtCoord(x, y, jSudoku.allCells).getIntValue());
    }
}
[/code]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date>2010-04-03 20:18:11</wp:post_date>
		<wp:post_date_gmt>2010-04-03 18:18:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jsudoku-solver-java-swing-program-to-help-lazy-sudokuers-like-me</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="sudoku"><![CDATA[sudoku]]></category>
		<category domain="post_tag" nicename="swing"><![CDATA[swing]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>WELD/CDI lightningtalk from Know IT 2010 annual conference</title>
		<link>http://www.glxn.net/?p=256</link>
		<pubDate>Tue, 06 Apr 2010 19:17:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=256</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="width:425px" id="__ss_3395119"><strong style="display:block;margin:12px 0 4px"><a href="http://www.slideshare.net/kenglxn/wled-lightningtalk-know-it-iceland-2010" title="Weld lightningtalk - Know IT Iceland 2010">Weld lightningtalk - Know IT Iceland 2010</a></strong><object width="425" height="355"><param name="movie" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=spotiweld-100311033912-phpapp01&stripped_title=wled-lightningtalk-know-it-iceland-2010" /><param name="allowFullScreen" value="true"/><param name="allowScriptAccess" value="always"/><embed src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=spotiweld-100311033912-phpapp01&stripped_title=wled-lightningtalk-know-it-iceland-2010" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"></embed></object><div style="padding:5px 0 12px">View more <a href="http://www.slideshare.net/">presentations</a> from <a href="http://www.slideshare.net/kenglxn">kenglxn</a>.</div></div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>256</wp:post_id>
		<wp:post_date>2010-04-06 21:17:10</wp:post_date>
		<wp:post_date_gmt>2010-04-06 19:17:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>weldcdi-lightningtalk-from-know-it-2010-annual-conference</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cdi"><![CDATA[cdi]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="javaee"><![CDATA[JavaEE]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="weld"><![CDATA[weld]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Making a swing project using IntelliJ IDEA GUI builder with maven, Including executable jar</title>
		<link>http://www.glxn.net/?p=279</link>
		<pubDate>Tue, 17 Aug 2010 19:02:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=279</guid>
		<description></description>
		<content:encoded><![CDATA[In this post I'll quickly show how to get a maven project under Idea running with the GUI builder, and show you the config you need to build an executable jar for it as well.

IntelliJ IDEA has a great built in tool for making swing projects called <a href="http://www.jetbrains.com/idea/features/gui_builder.html">GUI Builder</a>, here's a nice <a href="http://www.jetbrains.com/idea/training/demos/GUI_Designer/GUI_Designer.html">live demo</a>.

The problem comes when using the gui builder with maven, since the builder uses form files that are specific for IDEA. Thankfully there is a maven plugin to help with this issue: The <a href="http://mojo.codehaus.org/ideauidesigner-maven-plugin/">Maven 2 IDEA UI Designer Plugin</a>.

To have a concrete example to work with, we'll create a simple Swing app for sending JMS Messages to a destination queue. The code will be located at <a href="http://github.com/kenglxn/JMSUtility">http://github.com/kenglxn/JMSUtility</a>

So lets get started by setting up the project:
<ol>
	<li>Start IDEA and create a new project. Choose to create from scratch.
<a href="http://www.glxn.net/wp-content/uploads/2010/08/newproject.png"><img class="alignnone size-medium wp-image-303" title="newproject" src="http://www.glxn.net/wp-content/uploads/2010/08/newproject-300x235.png" alt="" width="300" height="235" /></a></li>
	<li>in the module section choose maven module and give it a name
<a href="http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-New-Project-Maven-Module.png"><img class="alignnone size-medium wp-image-288" title="Screenshot-New Project-Maven-Module" src="http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-New-Project-Maven-Module-300x235.png" alt="" width="300" height="235" /></a></li>
	<li>In the next screen you can set maven artifact properties and if you wish choose an archetype, we'll be creating from scratch, so skip the archetype and click the finish button
<a href="http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-New-Project-Finish.png"><img class="alignnone size-medium wp-image-290" title="Screenshot-New Project-Finish" src="http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-New-Project-Finish-300x235.png" alt="" width="300" height="235" /></a></li>
	<li><a href="http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-New-Project-Finish.png"></a>Great, now we have a fresh maven project that we can work with
<a href="http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-JMSUtility.png"><img class="alignnone size-medium wp-image-291" title="Screenshot-JMSUtility" src="http://www.glxn.net/wp-content/uploads/2010/08/Screenshot-JMSUtility-300x102.png" alt="" width="300" height="102" /></a></li>
</ol>
So now it's just a matter of adding the dependencies we need, and writing some code.  We'll add some dependencies for tests, string manipulation and JMS.
Here's a snippet of the dependencies added to the pom.xml so far:

[code lang="xml"]
&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;commons-lang&lt;/groupId&gt;
        &lt;artifactId&gt;commons-lang&lt;/artifactId&gt;
        &lt;version&gt;2.5&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.apache.activemq&lt;/groupId&gt;
        &lt;artifactId&gt;activemq-core&lt;/artifactId&gt;
        &lt;version&gt;5.3.0&lt;/version&gt;
    &lt;/dependency&gt;

    &lt;dependency&gt;
        &lt;groupId&gt;com.intellij&lt;/groupId&gt;
        &lt;artifactId&gt;forms_rt&lt;/artifactId&gt;
        &lt;version&gt;5.0&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;!-- TEST SCOPE --&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;junit&lt;/groupId&gt;
        &lt;artifactId&gt;junit&lt;/artifactId&gt;
        &lt;version&gt;4.7&lt;/version&gt;
        &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
[/code]

Next step is writing some code and tests.

We'll start off by making the UI using the built in <a title="IntelliJ IDEA GUI Builder" href="http://www.jetbrains.com/idea/features/gui_builder.html">GUI Builder</a> in IDEA, using the GridLayout. You could of course use JGoodies Forms layout, or even something else you prefer.
<ol>
	<li>create a new package, again I like to use alt+insert hotkey while the target directory is active. I chose net.glxn.jmsutility as the name for my package
<a href="http://www.glxn.net/wp-content/uploads/2010/08/newpackage.png"><img class="alignnone size-medium wp-image-320" title="newpackage" src="http://www.glxn.net/wp-content/uploads/2010/08/newpackage-300x231.png" alt="" width="300" height="231" />
</a><a href="http://www.glxn.net/wp-content/uploads/2010/08/packagename.png"><img class="alignnone size-medium wp-image-321" title="packagename" src="http://www.glxn.net/wp-content/uploads/2010/08/packagename-300x231.png" alt="" width="300" height="231" /></a></li>
	<li>Next we create a new GUI Form in the newly added package and give the form a name. Here I chose GridLayoutManager by IntelliJ, this will need to be added to the pom.
<a href="http://www.glxn.net/wp-content/uploads/2010/08/newguiform.png"><img class="alignnone size-medium wp-image-322" title="newguiform" src="http://www.glxn.net/wp-content/uploads/2010/08/newguiform-300x231.png" alt="" width="300" height="231" /></a>
<a href="http://www.glxn.net/wp-content/uploads/2010/08/newguiformname.png"><img class="alignnone size-medium wp-image-323" title="newguiformname" src="http://www.glxn.net/wp-content/uploads/2010/08/newguiformname-300x230.png" alt="" width="300" height="230" /></a></li>
	<li>IDEA now kindly shows us the fresh GUI builder view, here we add our components from the palette. Take a look at the <a href="http://www.jetbrains.com/idea/training/demos/GUI_Designer/GUI_Designer.html">live demo</a> of the GUI Builder to get started yourself.
<a href="http://www.glxn.net/wp-content/uploads/2010/08/guibuilder.png"><img class="alignnone size-medium wp-image-324" title="guibuilder" src="http://www.glxn.net/wp-content/uploads/2010/08/guibuilder-300x185.png" alt="" width="300" height="185" />
</a><a href="http://www.glxn.net/wp-content/uploads/2010/08/guibuilderitemsadded.png"><img class="alignnone size-medium wp-image-325" title="guibuilderitemsadded" src="http://www.glxn.net/wp-content/uploads/2010/08/guibuilderitemsadded-300x169.png" alt="" width="300" height="169" /></a></li>
	<li><a href="http://www.glxn.net/wp-content/uploads/2010/08/guibuilderitemsadded.png"></a>We now have enough code to run the application. commit:<a href="http://github.com/kenglxn/JMSUtility/commit/4164296182c8efc3f0c97be8f5be1a7a1f2cdeb3">4164296182c8efc3f0c97be8f5be1a7a1f2cdeb3
</a><a href="http://www.glxn.net/wp-content/uploads/2010/08/runclient.png"><img class="alignnone size-medium wp-image-336" title="runclient" src="http://www.glxn.net/wp-content/uploads/2010/08/runclient-300x228.png" alt="" width="300" height="228" /></a>
<a href="http://www.glxn.net/wp-content/uploads/2010/08/runclient2.png"><img class="alignnone size-medium wp-image-337" title="runclient2" src="http://www.glxn.net/wp-content/uploads/2010/08/runclient2-233x300.png" alt="" width="233" height="300" /></a></li>
	<li><a href="http://www.glxn.net/wp-content/uploads/2010/08/runclient2.png"></a>So now IDEA is able to run the GUI, and tests
<a href="http://www.glxn.net/wp-content/uploads/2010/08/testrun-idea.png"><img class="alignnone size-medium wp-image-338" title="testrun-idea" src="http://www.glxn.net/wp-content/uploads/2010/08/testrun-idea-300x206.png" alt="" width="300" height="206" /></a></li>
</ol>
That's it for the GUI building.
Our next step is to get this build running equally smooth in maven. Lets see what the output is with the current code (<a href="http://github.com/kenglxn/JMSUtility/tree/130462ca99bc7f05980fd129674d41ef975a5e92">http://github.com/kenglxn/JMSUtility/tree/130462ca99bc7f05980fd129674d41ef975a5e92</a>)
<a href="http://www.glxn.net/wp-content/uploads/2010/08/maven-build-fail1.png"><img class="alignnone size-medium wp-image-339" title="maven-build-fail1" src="http://www.glxn.net/wp-content/uploads/2010/08/maven-build-fail1-300x148.png" alt="" width="300" height="148" />
</a>So we see that maven isn't happy with us. Let's fix it by adding the following to the pom:

[code lang="xml"]
&lt;build&gt;
    &lt;finalName&gt;JMSUtil&lt;/finalName&gt;
    &lt;plugins&gt;

        &lt;plugin&gt;
            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;version&gt;2.0.2&lt;/version&gt;
            &lt;configuration&gt;
                &lt;sourcee&gt;1.6&lt;/sourcee&gt;
                &lt;target&gt;1.6&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;

    &lt;/plugins&gt;
&lt;/build&gt;
[/code]

Now we run the test again and get:
<a href="http://www.glxn.net/wp-content/uploads/2010/08/maven-build-fail2.png"><img class="alignnone size-medium wp-image-340" title="maven-build-fail2" src="http://www.glxn.net/wp-content/uploads/2010/08/maven-build-fail2-300x147.png" alt="" width="300" height="147" />
</a>Here we see that the build is ok, but the tests fail. This is what I was talking about earlier in regards to the idea forms not being built with maven.
Lets look at the surefire report and see what it says. I'm going to use the "analyze stacktrace" functionality in IDEA to get a pretty view of the content of the surefire report, since gedit isn't very helpful at that. To do this go to the Analyze menu and at the bottom select "Analyze stacktrace", and in the dialog paste in your stacktrace and click ok:
<a href="http://www.glxn.net/wp-content/uploads/2010/08/stacktrace-surefire.png"><img class="alignnone size-medium wp-image-341" title="stacktrace-surefire" src="http://www.glxn.net/wp-content/uploads/2010/08/stacktrace-surefire-300x150.png" alt="" width="300" height="150" />
</a>This tells us that the helpButton field is null when it tries to attach an ActionListener in the constructor

[code lang="java"]
public JMSUtility() {
    helpButton.addActionListener(new ActionListener() { ... }
[/code]

The way we solve this is to import the <a href="http://mojo.codehaus.org/ideauidesigner-maven-plugin/">Maven 2 IDEA UI Designer Plugin</a> into the pom:

[code lang="xml"]
&lt;plugin&gt;
    &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;
    &lt;artifactId&gt;ideauidesigner-maven-plugin&lt;/artifactId&gt;
    &lt;executions&gt;
        &lt;execution&gt;
            &lt;goals&gt;
                &lt;goal&gt;javac2&lt;/goal&gt;
            &lt;/goals&gt;
        &lt;/execution&gt;
    &lt;/executions&gt;

    &lt;configuration&gt;
        &lt;fork&gt;true&lt;/fork&gt;
        &lt;debug&gt;true&lt;/debug&gt;
        &lt;failOnError&gt;true&lt;/failOnError&gt;
    &lt;/configuration&gt;
&lt;/plugin&gt;
[/code]

Let's see what the maven build does now by running clean install
<a href="http://www.glxn.net/wp-content/uploads/2010/08/maven-build-success.png"><img class="alignnone size-medium wp-image-343" title="maven-build-success" src="http://www.glxn.net/wp-content/uploads/2010/08/maven-build-success-300x147.png" alt="" width="300" height="147" />
</a>How about that? The sweet taste of build success :)

This means now that the plugin is working. The next and final step is to create an executable jar via maven for this project. For this we will use the maven-jar-plugin to get a jar with the correct manifest and the maven-archive-plugin to get a lib directory with the dependencies in it which the manifest will refer to.
So, just add the following to the pom:
[code lang="xml"]
&lt;plugin&gt;
    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
    &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;
    &lt;executions&gt;
        &lt;execution&gt;
            &lt;id&gt;copy-dependencies&lt;/id&gt;
            &lt;phase&gt;package&lt;/phase&gt;
            &lt;goals&gt;
                &lt;goal&gt;copy-dependencies&lt;/goal&gt;
            &lt;/goals&gt;
            &lt;configuration&gt;
                &lt;outputDirectory&gt;${project.build.directory}/lib&lt;/outputDirectory&gt;
                &lt;overWriteReleases&gt;false&lt;/overWriteReleases&gt;
                &lt;overWriteSnapshots&gt;false&lt;/overWriteSnapshots&gt;
                &lt;overWriteIfNewer&gt;true&lt;/overWriteIfNewer&gt;
            &lt;/configuration&gt;
        &lt;/execution&gt;
    &lt;/executions&gt;
&lt;/plugin&gt;


&lt;plugin&gt;
    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
    &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;
    &lt;configuration&gt;
        &lt;archive&gt;
            &lt;manifest&gt;
                &lt;addClasspath&gt;true&lt;/addClasspath&gt;
                &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;
                &lt;mainClass&gt;net.glxn.jmsutility.JMSUtility&lt;/mainClass&gt;
            &lt;/manifest&gt;
        &lt;/archive&gt;
    &lt;/configuration&gt;
&lt;/plugin&gt;
[/code]

At this point you should have a pom that looks like this: <a href="http://github.com/kenglxn/JMSUtility/blob/b217473ab420550ac81f149c2de22497e3bef303/pom.xml">http://github.com/kenglxn/JMSUtility/blob/b217473ab420550ac81f149c2de22497e3bef303/pom.xml
</a>Now let's run the executable jar by going to the target folder and running 'java -jar JMSUtil.jar'
<a href="http://www.glxn.net/wp-content/uploads/2010/08/run-executable-jar.png"><img class="alignnone size-medium wp-image-344" title="run-executable-jar" src="http://www.glxn.net/wp-content/uploads/2010/08/run-executable-jar-300x179.png" alt="" width="300" height="179" /></a>

And that's it. You now have a maven build with tests and automatic building of the executable jar.

Feel free to clone the code and do whatever you like with it, just dont blame me :P

The distribution zip with jar and lib can be downloaded directly here: <a href="http://github.com/kenglxn/JMSUtility/raw/master/dist/JMSUtility.zip">http://github.com/kenglxn/JMSUtility/raw/master/dist/JMSUtility.zip</a>

<strong>RESOURCES:</strong>
<a title="Maven Archiver" href="http://maven.apache.org/shared/maven-archiver/index.html"> http://maven.apache.org/shared/maven-archiver/index.html</a>
<a title="Maven 2 IDEA UI Designer Plugin" href="http://mojo.codehaus.org/ideauidesigner-maven-plugin/">http://mojo.codehaus.org/ideauidesigner-maven-plugin/</a>
<a title="Maven Dependency Plugin" href="http://maven.apache.org/plugins/maven-dependency-plugin/examples/copying-project-dependencies.html">http://maven.apache.org/plugins/maven-dependency-plugin/examples/copying-project-dependencies.html</a>
<a title="Forms RT jar on Maven Central repo" href="http://repo1.maven.org/maven2/com/intellij/forms_rt/">http://repo1.maven.org/maven2/com/intellij/forms_rt/</a>
<a title="GUI Builder for IntelliJ IDEA" href="http://www.jetbrains.com/idea/features/gui_builder.html">http://www.jetbrains.com/idea/features/gui_builder.html</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>279</wp:post_id>
		<wp:post_date>2010-08-17 21:02:49</wp:post_date>
		<wp:post_date_gmt>2010-08-17 19:02:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>making-a-swing-project-using-intellij-idea-and-gui-builder-with-maven-including-executable-jar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="idea"><![CDATA[idea]]></category>
		<category domain="post_tag" nicename="intellij"><![CDATA[intellij]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="maven"><![CDATA[maven]]></category>
		<category domain="post_tag" nicename="swing"><![CDATA[swing]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>250</wp:comment_id>
			<wp:comment_author><![CDATA[Ed]]></wp:comment_author>
			<wp:comment_author_email>edmacdonald555@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.143.105.167</wp:comment_author_IP>
			<wp:comment_date>2010-12-15 02:19:45</wp:comment_date>
			<wp:comment_date_gmt>2010-12-15 01:19:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the article! I wish I could have found this information a few hours ago after poring over the jetbrains website. Could you put the date on the article, so I have some idea as to how relevant the version numbers are?

Also, you're xml is invalid. You need to uppercase your "I"'s in the "id" part of a lot of your tags. 

eg: "groupid" and "artifactid" should be: "groupId" and "artifactId" respectively.

Thanks!
-ed]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>251</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>83.109.59.18</wp:comment_author_IP>
			<wp:comment_date>2010-12-15 06:34:43</wp:comment_date>
			<wp:comment_date_gmt>2010-12-15 05:34:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Ed:

Thanks for your feedback. I'm glad the article was helpful :)

I have updated the wordpress template to give a more meaningful date in the article meta.

I apologize for the xml formatting. I am using the <a href="http://wordpress.org/extend/plugins/google-syntax-highlighter/" rel="nofollow">google-syntax-highlighter plugin</a>, and it seems to have a bug that makes all the code lowercase. ref http://code.google.com/p/syntaxhighlighter/issues/detail?id=161#c3

I'll try to get the case in xml sorted out soon.

Thanks, 
Ken]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>255</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>62.70.2.252</wp:comment_author_IP>
			<wp:comment_date>2011-04-07 13:14:45</wp:comment_date>
			<wp:comment_date_gmt>2011-04-07 11:14:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I changed to a different Syntax highlighter, and the case issue is now solved.
Now using http://www.viper007bond.com/wordpress-plugins/syntaxhighlighter/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>256</wp:comment_id>
			<wp:comment_author><![CDATA[Jesse Glick]]></wp:comment_author>
			<wp:comment_author_email>jesse.glick@oracle.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.34.124.159</wp:comment_author_IP>
			<wp:comment_date>2011-12-21 18:55:12</wp:comment_date>
			<wp:comment_date_gmt>2011-12-21 17:55:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This plugin is due to be retired unless someone steps up to maintain it. (Would CC you on mail to current maintainer but your email is not posted.) Contact me if you are interested in helping maintain it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1324490112.5803";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1324499148.3862";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Pomodoro Technique and my idea for a decent android app</title>
		<link>http://www.glxn.net/?p=331</link>
		<pubDate>Thu, 19 Aug 2010 13:08:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=331</guid>
		<description></description>
		<content:encoded><![CDATA[I'm a big fan of the <a href="http://www.pomodorotechnique.com/">pomodoro technique</a>.
The pomodoro technique is basically working for a set amount of time, then taking small breaks before returning to work.

A couple of the reasons i like it are:
<ol>
	<li>it boosts focus</li>
	<li>reduces stress</li>
	<li>prevents me from sitting still for a long time without break</li>
	<li>forces me to do something else, like take a 5 minute walk (good for health)</li>
	<li>gives the brain time to work for you, actually enabling me to sometimes see that I'm on the wrong track early.</li>
	<li>Can easily be combined with agile methods</li>
</ol>
There are probably more things that I have forgotten right now, but my main point is that I think it is a good way to work.

I currently use <a title="ChromoDoro: a Pomodoro extension for chrome" href="https://chrome.google.com/extensions/detail/edhkjecdcakijjmlelnjjiohjmlaikhb">ChromoDoro</a>, a great plugin, except for one thing: It's a plugin. I don't want my break to be spent in front of the computer, but rather on a walk to the watering hole or similar, and taking the computer with me is not an option.

So how about a nice pomodoro plugin for android, there are some out there which can be downloaded, but i figure "Hey, what a great opportunity to get introduced to android application development " :)

I have added a repository on github at <a href="http://github.com/kenglxn/Pomodroid">http://github.com/kenglxn/Pomodroid</a>, and will be adding code to it as I find the time.

Here are my user stories so far:
<ul>
	<li>as a user I should be able to set pomodoro time, and break time, so that I can have the timer fit my workhabits.</li>
	<li>as a user I should be able to set the pomodoro timer to vibrate, so that I wont disturb my co-workers with my pomodoro weirdness.</li>
	<li>as a user I should be able to start the timer so that my worksessions can begin.</li>
	<li>as a user I should be able to stop the session before timer runs out, so that I can handle interruptions.</li>
	<li>as an application I should pause the pomodoro timer when the user recieves a phonecall, so that I can account for interruptions.</li>
	<li>as a user I should be asked to give a reason for the interruption, so that I can later review my flow efficiency</li>
	<li>as a user I should be able to access statistics of my interruptions, so that I can reflect on my flow efficiency, and perhaps find ways to improve it.</li>
</ul>
These user stories and more will be added to the <a href="http://github.com/kenglxn/Pomodroid/issues">issues</a> section of <a href="http://github.com/kenglxn/Pomodroid">Pomodroid project</a>.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>331</wp:post_id>
		<wp:post_date>2010-08-19 15:08:35</wp:post_date>
		<wp:post_date_gmt>2010-08-19 13:08:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pomodoro-technique-and-my-idea-for-a-decent-android-app</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="pomodoro"><![CDATA[pomodoro]]></category>
		<category domain="post_tag" nicename="pomodorotechnique"><![CDATA[pomodorotechnique]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My Bash PS1 with git branch info</title>
		<link>http://www.glxn.net/?p=425</link>
		<pubDate>Wed, 04 Jan 2012 20:08:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=425</guid>
		<description></description>
		<content:encoded><![CDATA[I spent an hour playing around with my bash PS1 setting.
I wanted some useful information about which git branch I am on, and some colors. 

After reading a couple of articles on it like <a href="http://www.wiredrevolution.com/bash-programming/customize-the-bash-ps1-command-prompt" title="this one">this one</a> and <a href="http://www.thegeekstuff.com/2008/09/bash-shell-ps1-10-examples-to-make-your-linux-prompt-like-angelina-jolie/" title="this one">this one</a> I tried it a bit myself and ended up with this:

<a href="http://www.glxn.net/wp-content/uploads/2012/01/ps11.png"><img src="http://www.glxn.net/wp-content/uploads/2012/01/ps11-300x99.png" alt="" title="ps1" width="300" height="99" class="size-medium wp-image-430" /></a>

Here is the PS1 code:
[code lang="bash"]
PS1_END_SIGN=

export PS1='\[\e[1;33m\] \w\[\e[1;36m\]$(git branch &amp;&gt;/dev/null; if [ $? -eq 0 ]; then echo &quot; ($(git branch | grep '^*' |sed s/\*\ //))&quot;; fi) \[\e[1;37m\]$PS1_END_SIGN\[\e[00m\] '
[/code]

The PS1_END_SIGN can be set to anything you want. I chose lambda.
The PS1 setting includes some coloring and output of the current branch if you are in a git repository.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>425</wp:post_id>
		<wp:post_date>2012-01-04 21:08:10</wp:post_date>
		<wp:post_date_gmt>2012-01-04 20:08:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-bash-ps1-with-git-branch-info</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bash"><![CDATA[bash]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hosting maven artifact with github pages</title>
		<link>http://www.glxn.net/?p=435</link>
		<pubDate>Tue, 06 Mar 2012 15:14:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=435</guid>
		<description></description>
		<content:encoded><![CDATA[Using the steps described in the Github pages doc: <a href="http://pages.github.com/">http://pages.github.com/</a> we will create a directory hosting our website and maven repository on github.

First we clone the project to a new directory that will be dedicated to the gh-pages content root branch.
(If you want to get fancy you can do subfolders for each of the root branches, but we'll not be doing that here.)
[code lang="bash"]
 ~ $ git clone git@github.com:kenglxn/QRGen.git QRGen_pages
 ~ $ cd QRGen_pages/
[/code]

To initialize the gh-pages branch do the following:
[code lang="bash"]
 ~/dev/git/QRGen_pages (master) $ git symbolic-ref HEAD refs/heads/gh-pages
 ~/dev/git/QRGen_pages (master) $ rm .git/index
 ~/dev/git/QRGen_pages (master) $ git clean -fdx
[/code]

You are now on the gh-pages branch will be hosted under your account e.g. (<a href="http://kenglxn.github.com/QRGen/">http://kenglxn.github.com/QRGen/</a>)
Here we can create a page with some content for the users of our project, and also host our project as a maven artifact.

To host our project as a maven artifact we need to deploy it to a folder under gh-pages directory.

Create repository folder.
[code lang="bash"]
 ~/dev/git/QRGen_pages (gh-pages) $ mkdir repository
[/code]

Add distributionManagement section to the project pom.xml with the full path to the repository folder
[code lang="bash"]
 ~/dev/git/QRGen_pages (gh-pages) $ cd ../QRGen
 ~/dev/git/QRGen_pages (gh-pages) $ vi pom.xml

    &lt;distributionManagement&gt;
        &lt;repository&gt;
            &lt;id&gt;gh-pages&lt;/id&gt;
            &lt;url&gt;file:///${basedir}/../QRGen_pages/repository/&lt;/url&gt;
        &lt;/repository&gt;
    &lt;/distributionManagement&gt;
[/code]

At this point we can deploy the project with the following command
[code lang="bash"]
mvn clean deploy -DperformRelease=true
[/code]

Then we cd back to the gh-pages folder and check the result
[code lang="bash"]
 ~/dev/git/QRGen (master) $ cd -
/Users/kenglxn/dev/git/QRGen_pages
 ~/dev/git/QRGen_pages (gh-pages) $ ls -al repository/*/*/*
total 24
drwxr-xr-x   6 kenglxn  staff  204 Mar  6 15:06 .
drwxr-xr-x   3 kenglxn  staff  102 Mar  6 15:06 ..
drwxr-xr-x  14 kenglxn  staff  476 Mar  6 15:06 1.0
-rw-r--r--   1 kenglxn  staff  289 Mar  6 15:06 maven-metadata.xml
-rw-r--r--   1 kenglxn  staff   32 Mar  6 15:06 maven-metadata.xml.md5
-rw-r--r--   1 kenglxn  staff   40 Mar  6 15:06 maven-metadata.xml.sha1
[/code]

Everything looks as expected, now we add the repository folder to git, commit it, and push  to gh-pages
[code lang="bash"]
 ~/dev/git/QRGen_pages (gh-pages) $ git add repository
 ~/dev/git/QRGen_pages (gh-pages) $ git ci -m &quot;added repository folder with deployed artifact version 1.0&quot;
 ~/dev/git/QRGen_pages (gh-pages) $ git push origin gh-pages
[/code]

Our repository is now hosted on github and ready to use (e.g. http://kenglxn.github.com/QRGen/repository)
Keep in mind that gh-pages does not support directory listing, but this should not stop maven clients from getting the artifact.

Now people can use your project as a dependency. Following are examples of minimal project descriptors for gradle and maven
Gradle:
[code lang="groovy"]
group = 'net.glxn'
version = '1.0'
apply plugin: &quot;application&quot;
mainClassName = &quot;net.glxn.DepTest&quot;
repositories {
    mavenCentral()
    maven {
        url &quot;http://kenglxn.github.com/QRGen/repository&quot;
    }
}
dependencies {
    compile (&quot;net.glxn:qrgen:1.0&quot;)
}
[/code]

Maven pom.xml
[code lang="xml"]
&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

  &lt;groupId&gt;net.glxn&lt;/groupId&gt;
  &lt;artifactId&gt;deptest&lt;/artifactId&gt;
  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
  &lt;packaging&gt;jar&lt;/packaging&gt;
  &lt;name&gt;qrgen-deptest&lt;/name&gt;

  &lt;properties&gt;
    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
  &lt;/properties&gt;

  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;net.glxn&lt;/groupId&gt;
      &lt;artifactId&gt;qrgen&lt;/artifactId&gt;
      &lt;version&gt;1.0&lt;/version&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;

  &lt;repositories&gt;
    &lt;repository&gt;
      &lt;id&gt;QRGen&lt;/id&gt;
      &lt;name&gt;QRGen Repo&lt;/name&gt;
      &lt;url&gt;http://kenglxn.github.com/QRGen/repository&lt;/url&gt;
    &lt;/repository&gt;
  &lt;/repositories&gt;
&lt;/project&gt;

[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>435</wp:post_id>
		<wp:post_date>2012-03-06 16:14:41</wp:post_date>
		<wp:post_date_gmt>2012-03-06 15:14:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hosting-maven-artifact-with-github-pages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="post_tag" nicename="maven"><![CDATA[maven]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.glxn.net/?p=435]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{i:0;s:60:"Hosting maven artifact with github pages http://goo.gl/dFhoy";i:1;s:60:"Hosting maven artifact with github pages http://goo.gl/dFhoy";i:2;s:80:"Hosting maven artifact with github pages http://goo.gl/dFhoy #git #github #maven";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/dFhoy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>QRGen, a small wrapper on top of ZXING for generating QRCodes in java</title>
		<link>http://www.glxn.net/?p=445</link>
		<pubDate>Sat, 10 Mar 2012 17:19:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=445</guid>
		<description></description>
		<content:encoded><![CDATA[A couple of months ago I was looking at creating QR codes in java, and found <a href=" http://code.google.com/p/zxing/" title="ZXING">ZXING</a>, which is pretty awesome, you should check it out.

For convenience I made <a href="http://kenglxn.github.com/QRGen/" title="QRGen">a simple wrapper API</a> on top of zxing.

To put it to use just add the repository definition and dependency to your project:

example maven pom.xml
[code lang="xml"]
&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;groupId&gt;net.glxn&lt;/groupId&gt;
    &lt;artifactId&gt;qrgen&lt;/artifactId&gt;
    &lt;version&gt;1.1&lt;/version&gt;
  &lt;/dependency&gt;
&lt;/dependencies&gt;
 
&lt;repositories&gt;
  &lt;repository&gt;
    &lt;id&gt;QRGen&lt;/id&gt;
    &lt;name&gt;QRGen Repo&lt;/name&gt;
    &lt;url&gt;http://kenglxn.github.com/QRGen/repository&lt;/url&gt;
  &lt;/repository&gt;
&lt;/repositories&gt;
[/code]

example build.gradle:
[code lang="groovy"]
repositories {
  maven {
    url &quot;http://kenglxn.github.com/QRGen/repository&quot;
  }
}
dependencies {
  compile (&quot;net.glxn:qrgen:1.1&quot;)
}
[/code]

After that you can put it to use in your project:
[code lang="java"]
// get QR file from text using defaults
File file = QRCode.from(&quot;Hello World&quot;).file();
// get QR stream from text using defaults
ByteArrayOutputStream stream = QRCode.from(&quot;Hello World&quot;).stream();
 
// override the image type to be JPG
QRCode.from(&quot;Hello World&quot;).to(ImageType.JPG).file();
QRCode.from(&quot;Hello World&quot;).to(ImageType.JPG).stream();
 
// override image size to be 250x250
QRCode.from(&quot;Hello World&quot;).withSize(250, 250).file();
QRCode.from(&quot;Hello World&quot;).withSize(250, 250).stream();
 
// override size and image type
QRCode.from(&quot;Hello World&quot;).to(ImageType.GIF).withSize(250, 250).file();
QRCode.from(&quot;Hello World&quot;).to(ImageType.GIF).withSize(250, 250).stream();
 
// supply own outputstream
QRCode.from(&quot;Hello World&quot;).to(ImageType.PNG).writeTo(outputStream);
[/code]

See the github page for more info: <a href="http://kenglxn.github.com/QRGen/" title="http://kenglxn.github.com/QRGen/">http://kenglxn.github.com/QRGen/</a>

If you'd rather use <a href="http://code.google.com/p/zxing/" title="http://code.google.com/p/zxing/">ZXING</a> directly, you will be able to since it is a transitive dependency of QRGen, but you could also just add the ZXING repository definition and dependency to your project:
[code lang="xml"]
    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;
            &lt;artifactId&gt;core&lt;/artifactId&gt;
            &lt;version&gt;2.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;
            &lt;artifactId&gt;javase&lt;/artifactId&gt;
            &lt;version&gt;2.0&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
    &lt;repositories&gt;
        &lt;repository&gt;
            &lt;id&gt;google-releases&lt;/id&gt;
            &lt;url&gt;https://oss.sonatype.org/content/repositories/releases&lt;/url&gt;
        &lt;/repository&gt;
    &lt;/repositories&gt;
[/code]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>445</wp:post_id>
		<wp:post_date>2012-03-10 18:19:21</wp:post_date>
		<wp:post_date_gmt>2012-03-10 17:19:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>qrgen-a-small-wrapper-on-top-of-zxing-for-generating-qrcodes-in-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="qrcode"><![CDATA[qrcode]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="zxing"><![CDATA[zxing]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:112:"QRGen, a small wrapper on top of ZXING for generating QRCodes in java http://goo.gl/AUJ7D ##qrcode ##zxing #Java";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/AUJ7D]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>266</wp:comment_id>
			<wp:comment_author><![CDATA[nkpap]]></wp:comment_author>
			<wp:comment_author_email>nkpapas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>188.4.187.169</wp:comment_author_IP>
			<wp:comment_date>2012-09-20 08:42:30</wp:comment_date>
			<wp:comment_date_gmt>2012-09-20 06:42:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[the repository  (http://kenglxn.github.com/QRGen/repository) is not working...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1348123350.2788";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1348123477.2544";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>269</wp:comment_id>
			<wp:comment_author><![CDATA[Don]]></wp:comment_author>
			<wp:comment_author_email>me@donpeter.in</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.204.96.248</wp:comment_author_IP>
			<wp:comment_date>2012-12-14 08:35:08</wp:comment_date>
			<wp:comment_date_gmt>2012-12-14 07:35:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi
I successfully used Qrgen to create the qrcode in java.
But i have a hard time including it in android.
Would mind suggesting me how to use it in android to create and display the QRcode?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1355486596.3148";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1355470508.6425";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>270</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>77.88.84.14</wp:comment_author_IP>
			<wp:comment_date>2012-12-14 13:07:57</wp:comment_date>
			<wp:comment_date_gmt>2012-12-14 12:07:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Don.

You should put all 3rd party library into folder named libs in the android project. That should be enough. 
Here is one of several discussions on the topic on stackoverflow: http://stackoverflow.com/questions/1334802/how-can-i-use-external-jars-in-an-android-project

Hope it helps :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1355486877.2112";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>268</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Gullaksen]]></wp:comment_author>
			<wp:comment_author_email>ken@glxn.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.glxn.net</wp:comment_author_url>
			<wp:comment_author_IP>64.103.25.102</wp:comment_author_IP>
			<wp:comment_date>2012-09-20 09:56:19</wp:comment_date>
			<wp:comment_date_gmt>2012-09-20 07:56:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Strange. I just tested it with a scratch project and it worked fine. 
Be aware that Github Pages does not support directory listing, so you will not be able to browse the repository, but maven will still be able to resolve the artifacts.

Here is the pom i used for my test just now:
[code lang="xml"]
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;
         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;QRGen_test&lt;/groupId&gt;
    &lt;artifactId&gt;QRGen_test&lt;/artifactId&gt;
    &lt;version&gt;1.0&lt;/version&gt;

    &lt;dependencies&gt;
      &lt;dependency&gt;
        &lt;groupId&gt;net.glxn&lt;/groupId&gt;
        &lt;artifactId&gt;qrgen&lt;/artifactId&gt;
        &lt;version&gt;1.1&lt;/version&gt;
      &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;repositories&gt;
      &lt;repository&gt;
        &lt;id&gt;QRGen&lt;/id&gt;
        &lt;name&gt;QRGen Repo&lt;/name&gt;
        &lt;url&gt;http://kenglxn.github.com/QRGen/repository&lt;/url&gt;
      &lt;/repository&gt;
    &lt;/repositories&gt;
    
&lt;/project&gt;
[/code]

If this still does not work, could you give me the output you get from maven?

I have also created a new repository as an alternative: https://github.com/kenglxn/QRGen_repo/raw/master/repository
(alternative repo based on <a href="https://twitter.com/cemerick" rel="nofollow">@cemerick</a>'s solution to maven repos on github: http://cemerick.com/2010/08/24/hosting-maven-repos-on-github/)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>266</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1348127779.4151";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Using Sublime Text 2 as git commit message editor</title>
		<link>http://www.glxn.net/?p=497</link>
		<pubDate>Tue, 14 Aug 2012 06:55:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=497</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.sublimetext.com/">Sublime Text Edit</a> is a very nice, lightweight, and highly custimizable editor for Mac. 

Once you have it installed, set up a symlink so you can launch it from the command line.
<em>NOTE: do not use alias, as it behaves differently, and wont necessarily play nice with git.</em>

[code lang="bash"]
sudo ln -s /Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl /usr/bin/subl
[/code]

This will enable you to launch subl with a directory argument, such as:

[code lang="bash"]
subl ~/projects/foo
## or
subl .
[/code]

Git can be configured to use this editor with the following command:
[code lang="bash"]
git config --global core.editor &quot;subl --wait&quot;
[/code]

Now Sublime will pop up when you do a git commit without a message. After writing the commit message, just save and quit sublime.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>497</wp:post_id>
		<wp:post_date>2012-08-14 08:55:13</wp:post_date>
		<wp:post_date_gmt>2012-08-14 06:55:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-sublime-text-2-as-git-commit-message-editor</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_clig</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_bitly</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_wp</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_yourls</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.glxn.net/?p=497]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:70:"Using Sublime Text 2 as git commit message editor http://goo.gl/U4j1P ";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_post_meta_fixed</wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/U4j1P]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using IntelliJ IDEA as mergetool for git</title>
		<link>http://www.glxn.net/?p=512</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=512</guid>
		<description></description>
		<content:encoded><![CDATA[youtrack.jetbrains.com/issue/IDEA-69292]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>512</wp:post_id>
		<wp:post_date>2013-01-28 22:55:32</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Git pre commit hook for JIRA issue tags</title>
		<link>http://www.glxn.net/?p=514</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.glxn.net/?p=514</guid>
		<description></description>
		<content:encoded><![CDATA[this hook will autotag commit message with jira tag if on branch]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>514</wp:post_id>
		<wp:post_date>2013-01-28 22:56:36</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
